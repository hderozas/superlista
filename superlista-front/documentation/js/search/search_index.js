var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActualizarRecetasMenuDto.html",[0,0.352,1,2.643]],["body/interfaces/ActualizarRecetasMenuDto.html",[0,0.54,1,4.738,2,1.607,3,0.301,4,0.301,5,0.27,6,4.975,7,0.468,8,0.86,9,0.886,10,5.676,11,4.44,12,2.753,13,0.506,14,0.018,15,2.623,16,0.577,17,4.066,18,0.301,19,0.015,20,0.015]],["title/interfaces/ActualizarUsuarioDto.html",[0,0.352,21,2.643]],["body/interfaces/ActualizarUsuarioDto.html",[0,0.496,2,1.477,3,0.277,4,0.277,5,0.248,7,0.43,8,0.818,9,0.935,13,0.559,14,0.017,18,0.277,19,0.015,20,0.015,21,4.507,22,4.574,23,0.755,24,1.786,25,2.993,26,2.993,27,0.641,28,2.813,29,2.993,30,2.653,31,3.618,32,3.618,33,2.993,34,2.993,35,5.033,36,5.033,37,2.899,38,5.522,39,5.522,40,3.798,41,1.829]],["title/modules/ApiModule.html",[42,1.449,43,2.438]],["body/modules/ApiModule.html",[3,0.269,4,0.269,5,0.241,9,0.854,13,0.387,14,0.018,16,0.728,18,0.269,19,0.014,20,0.014,27,0.515,43,4.598,44,2.437,45,5.158,46,1.041,47,6.307,48,5.158,49,6.307,50,1.986,51,0.946,52,5.158,53,1.041,54,0.62,55,6.307,56,3.341,57,0.946,58,6.813,59,3.841,60,6.307,61,1.091,62,2.484,63,4.858,64,1.805,65,2.086,66,3.341,67,2.733,68,4.086,69,2.908,70,1.986,71,3.973,72,5.158,73,1.645,74,6.307,75,4.858,76,4.858,77,1.922,78,5.158,79,5.158,80,5.158,81,5.158,82,3.8,83,5.158,84,3.973,85,4.444,86,5.158,87,3.973,88,5.158]],["title/components/AppComponent.html",[89,0.595,90,1.257]],["body/components/AppComponent.html",[3,0.239,4,0.239,5,0.214,14,0.018,16,0.458,18,0.239,19,0.013,20,0.013,23,0.833,27,0.458,54,0.777,61,0.969,89,1.075,90,2.349,91,2.149,92,1.853,93,1.853,94,1.853,95,3.949,96,2.255,97,3.795,98,4.1,99,1.593,100,1.827,101,1.868,102,2.623,103,1.957,104,5.858,105,3.4,106,5.047,107,3.104,108,1.422,109,5.047,110,5.047,111,3.009,112,1.558,113,5.858,114,5.858,115,5.047,116,1.868,117,1.853,118,3.154,119,2.491,120,5.858,121,2.927,122,5.858,123,1.949,124,1.604,125,1.531,126,2.369,127,2.255,128,1.853,129,2.752,130,1.853,131,1.853,132,1.462,133,1.682,134,2.369,135,1.604,136,1.765,137,1.682,138,1.853,139,1.462,140,1.853,141,1.396,142,1.853,143,1.462,144,1.531,145,1.853,146,1.531,147,2.369,148,1.462,149,2.369,150,1.531,151,2.369,152,1.531,153,1.853,154,1.462,155,1.853,156,1.462,157,1.462,158,2.255,159,1.853,160,1.462,161,1.853,162,1.396,163,1.853,164,1.531,165,1.462,166,1.682,167,1.765,168,1.853]],["title/modules/AppModule.html",[42,1.449,82,2.267]],["body/modules/AppModule.html",[3,0.187,4,0.187,5,0.168,14,0.018,16,0.763,18,0.187,19,0.011,20,0.011,23,0.708,24,0.998,27,0.359,42,1.916,43,4.454,44,1.696,54,0.599,59,2.805,61,0.759,62,1.742,64,1.742,65,2.012,66,3.701,67,3.027,68,3.701,71,2.764,75,3.833,77,1.093,82,4.686,85,4.287,89,0.567,90,2.453,96,1.916,97,3.997,99,1.486,100,1.265,101,1.587,102,2.763,103,1.662,107,2.636,108,1.628,111,1.382,112,1.64,116,1.587,125,1.199,135,1.742,136,2.375,137,2.096,139,2.139,143,2.139,144,1.199,148,2.139,150,2.453,157,2.139,160,2.139,162,2.043,166,1.826,169,2.162,170,2.854,171,3.092,172,3.092,173,3.092,174,3.092,175,3.092,176,3.092,177,4.344,178,4.541,179,3.494,180,2.52,181,2.325,182,3.589,183,2.998,184,4.977,185,2.264,186,3.997,187,4.977,188,3.833,189,2.998,190,5.315,191,4.977,192,4.977,193,4.977,194,4.287,195,4.977,196,1.866,197,4.977,198,3.833,199,4.287,200,1.796,201,4.977,202,2.229,203,2.805,204,4.287,205,2.805,206,4.977,207,4.287,208,4.977,209,4.977,210,4.977,211,4.287,212,2.764,213,4.287,214,3.589,215,2.764,216,3.589,217,2.162,218,2.351,219,1.696,220,4.977,221,3.092,222,2.162,223,4.287,224,2.52,225,3.092,226,4.977,227,2.764,228,2.764,229,3.589,230,2.764,231,3.589,232,4.977,233,3.589,234,2.764,235,3.092,236,3.092,237,4.287,238,2.52,239,3.092,240,2.325,241,3.092,242,2.52,243,3.092,244,3.589,245,2.162,246,3.589,247,3.589,248,2.325,249,3.092,250,3.092,251,1.199]],["title/modules/AppRoutingModule.html",[42,1.449,177,2.438]],["body/modules/AppRoutingModule.html",[3,0.261,4,0.261,5,0.234,14,0.018,16,0.702,18,0.261,19,0.014,20,0.014,23,0.712,27,0.5,42,1.925,44,2.363,54,0.602,59,3.489,61,1.058,65,2.022,67,2.649,89,0.79,97,3.24,99,1.556,100,1.708,101,1.974,102,2.24,103,1.67,107,2.649,108,1.214,116,1.595,143,1.974,144,2.067,177,4.353,183,4.049,196,1.722,205,3.489,242,3.512,243,4.309,252,5.001,253,3.852,254,4.767,255,4.049,256,1.925,257,4.353,258,5.001,259,1.67,260,3.72,261,3.852,262,6.189,263,5.001,264,5.001,265,4.767,266,4.309,267,5.001,268,5.001,269,5.001,270,2.363,271,3.512,272,1.925,273,3.729,274,3.852,275,3.24,276,4.309,277,5.001,278,5.001,279,3.852,280,4.309,281,2.363,282,1.595,283,5.001,284,5.001,285,5.001,286,6.189]],["title/injectables/AuthControllerService.html",[287,1.685,288,2.438]],["body/injectables/AuthControllerService.html",[3,0.154,4,0.154,5,0.138,7,0.239,8,0.552,9,0.842,13,0.562,14,0.018,16,0.69,18,0.154,19,0.01,20,0.01,23,0.421,27,0.295,41,1.674,46,0.874,51,1.3,53,1.344,54,0.801,57,1.191,61,0.625,62,2.479,63,4.843,64,1.034,69,4.17,70,1.975,73,0.943,76,2.277,77,1.563,98,1.781,124,1.517,245,3.624,251,0.987,259,2.009,287,1.941,288,2.807,289,1.915,290,2.547,291,3.338,292,4.476,293,4.315,294,2.047,295,3.323,296,4.403,297,3.338,298,3.338,299,3.338,300,2.547,301,2.956,302,3.231,303,5.739,304,4.871,305,6.263,306,6.263,307,3.313,308,4.589,309,4.014,310,2.956,311,3.733,312,3.733,313,2.296,314,2.978,315,5.739,316,4.224,317,4.42,318,3.733,319,3.733,320,3.733,321,3.733,322,2.807,323,3.733,324,2.956,325,2.956,326,2.956,327,1.714,328,2.072,329,2.277,330,4.403,331,2.402,332,5.596,333,2.547,334,2.277,335,2.547,336,2.277,337,2.547,338,3.338,339,2.547,340,2.547,341,1.843,342,2.547,343,2.611,344,2.547,345,2.547,346,2.547,347,2.277,348,5.596,349,1.781,350,1.138,351,4.42,352,4.42,353,2.547,354,2.956,355,2.956,356,2.076,357,2.076,358,2.076,359,2.547,360,3.043,361,2.956,362,1.915,363,1.195,364,2.547,365,2.547,366,2.277,367,2.547,368,1.19,369,4.868,370,4.414,371,5.182,372,5.182,373,2.443,374,3.544,375,2.956,376,1.915,377,2.956,378,4.868,379,2.547,380,4.868,381,2.547,382,2.547,383,2.547,384,3.733,385,2.547,386,3.733,387,2.547,388,2.277,389,2.277,390,2.076,391,5.13,392,2.956,393,2.956,394,5.182,395,2.807,396,3.323,397,3.733,398,2.547,399,2.547,400,2.547,401,2.956,402,2.956,403,2.547,404,2.547,405,2.076,406,2.547,407,2.076]],["title/interfaces/AuthControllerServiceInterface.html",[0,0.352,360,2.643]],["body/interfaces/AuthControllerServiceInterface.html",[0,0.501,2,1.492,3,0.28,4,0.28,5,0.251,7,0.435,8,0.823,9,0.645,13,0.52,14,0.018,16,0.736,18,0.28,19,0.015,20,0.015,46,1.303,51,0.984,53,1.083,54,0.645,57,0.984,62,2.687,64,1.877,294,3.399,296,4.184,302,2.402,303,5.565,304,4.843,314,2.947,341,3.059,350,2.065,353,4.621,360,4.535,368,1.244,408,4.621,409,3.907,410,5.364,411,3.641]],["title/guards/AuthGuard.html",[257,2.438,412,2.643]],["body/guards/AuthGuard.html",[3,0.226,4,0.226,5,0.203,7,0.351,9,0.522,13,0.325,14,0.018,16,0.565,18,0.226,19,0.013,20,0.013,23,0.895,27,0.433,46,1.141,51,1.037,53,0.875,54,0.68,57,1.037,61,0.917,70,2.176,73,2.006,89,0.893,98,2.613,99,1.676,100,1.801,101,1.803,103,1.888,108,1.372,112,1.503,116,1.803,124,2.201,141,1.722,196,1.573,200,1.646,205,3.756,251,2.101,256,1.669,257,4.477,259,1.448,260,2.995,261,4.354,266,6.305,270,2.671,272,2.176,273,3.406,282,1.803,287,2.531,307,2.531,362,2.809,363,1.753,368,1.006,412,4.853,413,4.336,414,3.736,415,2.176,416,5.652,417,4.87,418,5.652,419,5.652,420,3.217,421,4.354,422,4.498,423,1.803,424,3.969,425,3.969,426,4.87,427,5.652,428,4.976,429,3.756,430,2.286,431,2.671,432,2.995,433,4.87,434,2.613,435,3.41,436,4.336,437,2.404,438,5.652,439,4.336,440,5.652,441,3.969,442,5.652,443,5.652,444,5.652,445,2.297,446,3.34,447,4.336]],["title/interceptors/AuthInterceptor.html",[178,2.438,448,2.899]],["body/interceptors/AuthInterceptor.html",[3,0.194,4,0.194,5,0.174,7,0.301,9,0.613,13,0.382,14,0.018,16,0.656,18,0.194,19,0.012,20,0.012,23,0.891,27,0.371,41,0.861,46,1.028,51,0.935,53,1.028,54,0.7,56,2.406,57,1.067,61,0.785,64,1.3,70,2.24,71,3.925,73,1.855,75,5.445,99,1.387,100,1.591,107,2.7,108,1.412,112,1.802,116,1.625,124,1.3,178,4.25,196,2.055,200,1.823,213,4.39,249,4.39,250,4.39,251,1.943,256,1.43,259,2.091,270,2.408,272,2.609,282,1.855,287,2.282,307,1.663,314,2.79,347,2.861,350,1.43,363,1.502,368,1.452,415,1.962,420,3.115,421,3.925,422,4.602,423,1.625,429,2.872,430,2.06,431,2.408,432,2.7,434,2.237,435,3.279,437,2.167,445,1.967,446,2.861,448,5.053,449,3.714,450,2.861,451,5.393,452,5.393,453,5.096,454,6.26,455,6.26,456,3.925,457,2.605,458,6.56,459,3.301,460,5.838,461,3.925,462,5.096,463,3.714,464,3.925,465,5.096,466,5.096,467,6.26,468,3.317,469,6.26,470,3.714,471,5.096,472,4.39,473,5.817,474,4.39,475,5.096,476,4.822,477,5.817,478,5.096,479,5.096,480,5.096,481,3.578,482,5.096,483,5.096,484,5.096,485,3.714,486,3.714,487,3.714,488,3.714,489,3.714,490,2.861,491,3.714,492,3.714,493,3.714,494,4.39,495,3.714,496,2.861,497,3.199,498,3.199,499,3.199,500,2.861,501,1.967,502,3.199,503,3.714,504,3.199,505,3.714,506,3.714,507,3.714,508,3.714,509,3.714]],["title/modules/AuthModule.html",[42,1.449,510,2.438]],["body/modules/AuthModule.html",[3,0.218,4,0.218,5,0.195,14,0.018,16,0.725,18,0.218,19,0.013,20,0.013,23,0.784,27,0.417,42,2.122,44,1.971,54,0.502,59,3.106,61,0.882,65,2.228,66,3.997,67,2.21,68,2.702,99,1.667,100,1.781,101,2.094,103,1.841,105,2.753,108,1.8,109,4.747,112,1.465,125,1.393,154,2.315,162,2.211,165,2.315,169,2.513,170,2.084,179,3.869,180,2.929,181,2.702,183,4.373,185,2.022,186,3.57,188,4.245,189,3.32,190,4.747,196,1.533,200,1.604,202,2.468,204,4.747,205,4.091,215,3.213,217,3.955,218,1.971,219,1.971,222,2.513,261,3.213,271,3.869,272,2.122,273,3.32,274,4.245,430,2.228,431,2.604,510,4.901,511,3.594,512,3.594,513,3.594,514,4.701,515,4.171,516,4.252,517,4.747,518,4.747,519,5.51,520,3.57,521,3.32,522,4.747,523,3.869,524,4.245,525,4.747,526,5.51,527,5.655,528,6.564,529,5.51,530,4.245,531,5.51,532,2.753,533,3.106,534,3.869,535,4.747,536,5.51,537,5.51,538,2.753,539,4.245,540,5.51,541,5.51,542,3.869,543,3.869,544,1.868,545,3.594,546,3.594,547,2.21]],["title/modules/AuthRoutingModule.html",[42,1.449,514,2.438]],["body/modules/AuthRoutingModule.html",[3,0.266,4,0.266,5,0.238,14,0.018,16,0.706,18,0.266,19,0.014,20,0.014,23,0.725,27,0.509,42,1.961,44,2.406,54,0.613,59,3.528,61,1.077,65,2.059,67,2.698,89,0.989,99,1.566,100,1.877,101,1.624,103,1.701,108,1.645,112,1.664,154,2.161,165,2.161,166,2.296,183,3.77,188,3.923,196,1.417,199,4.387,200,1.822,205,2.871,253,3.923,254,4.821,255,4.082,256,1.961,259,1.701,260,3.315,270,2.406,271,3.576,272,1.961,273,3.77,296,4.054,423,1.996,441,4.394,510,3.299,514,4.389,516,3.299,539,3.923,542,3.576,545,4.387,546,4.387,548,5.093,549,4.387,550,4.387,551,3.923,552,6.258,553,2.281,554,5.093,555,5.093,556,5.093,557,5.093,558,4.387,559,4.387]],["title/classes/BaseService.html",[27,0.376,292,2.438]],["body/classes/BaseService.html",[3,0.193,4,0.193,5,0.173,7,0.3,8,0.648,9,0.752,12,1.959,13,0.52,14,0.018,16,0.581,18,0.193,19,0.012,20,0.012,27,0.37,41,1.752,46,1.027,51,1.296,53,1.262,54,0.752,57,1.066,62,2.631,64,1.297,69,4.041,70,2.671,73,1.182,76,3.92,77,1.906,127,1.427,245,4.257,259,1.7,292,3.296,293,4.783,294,2.746,295,4.052,297,3.92,298,3.92,299,3.92,302,2.936,307,2.279,313,1.963,327,1.7,328,2.443,329,3.92,330,4.931,331,3.181,334,3.92,336,3.92,338,2.855,341,2.471,343,3.501,349,3.066,366,2.855,373,3.818,374,3.276,396,2.401,560,2.602,561,3.193,562,5.088,563,5.088,564,3.706,565,3.706,566,3.706,567,3.706,568,3.706,569,3.706,570,3.706,571,4.818,572,5.088,573,5.811,574,3.706,575,3.706,576,2.855,577,2.855,578,3.706,579,3.706,580,2.855,581,4.392,582,4.052,583,3.706,584,5.088,585,2.855,586,3.92,587,6.255,588,2.602,589,3.706,590,3.706,591,5.811,592,3.706,593,2.855,594,3.706,595,3.706,596,3.706,597,3.706,598,3.706,599,3.706,600,5.088,601,3.706,602,5.088,603,3.706,604,3.193,605,3.706]],["title/interfaces/CategoriaIngredienteDto.html",[0,0.352,606,2.438]],["body/interfaces/CategoriaIngredienteDto.html",[0,0.522,2,1.552,3,0.291,4,0.291,5,0.261,7,0.452,8,0.842,9,0.907,13,0.528,14,0.017,15,2.586,18,0.291,19,0.015,20,0.015,23,0.794,24,1.84,25,3.145,26,3.145,27,0.661,28,2.956,29,3.145,30,2.787,31,3.727,32,3.727,33,3.145,34,3.145,37,2.947,41,1.75,606,4.283,607,4.806,608,7.287,609,3.861]],["title/injectables/CategoriaIngredienteService.html",[287,1.685,610,2.438]],["body/injectables/CategoriaIngredienteService.html",[3,0.165,4,0.165,5,0.148,7,0.257,8,0.581,9,0.855,13,0.562,14,0.018,16,0.691,18,0.165,19,0.01,20,0.01,23,0.451,27,0.317,41,1.666,46,0.92,51,1.317,53,1.371,54,0.817,57,1.217,61,0.671,62,2.513,63,4.962,64,1.11,69,4.21,70,2.056,73,1.011,77,1.389,98,1.91,124,1.596,245,3.727,251,1.059,259,1.784,287,2.042,289,2.054,291,3.512,292,4.548,293,4.399,294,2.154,295,3.459,297,3.512,298,3.512,299,3.512,300,2.732,302,3.27,305,5.718,306,6.333,307,3.345,308,4.652,309,4.092,311,3.928,312,3.928,313,2.416,314,3.022,315,5.718,316,4.344,317,4.6,318,3.928,319,3.928,320,3.928,321,3.928,322,2.954,323,3.928,327,1.784,328,2.117,329,2.442,330,4.481,331,2.483,332,5.718,333,2.732,334,2.442,335,2.732,336,2.442,337,2.732,338,2.442,339,2.732,340,2.732,341,1.939,342,2.732,343,2.747,344,2.732,345,2.732,346,2.732,347,2.442,348,5.718,349,1.91,350,1.221,351,3.928,352,3.928,356,2.226,357,2.226,358,2.226,359,2.732,362,2.054,363,1.282,364,2.732,365,2.732,366,2.442,367,2.732,368,1.058,369,5.03,370,4.344,371,5.329,372,5.329,374,2.57,378,4.6,379,2.732,380,5.03,381,2.732,382,2.732,383,2.732,384,3.928,385,2.732,386,3.928,387,2.732,394,5.329,395,2.954,396,3.459,397,3.928,398,2.732,399,2.732,400,2.732,403,2.732,404,2.732,405,2.226,406,2.732,407,2.226,606,2.054,610,2.954,611,2.732,612,5.851,613,3.171,614,6.792,615,3.171,616,3.171,617,3.171,618,3.171,619,3.171,620,3.202,621,3.171,622,2.226,623,1.584,624,3.171]],["title/interfaces/CategoriaIngredienteServiceInterface.html",[0,0.352,620,2.643]],["body/interfaces/CategoriaIngredienteServiceInterface.html",[0,0.512,2,1.524,3,0.286,4,0.286,5,0.256,7,0.444,8,0.833,9,0.659,13,0.524,14,0.018,16,0.724,18,0.286,19,0.015,20,0.015,46,1.32,51,1.005,53,1.105,54,0.659,57,1.005,62,2.696,64,1.917,294,3.423,302,2.453,314,2.974,341,3.08,350,2.109,409,3.088,411,3.088,606,3.548,612,5.635,620,4.593,625,4.719,626,6.541,627,5.478]],["title/classes/Configuration.html",[27,0.376,62,1.317]],["body/classes/Configuration.html",[0,0.21,3,0.117,4,0.117,5,0.105,7,0.182,8,0.448,9,0.872,12,1.889,13,0.575,14,0.018,16,0.351,18,0.183,19,0.008,20,0.008,23,0.617,24,1.206,27,0.224,30,1.121,40,2.599,41,1.807,46,0.709,51,1.29,53,1.345,54,0.735,56,2.277,57,1.153,62,1.864,64,0.785,69,3.994,70,2.685,73,0.716,77,0.684,84,2.708,87,3.339,102,1.005,124,1.23,245,2.956,251,1.174,259,1.973,260,2.296,295,3.178,302,1.005,307,2.386,309,2.118,322,3.178,327,0.749,328,2.181,330,3.66,331,2.265,341,2.403,343,2.956,368,1.586,370,4.148,373,1.265,374,3.932,376,2.808,388,3.779,389,5.528,396,3.66,405,3.445,407,3.445,490,3.339,560,1.575,571,1.728,576,1.728,577,1.728,582,3.451,585,3.339,586,1.728,588,1.575,593,2.708,628,1.728,629,4.226,630,4.226,631,5.74,632,4.226,633,2.451,634,3.515,635,3.515,636,2.048,637,3.515,638,3.515,639,3.515,640,3.515,641,3.734,642,3.028,643,3.74,644,3.515,645,5.268,646,5.82,647,5.268,648,2.243,649,4.868,650,2.243,651,2.243,652,3.734,653,3.734,654,3.734,655,3.734,656,2.808,657,3.734,658,3.734,659,3.734,660,3.043,661,3.734,662,3.734,663,3.734,664,2.243,665,4.868,666,3.734,667,2.765,668,3.734,669,3.734,670,3.734,671,2.243,672,3.734,673,3.734,674,3.559,675,2.296,676,2.243,677,2.243,678,2.243,679,3.028,680,3.734,681,4.226,682,2.243,683,3.515,684,3.028,685,3.734,686,2.243,687,3.028,688,2.243,689,3.028,690,2.243,691,3.028,692,4.226,693,5.82,694,3.028,695,3.028,696,3.028,697,3.028,698,3.028,699,3.028,700,3.028,701,3.028,702,2.243,703,3.028,704,2.243,705,3.779,706,5.268,707,4.226,708,4.226,709,5.268,710,4.226,711,5.089,712,4.226,713,3.028,714,3.445,715,3.779,716,5.268,717,4.226,718,4.226,719,2.243,720,2.243,721,1.933,722,1.933,723,3.779,724,1.933,725,1.933,726,1.933,727,1.933,728,1.933,729,1.933,730,1.933,731,1.933,732,1.933,733,1.933,734,1.933,735,1.933,736,3.028,737,3.028,738,1.933,739,3.028,740,3.028,741,3.028,742,1.933,743,1.862,744,1.933,745,3.028,746,1.933,747,1.933,748,1.933,749,1.933,750,1.933,751,1.933,752,1.933,753,3.028,754,1.933,755,1.933,756,1.933,757,1.933,758,1.933,759,3.028,760,1.933,761,1.933,762,1.933,763,1.933,764,1.933,765,1.933,766,1.933,767,1.933,768,1.933,769,1.933,770,1.933,771,3.028,772,1.575,773,1.453,774,1.933,775,2.468,776,1.575,777,1.933,778,1.933,779,1.933,780,1.933,781,1.933,782,1.933,783,1.728,784,1.933,785,1.933,786,3.734,787,1.933,788,1.933]],["title/interfaces/ConfigurationParameters.html",[0,0.352,643,2.643]],["body/interfaces/ConfigurationParameters.html",[0,0.248,2,0.739,3,0.138,4,0.138,5,0.124,7,0.215,8,0.51,9,0.876,12,1.54,13,0.568,14,0.018,16,0.4,18,0.209,19,0.009,20,0.009,24,1.339,27,0.265,30,1.326,40,3.046,41,1.8,53,1.16,56,3.119,57,0.734,62,1.4,64,0.929,69,3.407,70,2.724,77,0.809,84,3.082,87,3.708,102,1.189,124,0.929,245,3.464,251,0.887,259,2.095,260,2.55,295,3.725,307,2.575,309,3.229,322,2.592,327,1.336,328,2.257,330,3.119,331,2.279,341,2.047,343,3.464,368,1.586,370,3.763,373,1.496,374,3.854,376,2.592,388,3.082,389,5.185,396,3.119,405,4.037,407,2.809,490,3.708,571,2.045,576,2.045,577,2.045,582,3.725,585,3.708,586,2.045,588,1.864,593,2.045,628,2.045,629,4.954,630,4.954,631,6.036,632,4.954,633,2.873,636,1.254,641,2.287,642,2.287,643,3.381,645,5.562,646,5.89,647,5.562,649,5.207,652,4.148,653,4.148,654,4.148,655,4.148,656,3.119,657,4.148,658,4.148,659,4.148,660,3.381,661,4.148,662,4.148,663,4.148,665,5.207,666,4.148,667,3.021,668,4.148,669,4.148,670,4.148,672,4.148,673,4.148,674,3.464,675,2.55,679,2.287,680,2.287,681,3.447,684,2.287,685,2.287,687,2.287,689,2.287,691,2.287,692,3.447,693,5.404,694,2.287,695,2.287,696,2.287,697,2.287,698,2.287,699,2.287,700,2.287,701,2.287,703,2.287,705,3.082,706,4.617,707,3.447,708,3.447,709,4.617,710,3.447,711,4.617,712,3.447,713,2.287,714,2.809,715,3.082,716,4.617,717,3.447,718,3.447,721,3.447,722,3.447,723,4.128,724,2.287,725,2.287,726,2.287,727,2.287,728,2.287,729,2.287,730,2.287,731,2.287,732,2.287,733,2.287,734,2.287,735,2.287,736,3.447,737,3.447,738,2.287,739,3.447,740,3.447,741,3.447,742,2.287,743,2.119,744,2.287,745,3.447,746,2.287,747,2.287,748,2.287,749,2.287,750,2.287,751,2.287,752,2.287,753,3.447,754,2.287,755,2.287,756,2.287,757,2.287,758,2.287,759,3.447,760,2.287,761,2.287,762,2.287,763,2.287,764,2.287,765,2.287,766,2.287,767,2.287,768,2.287,769,2.287,770,2.287,771,3.447,772,1.864,773,1.72,774,2.287,775,2.809,776,1.864,777,2.287,778,2.287,779,2.287,780,2.287,781,2.287,782,2.287,783,2.045,784,2.287,785,2.287,786,4.148,787,2.287,788,2.287]],["title/components/CrearMenuComponent.html",[89,0.595,132,1.2]],["body/components/CrearMenuComponent.html",[3,0.175,4,0.175,5,0.156,7,0.271,8,0.604,9,0.403,11,4.063,13,0.413,14,0.018,15,1.739,16,0.598,17,2.016,18,0.175,19,0.011,20,0.011,23,0.783,24,0.931,27,0.334,46,0.956,50,1.824,51,1.098,53,0.675,54,0.72,57,0.614,61,0.708,73,1.755,89,0.945,90,1.118,91,1.739,92,1.353,93,1.353,94,1.353,96,2.525,99,1.651,100,1.872,101,1.511,103,1.583,108,1.453,111,2.895,112,1.26,116,1.511,117,1.353,118,3.053,119,2.015,123,1.423,124,1.171,125,1.118,126,1.916,127,1.824,128,1.353,129,2.42,130,1.353,131,1.353,132,2.014,133,2.527,134,1.916,135,1.171,136,1.288,137,1.228,138,1.353,139,1.067,140,1.353,141,1.02,142,1.353,143,1.067,144,1.118,145,1.353,146,1.118,147,1.916,148,1.067,149,1.916,150,1.118,151,1.916,152,1.118,153,1.353,154,1.067,155,1.353,156,1.067,157,1.067,158,2.304,159,1.353,160,1.067,161,1.353,162,1.02,163,1.353,164,1.118,165,1.067,166,1.228,167,1.288,168,1.353,185,2.406,194,4.083,196,1.824,200,1.909,256,1.288,259,1.583,281,2.239,282,1.511,327,1.583,328,1.511,363,1.916,368,0.776,373,3.697,420,2.929,423,1.909,435,1.581,437,2.015,441,4.605,445,1.773,459,3.07,501,2.511,530,3.65,551,3.65,553,2.122,609,3.346,622,4.735,667,1.886,674,3.605,789,5.441,790,4.435,791,2.883,792,3.07,793,2.855,794,3.876,795,2.368,796,3.951,797,4.15,798,3.328,799,3.605,800,6.888,801,4.609,802,5.984,803,4.083,804,3.876,805,3.876,806,5.984,807,3.65,808,3.65,809,5.984,810,4.739,811,4.739,812,2.915,813,3.65,814,4.74,815,4.083,816,3.17,817,3.346,818,5.155,819,4.739,820,5.502,821,3.346,822,2.855,823,2.855,824,3.605,825,3.346,826,4.739,827,2.578,828,2.016,829,1.773,830,3.346,831,3.346,832,4.739,833,3.346,834,2.883,835,3.346,836,3.346,837,2.883]],["title/classes/CustomHttpParameterCodec.html",[27,0.376,349,2.267]],["body/classes/CustomHttpParameterCodec.html",[3,0.264,4,0.264,5,0.237,7,0.411,9,0.849,13,0.529,14,0.018,16,0.507,18,0.264,19,0.014,20,0.014,23,0.721,27,0.507,41,1.828,46,1.26,51,1.294,53,1.424,54,0.849,57,1.294,64,1.775,70,2.717,343,4.365,349,3.761,363,2.524,560,3.561,604,5.378,838,4.369,839,4.808,840,6.242,841,6.242,842,6.242,843,6.242,844,6.242,845,6.242,846,6.242,847,5.071,848,6.242,849,5.071,850,6.242,851,6.242,852,5.071,853,6.242,854,5.071,855,5.071,856,5.071,857,5.071,858,5.071]],["title/injectables/DataRefreshService.html",[287,1.685,859,2.643]],["body/injectables/DataRefreshService.html",[3,0.22,4,0.22,5,0.197,7,0.342,8,0.707,14,0.018,16,0.555,18,0.22,19,0.013,20,0.013,23,0.79,27,0.422,46,1.121,50,1.625,51,1.138,54,0.508,57,0.774,61,0.893,77,1.692,96,2.138,98,2.543,99,1.558,108,1.708,112,1.476,116,1.771,185,2.419,186,4.271,189,3.346,196,1.834,203,3.717,279,4.277,282,2.243,287,2.487,289,2.734,314,2.361,327,1.855,328,1.771,350,2.389,362,2.734,415,2.901,423,2.243,430,2.245,437,2.361,481,3.899,553,2.953,636,2.932,859,4.358,860,3.636,861,5.553,862,2.624,863,3.899,864,5.553,865,5.553,866,5.681,867,4.277,868,5.553,869,5.553,870,4.271,871,3.973,872,5.079,873,5.079,874,3.899,875,6.177,876,5.553,877,5.553,878,5.553,879,5.553,880,5.553,881,5.553,882,4.277,883,3.973,884,5.553,885,5.347,886,6.206,887,6.594,888,4.22,889,5.553,890,5.553,891,5.553,892,5.553,893,5.553,894,5.553,895,5.553,896,4.22,897,5.553,898,5.553,899,5.553,900,5.553,901,5.553,902,4.22,903,4.784,904,3.597,905,4.784,906,5.553,907,5.553,908,3.636,909,4.22]],["title/interfaces/EliminarListaDto.html",[0,0.352,910,2.643]],["body/interfaces/EliminarListaDto.html",[0,0.542,2,1.612,3,0.302,4,0.302,5,0.271,7,0.469,8,0.861,13,0.434,14,0.017,15,2.627,18,0.302,19,0.015,20,0.015,23,0.824,24,1.881,25,3.266,26,3.266,27,0.676,28,3.069,29,3.266,30,2.894,31,3.811,32,3.811,33,3.266,34,3.266,910,4.747,911,4.991,912,6.355]],["title/components/FormlyHorizontalWrapper.html",[89,0.595,135,1.317]],["body/components/FormlyHorizontalWrapper.html",[3,0.211,4,0.211,5,0.189,13,0.404,14,0.018,16,0.607,18,0.211,19,0.012,20,0.012,23,0.767,27,0.403,37,2.62,54,0.73,61,0.854,65,2.18,89,1.024,90,1.348,91,1.978,92,2.18,93,1.632,94,1.632,99,1.539,100,1.37,108,1.573,111,2.939,112,1.434,116,1.72,117,1.632,118,3.116,125,1.348,126,2.18,127,2.076,128,1.632,129,2.62,130,1.632,131,1.632,132,1.287,133,1.481,134,2.18,135,2.363,136,2.599,137,2.677,138,1.632,139,1.287,140,1.632,141,1.23,142,1.632,143,1.287,144,1.348,145,1.632,146,1.348,147,2.18,148,1.287,149,2.18,150,1.348,151,2.18,152,1.348,153,1.632,154,1.287,155,1.632,156,1.287,157,1.287,158,2.076,159,1.632,160,1.287,161,1.632,162,1.23,163,1.632,164,1.348,165,1.287,166,1.481,167,1.554,168,1.632,170,2.694,185,1.978,196,1.932,217,3.658,218,2.868,219,1.907,230,3.109,248,3.493,251,1.801,282,1.72,291,4.153,331,2.293,415,2.076,420,2.293,423,2.066,451,4.645,501,2.856,538,2.694,544,1.808,904,3.493,913,3.478,914,3.478,915,6.479,916,3.786,917,2.856,918,3.493,919,3.493,920,5.392,921,5.392,922,6.479,923,5.392,924,4.645,925,5.392,926,3.237,927,5.392,928,3.237,929,3.039,930,5.392,931,5.392,932,5.392,933,4.645,934,5.392,935,3.248,936,3.248,937,6.071,938,4.676,939,6.071]],["title/interfaces/GenerarListaDto.html",[0,0.352,940,2.643]],["body/interfaces/GenerarListaDto.html",[0,0.54,2,1.607,3,0.301,4,0.301,5,0.27,7,0.468,8,0.86,9,0.812,11,4.44,13,0.433,14,0.017,15,2.623,18,0.301,19,0.015,20,0.015,23,0.822,24,1.877,25,3.255,26,3.255,27,0.674,28,3.059,29,3.255,30,2.885,31,3.804,32,3.804,33,3.255,34,3.255,940,4.738,941,4.975]],["title/components/HeaderComponent.html",[89,0.595,139,1.2]],["body/components/HeaderComponent.html",[3,0.099,4,0.099,5,0.089,7,0.154,8,0.393,9,0.229,13,0.536,14,0.018,16,0.576,18,0.099,19,0.007,20,0.007,23,0.554,24,0.53,27,0.191,35,3.694,36,3.694,37,2.476,38,2.379,39,2.379,40,1.636,46,0.623,50,2.357,51,1.249,53,0.385,54,0.538,57,1.093,61,0.403,65,1.249,73,1.241,77,0.941,89,0.707,90,0.637,91,1.133,92,0.771,93,0.771,94,0.771,96,2.025,97,2,99,1.649,100,1.816,101,0.985,102,1.383,103,1.031,105,1.543,107,2.37,108,1.486,111,2.646,112,1.793,116,0.985,117,0.771,118,2.802,119,1.313,121,1.543,123,1.902,124,1.841,125,0.637,126,1.249,127,1.189,128,0.771,129,1.809,130,0.771,131,0.771,132,0.608,133,0.7,134,1.249,135,0.667,136,1.892,137,2.381,138,0.771,139,1.568,140,0.771,141,0.581,142,0.771,143,0.608,144,1.85,145,0.771,146,0.637,147,1.249,148,0.608,149,1.249,150,0.637,151,1.249,152,0.637,153,0.771,154,0.608,155,0.771,156,0.608,157,0.608,158,1.189,159,0.771,160,0.608,161,0.771,162,1.603,163,0.771,164,0.637,165,0.608,166,0.7,167,0.734,168,0.771,185,2.381,196,1.942,200,2.144,202,1.743,203,1.741,217,2.345,218,2.322,219,0.901,248,4.135,251,2.314,256,0.734,270,1.459,272,1.189,281,1.459,282,1.241,308,2.521,313,1.01,316,1.339,327,1.757,328,1.678,331,2.714,363,1.249,368,0.903,390,2.168,415,1.722,423,1.427,424,2.168,429,1.741,430,2.24,431,3.393,432,1.636,434,1.149,435,2.322,437,2.237,445,1.01,457,2.201,468,1.636,496,1.469,521,2.695,530,2.379,532,2.235,533,1.741,534,2.168,538,1.543,544,0.854,547,1.01,623,2.628,633,2.235,636,1.459,675,2.062,795,1.543,796,3.475,797,2.695,798,2.168,799,1.86,812,2.062,816,2.37,822,1.86,823,1.86,862,1.459,870,2,871,4.104,883,1.86,916,2.168,917,2.37,918,2,919,4.265,926,3.189,928,3.189,929,1.741,935,3.846,936,3.846,938,2.998,942,1.643,943,2.66,944,4.474,945,2.66,946,4.474,947,1.86,948,2.66,949,2.66,950,2.379,951,3.337,952,2.628,953,3.088,954,4.234,955,5.261,956,2.379,957,2.66,958,2.66,959,2.628,960,3.353,961,2.998,962,3.088,963,3.088,964,2.733,965,3.353,966,2.733,967,3.353,968,3.854,969,3.854,970,4.474,971,3.854,972,3.854,973,3.854,974,3.854,975,3.854,976,3.854,977,2.898,978,2.898,979,1.907,980,2.168,981,2.379,982,1.907,983,2.379,984,2.66,985,2.168,986,2.733,987,2.66,988,3.088,989,1.907,990,4.474,991,3.141,992,3.141,993,1.907,994,4.299,995,1.907,996,4.969,997,1.907,998,2,999,1.907,1000,1.907,1001,1.907,1002,2.168,1003,2.66,1004,1.907,1005,2.66,1006,2.521,1007,4.135,1008,5.499,1009,4.05,1010,2.379,1011,2.379,1012,4.05,1013,2.66,1014,3.854,1015,1.907,1016,2.168,1017,2.521,1018,1.907,1019,1.235,1020,2.66,1021,1.907,1022,1.86,1023,2,1024,2.168,1025,1.907,1026,2.168,1027,3.088,1028,3.088,1029,1.907,1030,2.379,1031,2.168,1032,1.741,1033,1.907,1034,2.66,1035,3.088,1036,2.379,1037,2.998,1038,1.907,1039,2.379,1040,2.379,1041,1.643,1042,1.643,1043,1.235,1044,1.643,1045,1.643,1046,1.643,1047,1.235,1048,1.643,1049,3.353,1050,1.907,1051,1.643,1052,2.66,1053,1.643,1054,1.907,1055,1.643,1056,1.643,1057,1.643,1058,1.643,1059,1.907,1060,1.643,1061,1.643,1062,1.643,1063,1.643,1064,1.469,1065,2.66,1066,1.643,1067,1.741,1068,3.088,1069,3.088,1070,3.088,1071,2.66]],["title/components/HomeComponent.html",[89,0.595,141,1.147]],["body/components/HomeComponent.html",[3,0.081,4,0.081,5,0.072,7,0.126,8,0.332,9,0.186,13,0.529,14,0.018,15,1.446,16,0.505,18,0.081,19,0.006,20,0.006,23,0.479,24,0.431,27,0.155,35,3.34,36,3.725,37,2.425,38,2.004,39,2.004,40,1.378,46,0.525,50,2.398,51,1.248,53,0.313,54,0.474,57,1.045,61,0.328,73,1.257,77,0.793,89,0.623,90,0.518,91,0.955,92,0.627,93,0.627,94,0.627,96,1.831,99,1.709,100,1.821,101,0.83,103,0.869,105,1.3,107,1.378,108,1.486,111,2.529,112,1.706,116,0.83,117,0.627,118,2.683,119,1.106,121,1.3,123,0.659,124,1.769,125,0.518,126,1.052,127,1.002,128,0.627,129,1.593,130,0.627,131,0.627,132,0.494,133,0.568,134,1.052,135,0.542,136,1.691,137,2.246,138,0.627,139,0.494,140,0.627,141,1.338,142,0.627,143,0.494,144,1.124,145,0.627,146,0.518,147,1.052,148,0.494,149,1.052,150,0.518,151,1.052,152,0.518,153,0.627,154,0.494,155,0.627,156,0.494,157,0.494,158,1.002,159,0.627,160,0.494,161,0.627,162,1.201,163,0.627,164,0.518,165,0.494,166,0.568,167,0.597,168,0.627,185,2.497,196,1.669,200,2.052,202,0.694,218,1.589,219,0.732,222,0.934,248,3.885,251,2.17,256,0.597,270,1.229,272,2.398,275,1.686,281,1.229,282,1.401,308,2.179,316,1.088,327,1.904,328,1.818,331,2.55,363,1.052,368,1.231,420,2.022,423,0.83,425,1.827,426,2.242,429,1.467,430,2.044,431,3.346,432,1.378,434,0.934,435,2.389,437,2.728,457,1.967,468,2.52,496,1.194,521,1.568,524,3.035,532,2.376,533,1.467,538,1.3,539,2.004,547,0.821,549,4.571,551,2.004,553,1.165,623,3.282,633,1.969,636,2.507,675,1.782,743,2.811,795,1.969,796,3.324,797,1.568,799,1.568,801,2.004,804,1.686,812,1.782,816,2.088,822,1.568,823,1.568,828,2.374,862,1.229,866,2.242,871,4.156,872,2.004,873,2.004,883,1.568,917,2.52,918,1.686,919,3.437,926,2.996,928,2.996,929,1.467,935,3.613,936,3.613,947,1.568,949,2.242,950,3.035,951,3.914,952,3.282,954,2.898,959,1.969,964,2.362,965,2.898,966,2.362,967,2.898,968,3.395,969,3.395,971,3.395,972,3.395,973,3.395,974,3.395,975,3.395,976,3.395,977,3.795,978,2.553,980,1.827,986,2.362,991,1.827,992,1.827,994,3.725,998,3.885,1002,1.827,1003,1.335,1005,2.242,1006,2.179,1007,3.885,1008,5.167,1009,3.725,1010,2.004,1011,2.004,1012,4.002,1013,2.242,1014,3.395,1016,1.827,1017,2.179,1019,1.004,1020,2.242,1022,1.568,1023,3.081,1026,1.827,1030,2.004,1031,1.827,1032,2.221,1034,2.242,1037,2.591,1039,3.035,1043,1.004,1047,1.004,1049,2.898,1051,2.242,1053,1.335,1055,1.335,1056,1.335,1057,1.335,1058,1.335,1060,1.335,1061,1.335,1062,1.335,1063,1.335,1064,1.194,1065,2.242,1066,1.335,1067,3.512,1071,2.242,1072,1.335,1073,2.004,1074,5.305,1075,5.305,1076,3.395,1077,3.941,1078,2.242,1079,3.941,1080,3.664,1081,2.602,1082,4.756,1083,2.602,1084,2.242,1085,2.602,1086,2.602,1087,2.602,1088,4.393,1089,4.393,1090,4.393,1091,4.393,1092,3.941,1093,3.941,1094,3.941,1095,2.767,1096,3.941,1097,3.035,1098,3.941,1099,2.767,1100,3.035,1101,2.602,1102,3.035,1103,2.602,1104,2.602,1105,2.602,1106,2.004,1107,1.549,1108,1.827,1109,2.242,1110,2.004,1111,1.549,1112,3.395,1113,2.602,1114,2.602,1115,2.242,1116,1.549,1117,2.602,1118,2.602,1119,1.549,1120,1.549,1121,1.549,1122,1.549,1123,1.549,1124,1.549,1125,1.549,1126,1.686,1127,1.549,1128,2.602,1129,1.549,1130,1.549,1131,1.549,1132,2.602,1133,2.602,1134,1.549,1135,5.305,1136,1.549,1137,1.549,1138,2.242,1139,1.549,1140,1.549,1141,2.602,1142,1.549,1143,1.194,1144,1.549,1145,3.784,1146,1.335,1147,1.549,1148,1.549,1149,1.549,1150,3.941,1151,1.549,1152,1.549,1153,1.549,1154,1.549,1155,1.335,1156,1.549,1157,1.549,1158,1.549,1159,1.549,1160,1.549,1161,1.549,1162,3.941,1163,2.602,1164,2.602,1165,2.602,1166,2.866,1167,2.602,1168,2.767,1169,3.941,1170,2.242,1171,2.602,1172,2.602,1173,3.941,1174,3.081,1175,2.602,1176,2.242,1177,2.602,1178,2.004,1179,2.602,1180,2.602,1181,2.767,1182,2.242,1183,2.602,1184,2.242,1185,2.602,1186,2.602,1187,2.602]],["title/components/HomePublicoComponent.html",[89,0.595,143,1.2]],["body/components/HomePublicoComponent.html",[3,0.171,4,0.171,5,0.153,7,0.265,9,0.394,13,0.246,14,0.018,16,0.467,18,0.171,19,0.011,20,0.011,23,0.774,27,0.327,46,0.942,50,1.797,51,0.856,53,0.661,54,0.713,57,0.601,61,0.693,73,1.735,89,0.936,90,1.095,91,1.713,92,1.325,93,1.325,94,1.325,96,2.282,99,1.626,100,1.655,101,1.489,103,1.98,108,1.134,111,2.888,112,1.732,116,1.489,117,1.325,118,3.045,119,1.985,123,1.393,124,1.147,125,1.095,126,1.888,127,1.797,128,1.325,129,2.397,130,1.325,131,1.325,132,1.045,133,1.202,134,1.888,135,1.147,136,1.262,137,1.202,138,1.325,139,1.045,140,1.325,141,0.998,142,1.325,143,1.998,144,2.362,145,1.325,146,1.095,147,1.888,148,1.045,149,1.888,150,1.095,151,1.888,152,1.095,153,1.325,154,1.045,155,1.325,156,1.045,157,1.045,158,1.797,159,1.325,160,1.045,161,1.325,162,0.998,163,1.325,164,1.095,165,1.045,166,1.202,167,1.262,168,1.325,189,2.813,200,1.359,205,2.632,242,3.819,256,1.262,259,1.095,270,2.206,275,3.024,276,5.107,279,3.596,282,1.891,363,1.888,368,0.76,415,1.797,420,2.52,421,3.596,422,3.924,423,2.077,424,4.162,429,3.341,430,2.634,432,2.473,433,4.022,434,1.974,435,3.167,437,1.985,445,1.736,446,2.524,456,3.596,464,3.596,520,3.024,521,2.813,623,2.333,667,1.847,743,1.736,812,2.881,813,3.596,816,3.14,822,2.813,823,2.813,943,4.022,951,3.924,952,2.333,998,3.84,1031,4.162,1032,2.632,1067,3.341,1073,4.566,1108,4.162,1166,2.813,1168,3.278,1174,4.219,1178,3.596,1181,3.278,1182,4.022,1184,4.022,1188,4.685,1189,2.823,1190,4.022,1191,4.669,1192,3.596,1193,4.669,1194,5.439,1195,4.669,1196,3.277,1197,3.277,1198,2.823,1199,5.107,1200,4.669,1201,3.596,1202,4.022,1203,3.596,1204,4.669,1205,4.669,1206,4.669,1207,4.669,1208,4.669,1209,3.596,1210,4.669,1211,6.265,1212,3.277,1213,6.265,1214,3.277,1215,3.277,1216,3.277,1217,4.669,1218,2.823,1219,6.265,1220,3.277,1221,4.669,1222,3.277,1223,4.685,1224,4.669,1225,3.277,1226,3.277,1227,3.277,1228,3.277,1229,4.022,1230,5.107,1231,5.927,1232,5.107,1233,3.277,1234,3.277,1235,3.277,1236,3.277,1237,3.277,1238,2.823,1239,3.277,1240,3.277,1241,3.277,1242,4.669,1243,4.669,1244,3.277,1245,3.277,1246,3.277,1247,3.277,1248,3.277,1249,3.277,1250,3.277,1251,3.277,1252,3.277]],["title/interfaces/IngredienteServiceInterface.html",[0,0.352,1253,2.899]],["body/interfaces/IngredienteServiceInterface.html",[0,0.428,2,1.274,3,0.239,4,0.239,5,0.214,7,0.371,8,0.746,9,0.845,13,0.548,14,0.018,16,0.718,18,0.239,19,0.013,20,0.013,41,1.497,46,1.181,51,1.289,53,1.418,54,0.845,57,1.289,62,2.616,64,1.602,294,3.214,302,3.148,314,3.224,341,2.892,350,1.762,368,1.578,409,4.318,411,3.638,1253,4.509,1254,3.944,1255,5.853,1256,5.853,1257,5.853,1258,5.853,1259,5.853,1260,5.853,1261,6.67,1262,4.578,1263,5.853,1264,4.578,1265,5.853,1266,4.578,1267,5.853,1268,4.578,1269,3.527,1270,5.853,1271,4.578,1272,3.214,1273,4.578]],["title/interfaces/ListaCompraDto.html",[0,0.352,1274,2.899]],["body/interfaces/ListaCompraDto.html",[0,0.531,2,1.579,3,0.296,4,0.296,5,0.265,7,0.46,8,0.851,9,0.911,12,2.733,13,0.532,14,0.018,15,2.779,16,0.567,18,0.296,19,0.015,20,0.015,609,3.882,1274,5.145,1275,4.889,1276,7.328,1277,6.313,1278,5.755]],["title/interfaces/ListaCompraResourceServiceInterface.html",[0,0.352,1279,2.899]],["body/interfaces/ListaCompraResourceServiceInterface.html",[0,0.42,2,1.25,3,0.234,4,0.234,5,0.21,7,0.364,8,0.737,9,0.841,13,0.546,14,0.018,16,0.744,18,0.234,19,0.013,20,0.013,46,1.167,51,1.282,53,1.41,54,0.841,57,1.282,62,2.607,64,1.572,294,3.191,302,3.13,314,3.215,341,2.872,350,1.73,368,1.567,409,4.308,411,4.033,910,5.023,940,5.023,1279,4.455,1280,3.87,1281,5.783,1282,5.783,1283,5.783,1284,5.783,1285,5.783,1286,5.783,1287,5.309,1288,4.492,1289,5.783,1290,4.492,1291,5.783,1292,4.492,1293,5.783,1294,4.492,1295,5.783,1296,4.492,1297,4.492,1298,4.492,1299,4.492]],["title/components/ListadoIngredientesComponent.html",[89,0.595,148,1.2]],["body/components/ListadoIngredientesComponent.html",[3,0.12,4,0.12,5,0.107,7,0.186,8,0.457,9,0.687,13,0.555,14,0.018,16,0.647,18,0.12,19,0.008,20,0.008,24,0.64,27,0.23,28,1.219,37,2.309,41,1.576,46,0.723,50,2.439,51,1.341,53,1.152,54,0.742,57,1.162,61,0.487,65,1.45,70,0.886,73,1.143,77,1.74,89,0.696,90,0.768,91,1.315,92,0.93,93,0.93,94,0.93,99,0.51,111,2.74,112,0.953,117,0.93,118,2.896,119,1.524,123,1.524,125,0.768,126,1.45,127,1.38,128,0.93,129,2.011,130,0.93,131,0.93,132,0.734,133,1.315,134,1.45,135,0.805,136,0.886,137,0.844,138,0.93,139,0.734,140,0.93,141,0.701,142,0.93,143,0.734,144,0.768,145,0.93,146,0.768,147,1.45,148,1.586,149,2.562,150,0.768,151,1.45,152,0.768,153,0.93,154,0.734,155,0.93,156,0.734,157,0.734,158,1.38,159,0.93,160,0.734,161,0.93,162,1.879,163,0.93,164,0.768,165,0.734,166,0.844,167,0.886,168,0.93,200,1.044,202,1.605,217,2.654,218,1.087,219,1.087,224,5.156,227,1.772,228,1.772,251,1.907,308,3.221,309,2.16,327,2.164,328,2.193,331,2.428,350,0.886,363,1.45,395,2.322,428,2.517,430,0.93,457,1.972,468,3.025,516,2.322,543,3.093,544,1.03,547,1.219,610,3.221,623,3.081,636,3.061,667,1.297,705,3.831,773,1.49,807,1.772,812,3.159,813,2.761,816,2.635,829,2.333,859,3.492,875,3.794,883,2.16,885,3.794,926,3.081,928,1.791,935,3.44,936,2.996,952,1.791,959,2.201,961,3.393,1006,3.492,1007,3.221,1017,3.492,1019,2.322,1043,1.49,1044,1.982,1095,4.009,1145,4.644,1146,1.982,1166,1.386,1223,1.982,1261,5.313,1269,3.248,1300,6.325,1301,1.982,1302,4.404,1303,3.393,1304,4.404,1305,3.585,1306,4.404,1307,4.404,1308,4.404,1309,4.404,1310,4.404,1311,4.404,1312,4.404,1313,4.404,1314,4.404,1315,4.404,1316,4.404,1317,4.404,1318,3.585,1319,2.761,1320,4.973,1321,4.973,1322,3.585,1323,4.973,1324,3.585,1325,3.585,1326,2.3,1327,4.404,1328,4.284,1329,2.3,1330,3.585,1331,2.3,1332,2.3,1333,3.585,1334,2.3,1335,1.982,1336,2.3,1337,2.3,1338,3.585,1339,2.3,1340,2.3,1341,2.3,1342,2.3,1343,3.585,1344,2.3,1345,3.585,1346,3.585,1347,2.3,1348,3.088,1349,4.973,1350,3.831,1351,4.973,1352,4.973,1353,4.973,1354,4.973,1355,3.585,1356,2.3,1357,2.3,1358,2.3,1359,2.3,1360,2.3,1361,2.3,1362,2.3,1363,3.585,1364,2.3,1365,3.585,1366,2.3,1367,5.39,1368,2.322,1369,3.585,1370,2.3,1371,2.3,1372,2.3,1373,2.3,1374,1.772,1375,1.772,1376,2.3,1377,2.3,1378,2.3,1379,1.982,1380,4.404,1381,2.3,1382,2.3,1383,2.3,1384,4.404,1385,3.585,1386,2.3,1387,2.3,1388,1.982,1389,2.3,1390,2.3,1391,2.3,1392,4.404,1393,2.3,1394,2.3,1395,2.3,1396,2.3,1397,2.3,1398,1.982,1399,3.585,1400,2.3,1401,2.3,1402,3.585,1403,2.3,1404,2.3,1405,3.585,1406,3.585,1407,1.982,1408,2.761,1409,4.973,1410,3.585,1411,2.3,1412,2.3,1413,4.404,1414,2.3,1415,2.3,1416,2.3,1417,2.3,1418,2.3,1419,2.3,1420,2.3,1421,2.3]],["title/components/LoginComponent.html",[89,0.595,154,1.2]],["body/components/LoginComponent.html",[3,0.128,4,0.128,5,0.115,7,0.199,8,0.481,9,0.296,13,0.517,14,0.018,16,0.611,18,0.128,19,0.009,20,0.009,23,0.654,24,1.279,27,0.246,37,1.527,40,2.001,41,1.196,46,0.762,50,1.985,51,1.121,53,0.497,54,0.62,57,0.843,61,0.521,73,1.466,77,1.151,89,0.814,90,0.822,91,1.386,92,0.995,93,0.995,94,0.995,96,1.985,99,1.677,100,1.803,101,1.205,102,1.692,108,1.654,111,2.771,112,1.56,116,1.205,117,0.995,118,2.928,119,1.606,121,1.887,123,1.047,124,0.861,125,0.822,126,1.527,127,1.454,128,0.995,129,2.085,130,0.995,131,0.995,132,0.785,133,0.903,134,1.527,135,0.861,136,2.141,137,0.903,138,0.995,139,0.785,140,0.995,141,0.75,142,0.995,143,0.785,144,1.535,145,0.995,146,0.822,147,1.527,148,0.785,149,1.527,150,0.822,151,1.527,152,0.822,153,0.995,154,1.774,155,0.995,156,0.785,157,0.785,158,1.454,159,0.995,160,0.785,161,0.995,162,0.75,163,0.995,164,0.822,165,0.785,166,2.04,167,0.948,168,0.995,185,2.153,196,1.836,200,1.921,203,2.129,205,3.308,218,2.627,219,1.163,251,2.106,256,0.948,259,1.262,270,1.785,281,1.785,282,1.205,288,2.977,296,2.447,327,1.535,328,1.466,331,2.192,368,1.196,395,4.084,415,1.454,420,2.496,422,2.276,423,1.644,424,2.652,429,2.906,430,2.754,431,3.294,432,3.496,434,1.483,435,2.627,437,2.806,445,1.304,457,2.628,468,1.304,500,2.91,501,2.731,520,2.447,521,3.536,525,3.254,532,1.887,533,2.906,534,2.652,544,1.102,547,1.304,633,3.297,636,2.172,675,2.435,792,2.447,793,2.276,795,2.296,862,2.436,870,2.447,871,2.276,916,2.652,917,2.731,918,3.339,919,4.516,926,2.576,928,2.576,929,2.129,935,3.106,936,3.106,947,3.106,957,3.254,958,3.254,959,2.576,964,3.227,966,3.227,978,3.802,983,2.91,985,2.652,992,2.652,994,2.652,1006,2.977,1007,2.447,1009,3.62,1012,4.291,1016,2.652,1017,2.977,1026,2.652,1031,2.652,1032,2.906,1047,1.595,1048,2.121,1073,2.91,1108,2.652,1110,2.91,1143,1.896,1166,3.106,1190,4.441,1198,2.121,1201,2.91,1202,3.254,1203,2.91,1350,2.91,1422,2.121,1423,3.777,1424,3.777,1425,3.777,1426,2.91,1427,3.777,1428,3.777,1429,3.254,1430,4.441,1431,5.056,1432,3.777,1433,3.777,1434,5.155,1435,4.441,1436,4.441,1437,4.596,1438,5.432,1439,2.462,1440,3.254,1441,3.254,1442,4.441,1443,2.462,1444,2.462,1445,3.254,1446,2.462,1447,3.254,1448,4.441,1449,3.254,1450,3.254,1451,5.056,1452,4.441,1453,3.254,1454,2.462,1455,3.254,1456,2.462,1457,3.254,1458,2.462,1459,3.254,1460,2.462,1461,2.462,1462,2.462,1463,2.462,1464,2.462,1465,2.462,1466,2.462,1467,2.462,1468,2.462,1469,2.121,1470,3.777,1471,3.777,1472,3.777,1473,3.777,1474,3.777]],["title/interfaces/LoginRequest.html",[0,0.352,304,2.438]],["body/interfaces/LoginRequest.html",[0,0.531,2,1.579,3,0.296,4,0.296,5,0.265,7,0.46,8,0.851,9,0.881,13,0.501,14,0.017,18,0.296,19,0.015,20,0.015,23,0.807,24,1.858,25,3.199,26,3.199,27,0.668,28,3.007,29,3.199,30,2.835,31,3.765,32,3.765,33,3.199,34,3.199,40,3.882,41,1.757,304,4.327,633,3.661,1475,4.889]],["title/interfaces/LoginResponse.html",[0,0.352,1476,2.899]],["body/interfaces/LoginResponse.html",[0,0.54,2,1.607,3,0.301,4,0.301,5,0.27,7,0.468,8,0.86,9,0.812,13,0.433,14,0.017,18,0.301,19,0.015,20,0.015,23,0.822,24,1.877,25,3.255,26,3.255,27,0.674,28,3.059,29,3.255,30,2.885,31,3.804,32,3.804,33,3.255,34,3.255,41,1.658,422,4.44,1476,5.198,1477,4.975]],["title/components/MenuComponent.html",[89,0.595,156,1.2]],["body/components/MenuComponent.html",[3,0.076,4,0.076,5,0.068,7,0.118,8,0.314,9,0.59,11,1.484,12,1.455,13,0.473,14,0.018,15,0.904,16,0.515,17,0.875,18,0.076,19,0.006,20,0.006,23,0.765,24,0.404,27,0.145,41,0.981,46,0.497,50,2.353,51,1.265,53,0.989,54,0.669,57,1.199,61,0.307,70,1.887,73,1.205,77,0.977,89,0.597,90,0.485,91,0.904,92,0.587,93,0.587,94,0.587,96,2.205,97,1.596,99,1.679,100,1.579,101,0.786,102,1.103,103,0.823,105,2.685,106,2.122,108,1.736,111,2.49,112,1.479,117,0.587,118,2.643,119,1.047,121,1.231,123,0.617,124,0.508,125,0.485,126,2.085,127,0.948,128,0.587,129,1.528,130,0.587,131,0.587,132,0.463,133,2.154,134,0.996,135,0.508,136,0.559,137,0.533,138,0.587,139,0.463,140,0.587,141,0.442,142,0.587,143,0.463,144,0.485,145,0.587,146,0.485,147,0.996,148,0.463,149,0.996,150,0.485,151,0.996,152,0.485,153,0.587,154,0.463,155,0.587,156,1.35,157,0.463,158,2.428,159,0.587,160,0.463,161,0.587,162,1.571,163,0.587,164,0.485,165,0.463,166,0.533,167,0.559,168,0.587,185,2.422,189,1.484,196,2.015,200,1.922,202,1.437,203,1.388,222,0.875,256,0.559,259,1.913,272,2.205,281,2.437,282,2.173,307,1.437,313,0.769,327,1.413,328,1.35,363,0.996,368,1.328,373,2.13,374,0.818,415,1.985,423,1.467,425,1.73,430,2.615,431,2.173,435,2.628,437,2.365,457,1.437,461,2.471,468,1.699,523,1.73,532,1.888,538,1.888,553,1.103,588,1.019,609,1.305,622,1.73,636,2.628,656,2.448,674,2.277,743,2.436,792,1.596,793,3.107,794,2.979,795,1.888,796,1.484,797,4.585,799,2.277,801,2.911,804,3.482,805,4.025,812,1.699,814,2.122,815,2.122,816,2.002,822,1.484,823,1.484,824,3.107,828,2.277,862,1.164,882,1.897,883,1.484,904,1.596,947,1.484,951,2.277,952,2.997,959,2.577,980,1.73,981,1.897,991,1.73,994,2.654,998,3.603,1002,2.654,1019,2.448,1022,3.107,1023,4.085,1032,1.388,1036,1.897,1040,2.911,1042,2.764,1043,0.94,1047,0.94,1052,1.251,1067,3.602,1076,3.961,1080,1.118,1084,3.645,1099,2.654,1100,2.471,1102,3.542,1106,1.897,1112,2.122,1115,3.256,1126,2.979,1138,2.764,1143,1.118,1155,1.251,1168,1.73,1170,2.122,1174,0.94,1199,2.122,1209,1.897,1238,1.251,1269,1.484,1335,1.251,1348,2.122,1368,2.448,1379,1.251,1408,1.118,1426,3.776,1429,1.251,1478,1.251,1479,2.463,1480,2.463,1481,2.463,1482,5.167,1483,3.779,1484,5.157,1485,4.792,1486,3.779,1487,5.998,1488,3.208,1489,3.208,1490,3.208,1491,3.208,1492,3.208,1493,3.208,1494,3.208,1495,3.208,1496,3.779,1497,2.463,1498,2.463,1499,3.779,1500,3.779,1501,3.779,1502,3.256,1503,3.779,1504,2.463,1505,3.779,1506,2.463,1507,2.463,1508,3.779,1509,3.779,1510,2.463,1511,1.251,1512,3.779,1513,2.463,1514,1.452,1515,3.621,1516,4.902,1517,2.463,1518,3.779,1519,1.452,1520,2.463,1521,5.157,1522,2.463,1523,2.463,1524,2.463,1525,2.122,1526,2.463,1527,2.463,1528,3.256,1529,3.256,1530,3.779,1531,1.897,1532,2.463,1533,3.779,1534,3.85,1535,1.452,1536,5.157,1537,1.452,1538,3.779,1539,3.779,1540,1.452,1541,2.463,1542,2.122,1543,2.463,1544,2.463,1545,1.452,1546,1.452,1547,5.157,1548,1.452,1549,2.463,1550,1.452,1551,2.122,1552,1.452,1553,1.452,1554,2.463,1555,1.452,1556,2.122,1557,2.463,1558,1.452,1559,3.256,1560,2.463,1561,1.452,1562,3.779,1563,1.452,1564,2.463,1565,3.779,1566,2.463,1567,4.231,1568,1.452,1569,2.463,1570,2.463,1571,2.764,1572,2.122,1573,2.463,1574,1.452,1575,2.463,1576,1.452,1577,1.897,1578,1.452,1579,2.122,1580,3.208,1581,1.452,1582,2.463,1583,1.452,1584,2.463,1585,2.122,1586,2.463,1587,1.452,1588,2.122,1589,2.463,1590,1.452,1591,1.73,1592,1.73,1593,1.484,1594,1.73,1595,1.73,1596,1.452,1597,2.122,1598,2.122,1599,2.764,1600,1.251,1601,2.463,1602,1.452,1603,3.208,1604,3.208,1605,1.452,1606,1.452,1607,1.452,1608,1.452,1609,1.452,1610,1.452,1611,1.452,1612,2.463,1613,2.463,1614,1.452,1615,1.452,1616,1.452,1617,3.208,1618,1.452,1619,1.251,1620,1.452,1621,1.118,1622,1.452,1623,3.208,1624,1.452,1625,1.452,1626,1.452,1627,1.452,1628,1.452,1629,1.452,1630,1.452,1631,1.452,1632,1.452,1633,1.452,1634,1.452,1635,1.452,1636,2.463,1637,1.452,1638,1.452,1639,1.251,1640,1.452,1641,1.452,1642,1.452,1643,1.251,1644,1.452,1645,1.452,1646,1.452,1647,1.452,1648,1.452,1649,1.452,1650,1.452,1651,1.452,1652,1.452,1653,1.452,1654,1.452,1655,1.452,1656,1.452,1657,1.452,1658,1.452,1659,1.452,1660,1.452,1661,1.452,1662,1.452,1663,1.452,1664,1.251,1665,1.452,1666,1.452,1667,1.452,1668,1.452,1669,1.452,1670,1.452,1671,1.452,1672,1.452,1673,1.452,1674,2.463,1675,1.452,1676,3.208,1677,2.463,1678,1.452,1679,1.452,1680,1.452,1681,1.452,1682,1.452,1683,1.452,1684,2.122,1685,2.463,1686,2.122,1687,2.463,1688,2.463,1689,2.463,1690,2.463,1691,2.122,1692,2.463,1693,2.463,1694,3.256,1695,2.463,1696,2.463]],["title/components/MenuDetalleComponent.html",[89,0.595,157,1.2]],["body/components/MenuDetalleComponent.html",[3,0.135,4,0.135,5,0.121,7,0.21,8,0.5,9,0.472,12,1.512,13,0.449,14,0.018,16,0.622,17,2.366,18,0.135,19,0.009,20,0.009,23,0.753,24,1.092,27,0.259,37,2.14,41,1.577,46,0.792,50,1.512,51,1.203,53,0.792,54,0.684,57,1.043,61,0.548,65,1.588,69,2.674,70,1.826,73,1.814,77,0.789,89,0.836,90,0.865,91,1.441,92,1.047,93,1.047,94,1.047,96,2.305,99,1.671,100,1.751,101,1.252,103,1.312,105,2.644,108,1.624,111,2.793,112,1.592,116,1.252,117,1.047,118,2.95,119,1.67,121,1.962,123,2.251,125,0.865,126,1.588,127,1.512,128,1.047,129,2.14,130,1.047,131,1.047,132,0.826,133,0.95,134,1.588,135,0.906,136,0.997,137,0.95,138,1.047,139,0.826,140,1.047,141,0.789,142,1.047,143,0.826,144,0.865,145,1.047,146,0.865,147,1.588,148,0.826,149,1.588,150,0.865,151,1.588,152,0.865,153,1.047,154,0.826,155,1.047,156,0.826,157,1.814,158,2.617,159,1.047,160,0.826,161,1.047,162,0.789,163,1.047,164,0.865,165,0.826,166,0.95,167,0.997,168,1.047,185,1.441,196,1.73,200,1.947,202,1.759,238,4.697,251,1.312,259,1.584,272,2.575,275,2.544,281,1.855,282,1.91,327,1.584,328,1.513,363,1.588,368,1.1,415,1.826,423,1.688,532,3.108,538,2.644,542,2.757,544,1.16,656,1.678,792,2.544,793,2.366,797,4.2,798,3.716,799,3.189,805,3.878,812,2.513,816,2.804,822,2.366,823,2.366,862,1.855,904,3.429,917,2.08,928,2.991,952,3.201,1022,2.366,1024,2.757,1045,4.086,1181,3.716,1269,3.86,1368,4.464,1485,5.158,1534,2.858,1556,4.56,1559,3.383,1577,3.025,1591,3.716,1592,3.716,1593,3.86,1594,2.757,1595,2.757,1621,4.382,1639,3.383,1686,4.56,1697,4.697,1698,2.231,1699,3.927,1700,5.52,1701,3.927,1702,5.158,1703,3.927,1704,4.901,1705,3.927,1706,4.56,1707,3.383,1708,3.927,1709,3.927,1710,4.743,1711,4.086,1712,4.086,1713,4.204,1714,4.086,1715,3.927,1716,3.927,1717,3.025,1718,3.927,1719,3.025,1720,2.59,1721,3.025,1722,3.927,1723,2.59,1724,3.025,1725,3.383,1726,3.927,1727,3.383,1728,3.927,1729,2.59,1730,3.927,1731,3.927,1732,3.927,1733,2.59,1734,3.927,1735,3.927,1736,4.743,1737,3.927,1738,3.383,1739,3.927,1740,2.757,1741,2.757,1742,2.757,1743,2.757,1744,2.757,1745,2.757,1746,2.757,1747,2.59,1748,3.383,1749,3.927,1750,3.927,1751,2.59,1752,3.383,1753,3.025,1754,3.025,1755,3.025,1756,2.59,1757,3.383,1758,3.383,1759,3.383,1760,2.231,1761,2.231,1762,1.678,1763,2.59,1764,1.819,1765,2.59,1766,2.231,1767,2.59,1768,2.59,1769,3.927,1770,2.59,1771,2.59,1772,2.59,1773,2.59,1774,2.59,1775,2.59,1776,2.59,1777,2.59,1778,3.927,1779,3.383,1780,3.927]],["title/interfaces/MenuSemanalDto.html",[0,0.352,1534,2.267]],["body/interfaces/MenuSemanalDto.html",[0,0.531,2,1.579,3,0.296,4,0.296,5,0.265,7,0.46,8,0.851,9,0.911,10,5.645,12,2.733,13,0.532,14,0.018,15,2.779,16,0.567,17,4.024,18,0.296,19,0.015,20,0.015,609,3.882,1277,6.313,1534,4.024,1781,4.889]],["title/interfaces/MenuSemanalServiceInterface.html",[0,0.352,1782,2.899]],["body/interfaces/MenuSemanalServiceInterface.html",[0,0.405,1,4.974,2,1.205,3,0.226,4,0.226,5,0.202,7,0.351,8,0.72,9,0.852,11,3.403,13,0.549,14,0.018,15,2.599,16,0.739,18,0.226,19,0.013,20,0.013,46,1.14,51,1.299,53,1.43,54,0.852,57,1.299,62,2.589,64,1.516,294,3.147,302,3.172,314,3.234,341,2.832,350,1.667,368,1.602,409,4.338,411,3.993,609,2.992,827,5.457,1272,3.041,1502,4.866,1760,6.103,1782,4.351,1783,3.731,1784,5.648,1785,5.648,1786,5.648,1787,5.648,1788,5.648,1789,5.648,1790,4.331,1791,5.648,1792,4.331,1793,5.648,1794,4.331,1795,5.648,1796,4.331,1797,5.648,1798,4.331,1799,5.648,1800,4.331,1801,4.331,1802,4.331]],["title/components/MenuTablaComponent.html",[89,0.595,160,1.2]],["body/components/MenuTablaComponent.html",[3,0.079,4,0.079,5,0.071,7,0.123,8,0.327,9,0.603,10,3.002,11,2.348,12,0.987,13,0.472,14,0.018,15,1.73,16,0.596,17,0.917,18,0.079,19,0.006,20,0.006,23,0.78,24,0.713,27,0.152,41,1.438,46,0.517,50,2.519,51,1.212,53,1.012,54,0.681,57,1.094,61,0.322,65,1.037,70,1.5,73,1.243,77,1.187,89,0.616,90,0.509,91,0.941,92,0.616,93,0.616,94,0.616,96,2.18,99,1.63,100,1.723,101,0.818,103,0.856,108,1.448,110,3.357,111,2.519,112,1.739,116,0.818,117,0.616,118,2.673,119,1.09,121,1.281,123,1.657,125,0.509,126,1.037,127,0.987,128,0.616,129,1.576,130,0.616,131,0.616,132,0.486,133,0.941,134,1.037,135,0.533,136,0.586,137,0.559,138,0.616,139,0.486,140,0.616,141,0.464,142,0.616,143,0.486,144,0.509,145,0.616,146,0.509,147,1.037,148,0.486,149,1.037,150,0.509,151,1.037,152,0.509,153,0.616,154,0.486,155,0.616,156,0.486,157,0.486,158,2.242,159,0.616,160,1.387,161,0.616,162,0.464,163,0.616,164,0.509,165,0.486,166,0.559,167,0.586,168,0.616,170,1.947,185,1.73,196,1.8,200,1.736,202,1.745,203,2.197,240,4.322,251,1.109,256,0.586,259,2.185,270,1.212,272,1.815,275,1.661,281,1.212,282,1.679,293,2.152,309,1.545,314,1.09,322,1.661,327,1.453,328,1.387,331,2.636,350,0.586,363,1.037,368,1.412,373,2.657,415,2.296,420,2.132,423,1.679,425,1.801,428,1.801,430,2.462,435,2.488,437,2.004,456,1.975,457,1.745,459,1.661,461,1.975,468,2.065,474,2.209,481,2.736,501,2.304,504,2.209,523,1.801,532,1.281,533,1.445,534,1.801,538,3.097,543,2.332,544,0.682,550,2.209,553,1.948,609,3.085,622,2.736,636,2.818,656,0.986,743,1.358,793,2.348,794,2.524,795,2.355,796,1.545,797,4.192,798,2.736,799,1.545,803,4.536,804,1.661,805,3.054,807,1.975,812,1.76,816,2.065,818,1.312,824,2.62,827,1.173,828,2.348,829,1.76,834,3.357,837,3.747,862,1.212,863,1.801,870,1.661,871,1.545,872,1.975,873,3.631,874,1.801,882,1.975,883,2.62,924,2.209,926,3.097,928,1.66,945,2.209,952,3.042,959,1.947,978,2.524,984,2.209,987,1.312,996,2.209,1022,2.84,1024,1.801,1041,2.862,1046,1.312,1047,0.986,1064,1.975,1067,2.197,1080,1.173,1100,2.559,1102,1.975,1108,2.736,1109,1.312,1126,1.661,1168,1.801,1176,1.312,1181,3.31,1209,1.975,1269,3.668,1303,2.559,1368,3.669,1374,1.173,1375,2.559,1398,1.312,1408,1.975,1482,2.209,1511,1.312,1515,2.332,1525,2.209,1528,2.209,1531,1.975,1534,2.348,1551,3.357,1571,3.747,1572,2.209,1593,2.84,1600,1.312,1619,1.312,1621,4.775,1697,4.684,1700,4.879,1702,2.209,1704,3.357,1706,4.061,1707,2.209,1711,2.862,1712,2.862,1713,3.31,1714,2.862,1717,1.975,1719,3.002,1725,2.209,1738,2.209,1740,2.736,1741,2.736,1742,1.801,1743,2.736,1744,2.736,1745,1.801,1746,2.736,1748,4.061,1752,2.209,1753,1.975,1754,1.975,1755,4.363,1757,2.209,1758,3.357,1759,2.209,1761,1.312,1762,2.152,1766,1.312,1803,1.173,1804,3.897,1805,4.714,1806,3.897,1807,3.897,1808,3.897,1809,2.564,1810,2.564,1811,2.564,1812,2.564,1813,2.564,1814,2.564,1815,3.322,1816,3.322,1817,2.564,1818,2.564,1819,3.322,1820,2.564,1821,2.564,1822,3.897,1823,2.209,1824,3.897,1825,2.564,1826,3.897,1827,3.897,1828,2.564,1829,2.564,1830,2.209,1831,3.322,1832,1.523,1833,1.523,1834,2.564,1835,1.523,1836,2.862,1837,1.523,1838,2.564,1839,2.564,1840,2.564,1841,1.523,1842,5.964,1843,2.564,1844,2.564,1845,1.523,1846,2.564,1847,2.564,1848,2.564,1849,1.523,1850,2.564,1851,2.564,1852,1.523,1853,2.564,1854,1.523,1855,2.564,1856,4.714,1857,2.564,1858,2.564,1859,1.523,1860,3.897,1861,1.523,1862,1.523,1863,2.564,1864,3.897,1865,1.523,1866,2.209,1867,2.564,1868,2.564,1869,1.523,1870,2.564,1871,2.564,1872,3.897,1873,1.523,1874,2.564,1875,2.564,1876,2.564,1877,2.564,1878,1.523,1879,2.564,1880,2.564,1881,1.523,1882,1.523,1883,2.564,1884,1.523,1885,2.209,1886,1.523,1887,1.523,1888,1.173,1889,1.312,1890,1.523,1891,1.523,1892,1.523,1893,1.523,1894,1.523,1895,1.523,1896,1.523,1897,1.523,1898,1.523,1899,1.523,1900,1.523,1901,2.564,1902,1.523,1903,1.523,1904,2.564,1905,3.897,1906,2.564,1907,2.564,1908,2.564,1909,2.564,1910,2.564,1911,1.523,1912,3.897,1913,1.523,1914,1.523,1915,1.523,1916,2.564,1917,3.322,1918,1.523,1919,2.564,1920,3.897,1921,2.564,1922,2.564,1923,1.523,1924,1.523,1925,1.523,1926,2.564,1927,1.523,1928,2.564,1929,1.523,1930,1.523,1931,1.523,1932,1.523,1933,1.523,1934,1.523,1935,1.523,1936,1.523,1937,1.523,1938,1.523,1939,1.523,1940,1.523,1941,2.564,1942,1.523,1943,2.564,1944,3.322,1945,1.523,1946,1.523,1947,1.523,1948,1.523,1949,1.523,1950,1.523,1951,1.523,1952,1.523,1953,1.523,1954,1.523,1955,1.523,1956,1.523,1957,1.523,1958,1.523,1959,1.523,1960,1.523,1961,2.564,1962,2.564]],["title/components/ModalComponent.html",[89,0.595,162,1.147]],["body/components/ModalComponent.html",[3,0.157,4,0.157,5,0.141,7,0.244,8,0.56,13,0.389,14,0.018,16,0.518,18,0.157,19,0.01,20,0.01,23,0.625,27,0.301,41,1.322,46,0.887,50,1.692,51,1.199,54,0.624,57,1.046,61,0.637,65,1.777,70,2.195,77,0.918,89,0.901,90,1.006,91,1.612,92,1.218,93,1.218,94,1.218,96,1.692,99,1.149,100,1.702,101,1.401,103,1.468,108,1.067,111,2.856,112,1.781,115,3.785,116,1.401,117,1.218,118,3.013,119,1.868,121,2.195,123,2.424,124,1.815,125,1.006,126,1.777,127,1.692,128,1.218,129,2.305,130,1.218,131,1.218,132,0.961,133,1.105,134,1.777,135,1.054,136,1.16,137,1.105,138,1.218,139,0.961,140,1.218,141,0.918,142,1.218,143,0.961,144,1.006,145,1.218,146,1.006,147,1.777,148,0.961,149,1.777,150,1.006,151,1.777,152,1.006,153,1.218,154,0.961,155,1.218,156,0.961,157,0.961,158,1.692,159,1.218,160,0.961,161,1.218,162,1.847,163,1.218,164,1.006,165,0.961,166,1.105,167,1.16,168,1.218,181,2.846,196,2.029,198,3.385,200,1.842,251,1.732,282,2.136,327,1.468,328,0.961,415,1.692,420,2.424,423,1.818,430,1.777,472,3.785,481,4.444,501,2.748,544,1.349,553,2.553,580,3.385,743,3.02,773,4.233,783,3.995,795,2.591,808,3.385,862,2.076,863,3.085,903,3.785,916,3.085,917,2.328,928,2.591,933,5.629,938,3.995,956,3.385,961,3.995,1002,4.444,1023,4.91,1030,3.385,1040,3.385,1126,2.846,1218,5.222,1229,2.595,1230,4.468,1232,4.912,1542,3.785,1664,3.785,1717,3.385,1719,2.32,1724,3.385,1830,3.785,1836,4.468,1866,4.912,1885,3.785,1963,2.595,1964,4.394,1965,4.394,1966,4.912,1967,4.394,1968,4.394,1969,5.701,1970,6.697,1971,4.394,1972,4.394,1973,4.394,1974,4.394,1975,4.394,1976,4.394,1977,6.534,1978,5.701,1979,5.701,1980,5.187,1981,6.062,1982,4.394,1983,5.187,1984,6.534,1985,6.534,1986,6.534,1987,3.012,1988,3.012,1989,4.394,1990,3.012,1991,4.394,1992,3.012,1993,4.394,1994,3.012,1995,4.394,1996,3.012,1997,3.012,1998,3.012,1999,5.187,2000,3.785,2001,3.012,2002,3.012,2003,2.595,2004,3.012,2005,3.012,2006,4.394,2007,6.329,2008,5.701,2009,4.394,2010,3.012,2011,4.394,2012,3.012,2013,3.012,2014,4.394,2015,3.012,2016,4.394,2017,3.012,2018,3.012,2019,3.012,2020,3.012]],["title/interfaces/ModificarItemsDto.html",[0,0.352,1287,2.643]],["body/interfaces/ModificarItemsDto.html",[0,0.532,2,1.584,3,0.297,4,0.297,5,0.266,7,0.461,8,0.853,9,0.805,12,2.736,13,0.502,14,0.017,15,2.608,18,0.297,19,0.015,20,0.015,23,0.81,24,1.862,25,3.209,26,3.209,27,0.669,28,3.016,29,3.209,30,2.844,31,3.772,32,3.772,33,3.209,34,3.209,912,6.319,1287,4.699,2021,4.905,2022,7.335]],["title/interfaces/Param.html",[0,0.352,368,0.873]],["body/interfaces/Param.html",[0,0.418,2,1.245,3,0.233,4,0.233,5,0.209,7,0.363,8,0.735,12,1.723,13,0.573,14,0.018,15,1.642,18,0.384,19,0.013,20,0.013,23,0.637,24,1.876,41,1.687,51,1.171,54,0.811,260,2.371,307,3.02,313,3.057,328,2.151,368,1.338,374,3.599,376,4.136,390,3.143,581,3.143,582,3.737,633,2.236,660,4.901,667,2.523,674,2.697,675,2.371,714,4.483,723,4.444,772,3.143,773,4.369,775,3.143,776,3.143,839,3.448,926,2.236,2023,3.448,2024,5.77,2025,5.675,2026,5.675,2027,6.744,2028,5.195,2029,5.195,2030,4.444,2031,3.856,2032,3.856,2033,3.856,2034,3.856,2035,4.476,2036,3.856,2037,3.448,2038,3.856,2039,3.856,2040,3.856,2041,4.971,2042,4.444,2043,3.856,2044,4.476,2045,3.856,2046,3.856,2047,4.444,2048,3.856,2049,3.856,2050,3.856,2051,3.856,2052,3.856,2053,3.856,2054,4.476]],["title/interfaces/RecetaDto.html",[0,0.352,829,1.994]],["body/interfaces/RecetaDto.html",[0,0.531,2,1.579,3,0.296,4,0.296,5,0.265,7,0.46,8,0.851,9,0.911,12,2.733,13,0.532,14,0.018,15,2.604,16,0.567,18,0.296,19,0.015,20,0.015,37,2.963,41,1.646,609,3.882,623,3.661,829,3.539,1278,5.755,2055,4.889]],["title/interfaces/RecetaServiceInterface.html",[0,0.352,2056,2.899]],["body/interfaces/RecetaServiceInterface.html",[0,0.428,2,1.274,3,0.239,4,0.239,5,0.214,7,0.371,8,0.746,9,0.845,13,0.548,14,0.018,16,0.718,18,0.239,19,0.013,20,0.013,37,2.367,41,1.497,46,1.181,51,1.289,53,1.418,54,0.845,57,1.289,62,2.616,64,1.602,294,3.214,302,3.148,314,3.224,341,2.892,350,1.762,368,1.578,409,4.318,411,3.638,829,4.101,1272,3.214,1823,5.043,2056,4.509,2057,3.944,2058,5.853,2059,5.853,2060,5.853,2061,5.853,2062,5.853,2063,4.578,2064,5.853,2065,4.578,2066,5.853,2067,4.578,2068,5.853,2069,4.578,2070,5.853,2071,4.578,2072,4.578]],["title/components/RegistroComponent.html",[89,0.595,165,1.2]],["body/components/RegistroComponent.html",[3,0.106,4,0.106,5,0.095,7,0.165,8,0.415,9,0.245,13,0.548,14,0.018,16,0.569,18,0.106,19,0.007,20,0.007,23,0.579,24,0.567,27,0.204,35,2.288,36,3.265,37,2.706,40,1.726,41,1.258,46,0.658,50,1.79,51,1.147,53,0.411,54,0.559,57,0.747,61,0.431,73,1.298,77,0.993,89,0.735,90,0.681,91,1.196,92,0.824,93,0.824,94,0.824,96,2.087,99,1.645,100,1.7,102,1.459,103,1.089,105,1.628,108,1.603,111,2.681,112,1.572,116,1.039,117,0.824,118,2.837,119,1.386,121,1.628,123,0.867,124,1.627,125,0.681,126,1.318,127,1.255,128,0.824,129,1.88,130,0.824,131,0.824,132,0.65,133,1.866,134,1.318,135,0.714,136,1.958,137,2.343,138,0.824,139,0.65,140,0.824,141,0.621,142,0.824,143,0.65,144,0.681,145,0.824,146,0.681,147,1.318,148,0.65,149,1.318,150,0.681,151,1.318,152,0.681,153,0.824,154,0.65,155,0.824,156,0.65,157,0.65,158,1.255,159,0.824,160,0.65,161,0.824,162,1.417,163,0.824,164,0.681,165,1.622,166,2.574,167,0.785,168,0.824,185,1.989,196,1.937,200,2.056,202,0.913,203,1.837,218,2.402,219,0.963,222,1.228,248,4.05,251,2.374,256,0.785,259,1.089,270,1.54,272,1.255,282,2.037,293,1.321,296,3.012,313,1.08,327,1.553,328,1.483,331,2.659,368,0.944,395,4.211,415,2.191,420,2.659,428,1.432,429,2.621,430,2.738,431,3.232,432,2.872,435,2.794,437,2.306,445,1.08,457,1.823,464,1.571,468,1.08,476,1.571,501,2.464,520,1.321,521,2.453,522,2.808,523,2.288,524,3.582,532,1.628,533,1.837,538,2.323,542,3.265,544,0.913,547,1.08,553,2.428,633,3.124,636,0.963,675,2.157,792,3.012,793,2.802,795,1.628,862,1.54,871,1.963,874,2.288,917,3.132,918,2.111,919,4.334,926,3.124,928,3.124,929,1.837,935,3.767,936,3.767,947,2.802,956,3.136,964,2.859,966,2.859,977,3.294,983,2.51,985,4.484,986,3.57,992,2.288,1006,2.637,1007,3.83,1009,4.39,1010,4.177,1011,3.582,1012,3.807,1016,2.288,1017,2.637,1019,1.321,1022,1.963,1023,4.277,1024,3.265,1026,2.288,1032,3.056,1043,1.321,1110,2.51,1166,2.802,1174,2.111,1178,2.51,1192,2.51,1201,2.51,1203,2.51,1350,2.51,1430,2.808,1431,4.006,1435,4.006,1436,4.006,1438,5.094,1441,4.006,1442,4.006,1445,5.094,1447,2.808,1448,4.006,1449,2.808,1450,2.808,1451,4.671,1452,4.006,1453,2.808,1455,2.808,1457,2.808,1459,2.808,1469,1.756,1515,2.288,1593,1.963,1721,2.51,1966,1.756,2073,1.756,2074,3.259,2075,5.913,2076,3.259,2077,3.259,2078,3.259,2079,3.259,2080,3.259,2081,3.259,2082,4.071,2083,4.65,2084,2.039,2085,2.039,2086,3.259,2087,2.039,2088,3.259,2089,2.808,2090,4.006,2091,2.039,2092,3.259,2093,4.65,2094,2.039,2095,3.259,2096,3.259,2097,2.039,2098,2.039,2099,2.039,2100,3.259,2101,3.259,2102,3.259,2103,2.039,2104,2.039,2105,2.039,2106,3.259,2107,3.259,2108,2.039,2109,4.071,2110,3.259,2111,2.039,2112,3.259,2113,2.039,2114,2.039,2115,2.039,2116,3.259,2117,2.039,2118,2.039,2119,2.039,2120,2.039,2121,2.039,2122,3.259,2123,3.259,2124,3.259,2125,3.259,2126,3.259]],["title/injectables/SnackbarService.html",[287,1.685,959,1.88]],["body/injectables/SnackbarService.html",[3,0.211,4,0.211,5,0.189,7,0.328,9,0.732,13,0.456,14,0.018,16,0.54,18,0.211,19,0.012,20,0.012,23,0.962,27,0.405,41,1.613,46,1.091,50,2.082,51,1.116,53,1.228,54,0.781,57,0.992,61,0.858,73,1.941,98,2.443,99,1.634,100,1.649,102,2.907,108,1.689,116,1.725,185,1.984,186,3.503,196,1.806,200,1.574,202,3.115,207,5.592,227,3.123,228,3.123,282,2.218,287,2.422,289,2.627,362,2.627,368,1.411,423,2.07,437,2.957,445,2.148,457,3.27,532,3.604,533,3.048,535,4.659,795,2.702,862,2.555,863,3.797,908,3.493,917,3.438,929,3.048,959,3.04,978,4.731,981,4.166,985,4.557,986,4.883,1106,4.166,1328,5.992,1407,5.242,1721,4.166,2127,5.592,2128,3.493,2129,5.408,2130,6.49,2131,5.408,2132,5.408,2133,5.408,2134,5.408,2135,5.408,2136,5.408,2137,5.408,2138,5.408,2139,5.408,2140,5.408,2141,5.408,2142,5.408,2143,4.055,2144,4.055,2145,5.408,2146,4.055,2147,6.49,2148,6.49,2149,6.49,2150,5.408,2151,4.055,2152,5.408,2153,5.408,2154,5.408,2155,5.408,2156,5.408,2157,5.408,2158,5.408,2159,5.408]],["title/modules/UsuarioModule.html",[42,1.449,2160,2.643]],["body/modules/UsuarioModule.html",[3,0.202,4,0.202,5,0.181,14,0.018,16,0.767,18,0.202,19,0.012,20,0.012,23,0.747,27,0.388,42,2.022,44,1.834,54,0.467,59,2.96,61,0.821,65,2.123,66,3.855,67,2.056,68,2.514,82,2.338,99,1.163,100,1.62,101,1.675,103,1.754,107,2.782,108,1.275,112,1.826,125,1.296,132,2.19,133,1.424,139,2.19,141,2.092,144,1.754,146,2.294,148,2.19,150,2.294,152,2.294,156,2.19,157,2.19,160,2.19,162,2.092,164,2.294,169,2.338,170,1.939,179,3.687,180,2.725,181,2.514,183,3.842,185,1.927,186,3.401,189,3.164,200,1.999,202,2.855,215,2.989,217,3.164,218,1.834,219,1.834,222,2.338,223,4.524,224,2.725,225,3.343,234,2.989,235,3.343,236,3.343,237,4.524,238,2.725,239,3.343,240,2.514,241,3.343,257,3.401,265,4.045,272,2.022,273,3.164,280,4.524,281,2.481,423,1.675,431,3.148,441,3.687,459,3.401,516,3.401,517,4.524,518,4.524,527,4.524,543,3.687,544,1.738,547,2.056,553,2.351,623,2.623,790,2.725,794,3.401,796,3.164,951,3.164,952,2.623,960,4.524,991,3.687,1067,3.594,1078,4.524,1303,4.045,1374,2.989,1375,2.989,2160,5.505,2161,3.343,2162,3.343,2163,3.343,2164,4.448,2165,3.881,2166,5.251,2167,5.251,2168,5.251,2169,4.524,2170,3.343,2171,3.881,2172,3.343,2173,3.343,2174,3.343,2175,3.343,2176,3.343]],["title/modules/UsuarioRoutingModule.html",[42,1.449,2164,2.438]],["body/modules/UsuarioRoutingModule.html",[3,0.253,4,0.253,5,0.226,14,0.018,16,0.748,18,0.253,19,0.014,20,0.014,23,0.69,27,0.484,42,1.866,44,2.29,54,0.583,59,3.421,61,1.025,65,1.96,67,2.568,89,1.153,99,1.584,100,1.684,101,1.546,103,1.619,107,2.568,108,1.177,112,1.289,132,1.936,133,2.227,141,1.849,144,2.027,146,2.027,152,2.027,156,1.936,158,2.337,164,2.027,183,3.657,196,1.689,200,1.411,253,3.734,254,4.675,255,3.992,256,1.866,259,1.619,260,3.922,265,3.734,271,3.404,272,2.551,273,3.992,415,1.866,417,4.176,423,1.546,431,2.868,553,2.171,559,4.176,623,3.032,790,3.404,794,3.14,947,2.92,948,4.176,950,3.734,951,3.657,952,3.032,998,3.14,1067,3.421,1684,4.176,2164,4.292,2169,5.229,2170,4.176,2172,4.176,2173,4.176,2174,4.176,2175,4.176,2176,4.176,2177,4.847,2178,4.847,2179,6.069,2180,4.847,2181,4.847,2182,4.847]],["title/interfaces/UsuariosServiceInterface.html",[0,0.352,2183,2.899]],["body/interfaces/UsuariosServiceInterface.html",[0,0.46,2,1.369,3,0.257,4,0.257,5,0.23,7,0.399,8,0.78,9,0.802,13,0.539,14,0.018,16,0.742,18,0.257,19,0.014,20,0.014,21,5.142,46,1.236,51,1.224,53,1.346,54,0.802,57,1.224,62,2.649,64,1.722,294,3.299,302,2.987,314,3.158,341,2.969,350,1.894,368,1.421,409,4.186,411,3.936,1037,5.641,1272,3.454,2183,4.719,2184,4.238,2185,6.126,2186,6.126,2187,6.126,2188,6.126,2189,4.92,2190,6.126,2191,4.92,2192,6.126,2193,4.92,2194,4.92]],["title/coverage.html",[2195,4.43]],["body/coverage.html",[0,0.695,1,2.013,5,0.134,6,2.47,13,0.569,14,0.018,19,0.01,20,0.01,21,2.013,22,2.47,27,0.504,56,3.848,62,1.003,77,0.873,89,1.158,90,0.958,95,2.47,132,0.914,135,1.003,137,1.555,139,0.914,141,0.873,143,0.914,146,0.958,148,0.914,150,0.958,152,0.958,154,0.914,156,0.914,157,0.914,160,0.914,162,0.873,164,0.958,165,0.914,170,1.432,178,1.857,224,2.013,230,2.208,234,2.208,238,2.013,240,2.745,242,2.013,257,1.857,287,3.02,288,1.857,290,2.47,292,1.857,304,1.857,349,1.727,356,2.013,357,2.013,360,2.013,368,0.665,408,2.47,412,2.013,414,2.47,448,2.208,450,3.264,561,2.47,606,1.857,607,2.47,610,1.857,611,2.47,620,2.013,625,2.47,628,3.264,643,2.013,743,4.176,789,2.47,790,2.013,791,2.47,824,3.979,828,1.727,829,1.519,838,2.47,859,2.013,860,2.47,910,2.013,911,2.47,913,2.47,914,2.47,940,2.013,941,2.47,942,2.47,959,1.432,977,1.857,1072,2.47,1095,2.013,1097,2.208,1099,2.013,1188,2.47,1189,2.47,1253,2.208,1254,2.47,1274,2.208,1275,2.47,1279,2.208,1280,2.47,1287,2.013,1300,3.65,1301,2.47,1319,2.208,1422,2.47,1475,2.47,1476,2.208,1477,2.47,1478,2.47,1534,1.727,1643,2.47,1697,3.539,1698,2.47,1713,2.013,1762,3.606,1764,2.975,1781,2.47,1782,2.208,1783,2.47,1803,3.264,1963,2.47,2021,2.47,2023,5.087,2025,2.208,2026,2.208,2028,2.208,2029,2.208,2030,2.208,2042,2.208,2047,2.208,2055,2.47,2056,2.208,2057,2.47,2073,2.47,2127,2.47,2128,2.47,2183,2.208,2184,2.47,2195,2.47,2196,2.867,2197,2.867,2198,2.867,2199,7.663,2200,7.114,2201,2.867,2202,2.867,2203,2.867,2204,2.867,2205,2.867,2206,2.867,2207,2.867,2208,2.867,2209,7.517,2210,7.777,2211,2.867,2212,5.04,2213,2.47,2214,4.237,2215,4.576,2216,2.47,2217,2.47,2218,2.47,2219,2.867,2220,2.867,2221,2.867,2222,2.867,2223,2.867,2224,2.867,2225,2.867,2226,2.867,2227,2.867,2228,4.237,2229,2.47,2230,2.47,2231,4.237,2232,5.94,2233,2.867,2234,5.04,2235,5.04,2236,2.867,2237,2.867,2238,2.867,2239,2.867,2240,2.867,2241,2.867,2242,2.867,2243,2.867,2244,2.867,2245,5.567,2246,2.867,2247,2.47,2248,2.867,2249,2.867,2250,2.867,2251,2.867,2252,4.289,2253,7.562,2254,3.264,2255,5.727,2256,3.264,2257,3.264,2258,3.264,2259,3.264,2260,3.264,2261,3.264,2262,3.264,2263,3.264,2264,3.264,2265,2.867,2266,2.867,2267,4.289,2268,5.04,2269,3.264,2270,3.264,2271,4.237,2272,4.237,2273,3.264,2274,3.264,2275,3.264,2276,2.867,2277,2.867,2278,3.65,2279,2.867]],["title/dependencies.html",[169,2.728,2280,2.705]],["body/dependencies.html",[14,0.018,19,0.015,20,0.015,61,1.164,169,3.315,170,3.501,211,5.65,212,5.052,218,3.099,219,2.6,221,4.741,256,2.119,350,2.119,544,2.464,547,2.915,1529,4.741,1599,4.741,1888,4.239,1889,4.741,2003,4.741,2281,7.007,2282,5.503,2283,6.558,2284,7.52,2285,5.503,2286,5.503,2287,5.503,2288,5.503,2289,5.503,2290,6.558,2291,5.503,2292,5.503,2293,5.503,2294,5.503,2295,5.503,2296,5.503,2297,5.503,2298,5.503,2299,5.503,2300,5.503]],["title/miscellaneous/functions.html",[2301,1.892,2302,3.901]],["body/miscellaneous/functions.html",[7,0.393,9,0.86,12,1.866,13,0.536,14,0.017,19,0.014,20,0.014,23,0.988,37,1.96,41,1.782,53,1.443,54,0.86,57,1.312,99,1.64,100,1.684,105,3.032,108,1.177,124,1.696,196,1.689,251,1.619,272,1.866,282,1.546,307,2.171,420,2.818,422,3.992,450,3.734,452,5.229,460,5.229,476,4.675,494,4.176,497,4.176,498,4.176,499,4.176,500,3.734,501,2.568,502,4.176,538,3.311,623,3.032,808,3.734,829,3.865,870,3.932,1269,3.657,1319,4.675,1368,4.499,1388,5.229,1713,4.262,1724,3.734,1753,5.35,1754,3.734,1755,5.35,1779,4.176,2000,4.176,2213,5.229,2215,3.734,2216,5.229,2217,5.229,2301,2.92,2302,4.176,2303,5.983,2304,4.847,2305,4.847,2306,4.847,2307,6.069,2308,4.847,2309,4.847,2310,6.069,2311,6.069,2312,6.069,2313,6.069,2314,4.847]],["title/index.html",[7,0.254,2315,3.14,2316,3.14]],["body/index.html",[14,0.013,19,0.013,20,0.013,37,1.856,89,0.725,91,1.684,96,1.767,99,1.67,100,1.73,101,1.87,102,3.049,105,2.293,108,1.776,112,1.22,116,2.295,167,1.767,185,2.371,196,1.957,198,4.516,200,1.336,274,3.535,281,2.168,282,2.061,415,2.708,420,1.951,423,2.061,432,2.431,459,2.973,516,2.973,520,2.973,553,2.626,558,5.051,804,2.973,874,3.222,904,2.973,905,5.051,929,3.305,980,3.222,1032,2.587,1036,4.516,1039,3.535,1126,2.973,1166,3.532,1174,2.973,1192,4.516,1426,4.977,1440,3.954,1515,3.222,1531,3.535,1577,3.535,1585,3.954,1588,3.954,1597,3.954,1598,3.954,1694,5.051,1727,3.954,1888,5.542,2089,6.06,2090,3.954,2317,4.589,2318,7.034,2319,4.589,2320,4.589,2321,6.461,2322,5.863,2323,4.589,2324,4.589,2325,4.589,2326,4.589,2327,4.589,2328,4.589,2329,4.589,2330,4.589,2331,4.589,2332,4.589,2333,4.589,2334,4.589,2335,5.863,2336,4.589,2337,4.589,2338,4.589,2339,4.589,2340,5.863,2341,4.589,2342,4.589,2343,3.954,2344,4.589,2345,5.863,2346,4.589,2347,4.589,2348,4.589,2349,4.589,2350,4.589,2351,4.589,2352,4.589,2353,4.589,2354,5.863,2355,4.589,2356,4.589,2357,4.589,2358,6.461,2359,5.863,2360,4.589,2361,4.589,2362,4.589,2363,6.808,2364,4.589,2365,4.589,2366,5.863,2367,4.589,2368,4.589,2369,4.589,2370,4.589,2371,4.589,2372,4.589,2373,4.589,2374,4.589,2375,4.589,2376,4.589,2377,4.589,2378,4.589,2379,4.589,2380,4.589,2381,4.589,2382,3.535,2383,4.589,2384,4.589]],["title/modules.html",[44,2.43]],["body/modules.html",[14,0.015,19,0.015,20,0.015,43,3.795,44,2.768,82,3.53,177,3.795,212,5.54,510,3.795,514,3.795,715,5.702,2160,4.114,2164,3.795,2385,7.403,2386,7.692,2387,7.192,2388,7.192]],["title/overview.html",[2382,3.961]],["body/overview.html",[2,1.266,14,0.018,19,0.013,20,0.013,42,1.751,43,4.168,44,2.149,66,2.947,67,2.41,68,2.947,82,4.746,90,2.438,91,1.669,125,1.519,132,2.052,139,2.164,141,1.96,143,2.052,146,2.149,148,2.164,150,2.469,152,2.149,154,2.052,156,2.052,157,2.164,160,2.164,162,2.137,164,2.149,165,2.052,169,2.741,170,2.273,171,3.919,172,3.919,173,3.919,174,3.919,175,3.919,176,3.919,177,4.168,178,4.168,179,4.094,180,3.194,181,2.947,255,2.741,289,2.947,412,3.194,510,4.875,511,3.919,512,3.919,513,3.919,514,4.168,560,3.194,580,3.504,1691,3.919,2160,5.543,2161,3.919,2162,3.919,2163,3.919,2164,4.168,2247,5.023,2382,3.504,2389,4.549,2390,4.549,2391,4.549]],["title/properties.html",[8,0.577,2280,2.705]],["body/properties.html",[8,0.782,14,0.017,19,0.016,20,0.016,2392,6.137,2393,6.137]],["title/routes.html",[255,3.098]],["body/routes.html",[14,0.016,19,0.016,20,0.016,255,3.716]],["title/miscellaneous/typealiases.html",[2301,1.892,2394,4.528]],["body/miscellaneous/typealiases.html",[7,0.321,12,1.527,13,0.297,14,0.018,15,1.455,19,0.012,20,0.012,24,1.867,41,1.492,51,1.18,260,2.101,307,1.776,313,2.823,376,3.451,390,2.785,457,3.29,581,2.785,582,3.451,633,1.981,660,4.852,667,3.003,674,2.389,675,2.101,714,4.225,772,2.785,775,2.785,776,2.785,824,4.324,839,3.055,867,4.104,926,1.981,1591,4.225,1592,4.225,1593,3.625,1594,4.225,1595,4.225,1740,3.741,1741,3.741,1742,3.741,1743,3.741,1744,3.741,1745,3.741,1746,3.741,1762,4.167,1764,3.741,2023,3.055,2025,4.104,2026,4.104,2028,4.104,2029,4.104,2030,4.635,2031,3.417,2032,3.417,2033,3.417,2034,3.417,2036,3.417,2037,4.104,2038,3.417,2039,4.59,2040,3.417,2041,4.59,2042,4.635,2043,3.417,2045,3.417,2046,3.417,2047,4.635,2048,3.417,2049,3.417,2050,3.417,2051,3.417,2052,3.417,2053,3.417,2252,3.055,2254,3.055,2255,5.941,2256,3.055,2257,3.055,2258,3.055,2259,3.055,2260,3.055,2261,3.055,2262,3.055,2263,3.055,2264,3.055,2267,3.055,2269,3.055,2270,3.055,2273,3.055,2274,3.055,2275,4.104,2301,2.389,2395,3.966,2396,4.59,2397,4.59,2398,3.417,2399,3.417,2400,3.417,2401,7.06,2402,3.417,2403,3.417,2404,3.417,2405,3.417,2406,3.417,2407,3.417,2408,3.417,2409,3.417,2410,3.417,2411,3.417,2412,3.417,2413,4.59,2414,4.59,2415,4.59,2416,4.59,2417,4.59,2418,4.59,2419,4.59,2420,4.59,2421,4.59,2422,4.59,2423,4.59,2424,4.59,2425,3.966,2426,3.966,2427,6.329,2428,3.417]],["title/miscellaneous/variables.html",[358,3.179,2301,1.892]],["body/miscellaneous/variables.html",[7,0.26,13,0.569,14,0.018,19,0.01,20,0.01,77,0.979,99,0.712,170,2.3,240,2.081,288,2.081,327,2.542,328,2.421,356,3.232,357,3.232,358,2.256,457,3.377,581,5.275,610,2.081,805,2.081,824,4.726,828,1.936,867,4.525,977,2.081,1095,2.256,1097,2.475,1099,2.256,1579,2.768,1591,4.543,1592,4.543,1593,3.898,1594,4.543,1595,4.543,1697,2.256,1740,4.125,1741,4.125,1742,4.125,1743,4.125,1744,4.125,1745,4.125,1746,4.125,1762,4.846,1764,4.679,1803,3.546,2037,3.546,2215,2.475,2218,3.966,2229,2.768,2230,3.966,2252,2.475,2254,2.475,2255,6.022,2256,2.475,2257,2.475,2258,2.475,2259,2.475,2260,2.475,2261,2.475,2262,2.475,2263,2.475,2264,2.475,2267,2.475,2269,2.475,2270,2.475,2273,2.475,2274,2.475,2275,4.525,2278,2.768,2301,1.936,2303,2.768,2343,2.768,2396,3.966,2397,3.966,2398,2.768,2399,2.768,2400,2.768,2402,2.768,2403,2.768,2404,2.768,2405,2.768,2406,2.768,2407,2.768,2408,2.768,2409,2.768,2410,2.768,2411,2.768,2412,2.768,2413,5.357,2414,5.357,2415,5.357,2416,5.357,2417,5.357,2418,5.357,2419,5.357,2420,4.634,2421,4.634,2422,5.061,2423,5.061,2424,5.061,2427,6.496,2428,3.966,2429,3.213,2430,4.603,2431,3.213,2432,3.213,2433,3.213,2434,3.213,2435,3.213,2436,4.603,2437,4.603,2438,3.213,2439,3.213,2440,3.213]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":743,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["0','bg",{"_index":1389,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["0.0.0",{"_index":2393,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1252,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["0.2s",{"_index":1231,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["0.6rem",{"_index":1227,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["0/1",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2241,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2249,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2242,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":580,"title":{},"body":{"classes/BaseService.html":{},"components/ModalComponent.html":{},"overview.html":{}}}],["1.11.3",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["1.4rem",{"_index":1228,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["1/1",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2248,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2251,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1415,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["10/10",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":508,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["11/11",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2276,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1225,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["14",{"_index":2250,"title":{},"body":{"coverage.html":{}}}],["160",{"_index":1250,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["16px",{"_index":1248,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["17",{"_index":2390,"title":{},"body":{"overview.html":{}}}],["18.0.0",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["18/18",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":2284,"title":{},"body":{"dependencies.html":{}}}],["19.2.10",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["19.2.7",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["19.2.8",{"_index":2320,"title":{},"body":{"index.html":{}}}],["1px",{"_index":1653,"title":{},"body":{"components/MenuComponent.html":{}}}],["1rem",{"_index":1241,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["2",{"_index":1665,"title":{},"body":{"components/MenuComponent.html":{}}}],["2.3.0",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2247,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["20/20",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1251,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["26/26",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["28/28",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1237,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["3",{"_index":1691,"title":{},"body":{"components/MenuComponent.html":{},"overview.html":{}}}],["3).join",{"_index":1689,"title":{},"body":{"components/MenuComponent.html":{}}}],["3.0.1",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["30/30",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":2154,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["33",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":1222,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["34/34",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["44",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["5.0",{"_index":645,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["5.3.5",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2246,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2245,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1958,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["5px",{"_index":1246,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["6.3.12",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":1247,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["7",{"_index":2389,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["7a5eb5",{"_index":1220,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["8/18",{"_index":2244,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2391,"title":{},"body":{"overview.html":{}}}],["a4",{"_index":1673,"title":{},"body":{"components/MenuComponent.html":{}}}],["abandona",{"_index":1847,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["abre",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"index.html":{}}}],["abrirmodalnuevomenu",{"_index":1496,"title":{},"body":{"components/MenuComponent.html":{}}}],["abrirregistro",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{}}}],["abrirtooltipcondelay",{"_index":1820,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["abrirtooltipcondelay(tooltip",{"_index":1840,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["accede",{"_index":1470,"title":{},"body":{"components/LoginComponent.html":{}}}],["acceder",{"_index":551,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HomeComponent.html":{}}}],["accept",{"_index":707,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts",{"_index":713,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.find((x",{"_index":748,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.length",{"_index":747,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts[0",{"_index":749,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["acceso",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accessors",{"_index":1982,"title":{},"body":{"components/ModalComponent.html":{}}}],["accesstoken",{"_index":629,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["acción",{"_index":2088,"title":{},"body":{"components/RegistroComponent.html":{}}}],["activada",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":818,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["activo",{"_index":1191,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["actual",{"_index":1738,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["actual_component",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["actuales",{"_index":1028,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actualicen",{"_index":869,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["actualiza",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["actualizado",{"_index":1064,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuTablaComponent.html":{}}}],["actualizados",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["actualizando",{"_index":1857,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["actualizar",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["actualizardatos",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["actualizaringrediente",{"_index":1255,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["actualizaringrediente(ingredientedto",{"_index":1260,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["actualizarreceta",{"_index":2058,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["actualizarreceta(recetadto",{"_index":2062,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["actualizarrecetasmenu",{"_index":1784,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["actualizarrecetasmenu(actualizarrecetasmenudto",{"_index":1789,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["actualizarrecetasmenudto",{"_index":1,"title":{"interfaces/ActualizarRecetasMenuDto.html":{}},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"coverage.html":{}}}],["actualizarusuario",{"_index":2185,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["actualizarusuario(actualizarusuariodto",{"_index":2188,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["actualizarusuariodto",{"_index":21,"title":{"interfaces/ActualizarUsuarioDto.html":{}},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["actualmente",{"_index":1040,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{}}}],["actúa",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["adapte",{"_index":2371,"title":{},"body":{"index.html":{}}}],["add",{"_index":584,"title":{},"body":{"classes/BaseService.html":{}}}],["addcredentialtoheaders",{"_index":634,"title":{},"body":{"classes/Configuration.html":{}}}],["addcredentialtoheaders(credentialkey",{"_index":679,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["addcredentialtoquery",{"_index":635,"title":{},"body":{"classes/Configuration.html":{}}}],["addcredentialtoquery(credentialkey",{"_index":684,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["addonright",{"_index":1448,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["addreceta",{"_index":1785,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["addreceta(addrecetadto",{"_index":1791,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["addrecetadto",{"_index":827,"title":{},"body":{"components/CrearMenuComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{}}}],["addrecetadto.categoriaenum",{"_index":830,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["addrecetadto.diaenum",{"_index":1887,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["addtohttpparams",{"_index":297,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["addtohttpparams(httpparams",{"_index":329,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["addtohttpparamsrecursive",{"_index":298,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["addtohttpparamsrecursive(httpparams",{"_index":334,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["además",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{}}}],["adicionales",{"_index":2374,"title":{},"body":{"index.html":{}}}],["admin",{"_index":2428,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":1041,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["agrega",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["agrupa",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsuarioModule.html":{}}}],["al",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["alguno",{"_index":2331,"title":{},"body":{"index.html":{}}}],["alias",{"_index":2253,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["almacena",{"_index":1459,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["almuerzo",{"_index":1592,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":79,"title":{},"body":{"modules/ApiModule.html":{}}}],["altaingrediente",{"_index":1256,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["altaingrediente(ingredientedto",{"_index":1263,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["altareceta",{"_index":2059,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["altareceta(recetadto",{"_index":2064,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["altausuario",{"_index":2186,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["altausuario(usuariodto",{"_index":2190,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["amigable",{"_index":1726,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["amigables",{"_index":1705,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["anadiritems",{"_index":1281,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["anadiritems(modificaritemsdto",{"_index":1286,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["angular",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["angular/animations",{"_index":2003,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":1374,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{}}}],["angular/common",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":64,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["angular/compiler",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CategoriaIngredienteService.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":547,"title":{},"body":{"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["angular/material/snack",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/ListadoIngredientesComponent.html":{},"injectables/SnackbarService.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{},"dependencies.html":{}}}],["animaciones",{"_index":1971,"title":{},"body":{"components/ModalComponent.html":{}}}],["animado",{"_index":1965,"title":{},"body":{"components/ModalComponent.html":{}}}],["animate",{"_index":2002,"title":{},"body":{"components/ModalComponent.html":{}}}],["animate('200ms",{"_index":2008,"title":{},"body":{"components/ModalComponent.html":{}}}],["animations",{"_index":2004,"title":{},"body":{"components/ModalComponent.html":{}}}],["anterior",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["anteriores",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["antes",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["antigua",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["apellido",{"_index":35,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["apellidos",{"_index":2075,"title":{},"body":{"components/RegistroComponent.html":{}}}],["apertura",{"_index":1758,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["api.base.service",{"_index":359,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["apikeys",{"_index":630,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["apimodule",{"_index":43,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimodule.forroot",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["apirespuestaboolean",{"_index":1272,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["apirespuestalistacompradto",{"_index":1298,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["apirespuestalistingredientedto",{"_index":1273,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["apirespuestalistlistacompradto",{"_index":1297,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["apirespuestalistmenusemanaldto",{"_index":1801,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["apirespuestalistrecetadto",{"_index":2072,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["apirespuestaloginresponse",{"_index":353,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{}}}],["apirespuestamenusemanaldto",{"_index":1802,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["apirespuestausuariodto",{"_index":2194,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["apirespuestavoid",{"_index":1299,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["apis",{"_index":2230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["aplica",{"_index":1520,"title":{},"body":{"components/MenuComponent.html":{}}}],["aplicación",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["aplicar",{"_index":1532,"title":{},"body":{"components/MenuComponent.html":{}}}],["aplicarestilospdfmanual",{"_index":1497,"title":{},"body":{"components/MenuComponent.html":{}}}],["aplicarestilospdfmanual(elemento",{"_index":1517,"title":{},"body":{"components/MenuComponent.html":{}}}],["aplicarfiltro",{"_index":1318,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["aplicarfiltro(m",{"_index":1330,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["app.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":2171,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["appcomponent",{"_index":90,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":370,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["application/vnd.company+json",{"_index":696,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["appmodule",{"_index":82,"title":{"modules/AppModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":177,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqu",{"_index":1203,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["archivo",{"_index":1486,"title":{},"body":{"components/MenuComponent.html":{}}}],["archivos",{"_index":2332,"title":{},"body":{"index.html":{}}}],["arranque",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["arrastrar",{"_index":1806,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["arrastre",{"_index":1875,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["array",{"_index":12,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/ListaCompraDto.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"components/MenuTablaComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.from(categoriasunicas",{"_index":1773,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["array.from(new",{"_index":1636,"title":{},"body":{"components/MenuComponent.html":{}}}],["array.isarray(basepath",{"_index":574,"title":{},"body":{"classes/BaseService.html":{}}}],["array.isarray(value",{"_index":596,"title":{},"body":{"classes/BaseService.html":{}}}],["artefactos",{"_index":2348,"title":{},"body":{"index.html":{}}}],["asegurando",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{}}}],["asignadas",{"_index":1686,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["asignar",{"_index":1950,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["asociadas",{"_index":1483,"title":{},"body":{"components/MenuComponent.html":{}}}],["asociado",{"_index":1457,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["asterisco",{"_index":932,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["autenticación",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["autenticado",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["autenticarse",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["auth/login",{"_index":401,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["authcontroller.serviceinterface",{"_index":361,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["authcontrollerservice",{"_index":288,"title":{"injectables/AuthControllerService.html":{}},"body":{"injectables/AuthControllerService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontrollerserviceinterface",{"_index":360,"title":{"interfaces/AuthControllerServiceInterface.html":{}},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"coverage.html":{}}}],["authentication",{"_index":658,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["authguard",{"_index":257,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":178,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":510,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":473,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authreq",{"_index":487,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":514,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice:authcontrollerservice",{"_index":1460,"title":{},"body":{"components/LoginComponent.html":{}}}],["auto",{"_index":28,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"components/ListadoIngredientesComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["automáticamente",{"_index":1192,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["automáticas",{"_index":1208,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["auxiliar",{"_index":498,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["available",{"_index":715,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"modules.html":{}}}],["añade",{"_index":451,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/FormlyHorizontalWrapper.html":{}}}],["añadimos",{"_index":2013,"title":{},"body":{"components/ModalComponent.html":{}}}],["aún",{"_index":500,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"miscellaneous/functions.html":{}}}],["backend",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["background",{"_index":1213,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["backwards",{"_index":766,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bajo",{"_index":2169,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["bar",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/ListadoIngredientesComponent.html":{},"injectables/SnackbarService.html":{}}}],["bar.service",{"_index":1047,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["bar.service.ts",{"_index":2128,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["bar.service.ts:20",{"_index":2144,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["bar.service.ts:31",{"_index":2151,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["bar.service.ts:43",{"_index":2146,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["base",{"_index":81,"title":{},"body":{"modules/ApiModule.html":{}}}],["base_path",{"_index":356,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basepath",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["basepath[0",{"_index":575,"title":{},"body":{"classes/BaseService.html":{}}}],["baseservice",{"_index":292,"title":{"classes/BaseService.html":{}},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"coverage.html":{}}}],["baseservice:27",{"_index":337,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:31",{"_index":333,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:39",{"_index":335,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:6",{"_index":339,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:7",{"_index":342,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:8",{"_index":340,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["baseservice:9",{"_index":344,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["basic",{"_index":663,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bearer",{"_index":490,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bg",{"_index":1212,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["bienvenido",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["binary",{"_index":2053,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["blob",{"_index":397,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["bloque",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":315,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuComponent.html":{},"interfaces/Param.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.tooltip(el",{"_index":1907,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["bootstrap/ng",{"_index":1889,"title":{},"body":{"components/MenuTablaComponent.html":{},"dependencies.html":{}}}],["borde",{"_index":2308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["border",{"_index":1223,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["bottom",{"_index":2158,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["box",{"_index":1242,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["browse",{"_index":2386,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1905,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["btn",{"_index":1221,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["build",{"_index":2345,"title":{},"body":{"index.html":{}}}],["buildesto",{"_index":2347,"title":{},"body":{"index.html":{}}}],["buscarfields",{"_index":1306,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["buscarform",{"_index":1307,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["buscarmodel",{"_index":1308,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["buscarrecetapornombre",{"_index":2060,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["buscarrecetapornombre(nombre",{"_index":2066,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["buscartodasrecetas",{"_index":2061,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["buscartodasrecetas(extrahttprequestparams",{"_index":2068,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["byte",{"_index":2052,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["básica",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{}}}],["básicos",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{}}}],["c",{"_index":1335,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{}}}],["c5c5e5",{"_index":1654,"title":{},"body":{"components/MenuComponent.html":{}}}],["cabecera",{"_index":472,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ModalComponent.html":{}}}],["cabeceras",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["cada",{"_index":904,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"index.html":{}}}],["calcula",{"_index":2307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["calling",{"_index":377,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["cambios",{"_index":873,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HomeComponent.html":{},"components/MenuTablaComponent.html":{}}}],["campo",{"_index":922,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["campos",{"_index":918,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["canactivate",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["cancela",{"_index":1846,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cancelartooltip",{"_index":1821,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cancelartooltip(tooltip",{"_index":1844,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["canconsumeform",{"_index":299,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["canconsumeform(consumes",{"_index":336,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["canvas.height",{"_index":1678,"title":{},"body":{"components/MenuComponent.html":{}}}],["canvas.todataurl('image/png",{"_index":1668,"title":{},"body":{"components/MenuComponent.html":{}}}],["canvas.width",{"_index":1679,"title":{},"body":{"components/MenuComponent.html":{}}}],["captura",{"_index":1541,"title":{},"body":{"components/MenuComponent.html":{}}}],["capturadas",{"_index":1527,"title":{},"body":{"components/MenuComponent.html":{}}}],["card",{"_index":1236,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["card:hover",{"_index":1244,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["care",{"_index":673,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["carga",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"modules/UsuarioModule.html":{}}}],["cargado",{"_index":1860,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cargados",{"_index":1582,"title":{},"body":{"components/MenuComponent.html":{}}}],["cargan",{"_index":2180,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["cargando",{"_index":807,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{}}}],["cargar",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["cargarestadisticas",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["cargarusuarioinicial",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["carne",{"_index":2415,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["carpeta",{"_index":2350,"title":{},"body":{"index.html":{}}}],["case",{"_index":783,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/ModalComponent.html":{}}}],["cat",{"_index":1571,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["catcherror",{"_index":485,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror((error",{"_index":492,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["categoria",{"_index":1269,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["categoriaenum",{"_index":824,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["categoriaingrediente.serviceinterface",{"_index":621,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["categoriaingredientedto",{"_index":606,"title":{"interfaces/CategoriaIngredienteDto.html":{}},"body":{"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"coverage.html":{}}}],["categoriaingredienteservice",{"_index":610,"title":{"injectables/CategoriaIngredienteService.html":{}},"body":{"injectables/CategoriaIngredienteService.html":{},"components/ListadoIngredientesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriaingredienteserviceinterface",{"_index":620,"title":{"interfaces/CategoriaIngredienteServiceInterface.html":{}},"body":{"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"coverage.html":{}}}],["categorias",{"_index":622,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{},"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["categoriascomida",{"_index":1710,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["categoriasenum",{"_index":1764,"title":{},"body":{"components/MenuDetalleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["categoriaservice",{"_index":1327,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["categoriasfinal",{"_index":1609,"title":{},"body":{"components/MenuComponent.html":{}}}],["categoriasfinal?.join",{"_index":1614,"title":{},"body":{"components/MenuComponent.html":{}}}],["categoriasseleccionadas",{"_index":1488,"title":{},"body":{"components/MenuComponent.html":{}}}],["categoriasunicas",{"_index":1770,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["categoría",{"_index":1368,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["categorías",{"_index":805,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/variables.html":{}}}],["cdk",{"_index":1810,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cdkdragdrop",{"_index":1872,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["celda",{"_index":1704,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["celda?.recetas",{"_index":1776,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["celdas",{"_index":1525,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["cena",{"_index":1595,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["centralizado",{"_index":2129,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["centro",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{}}}],["cereales",{"_index":2419,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cerrar",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["cerrarmodal",{"_index":2083,"title":{},"body":{"components/RegistroComponent.html":{}}}],["cfcfff",{"_index":1239,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["changes",{"_index":1867,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["changes['categorias",{"_index":1902,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["charset=utf8",{"_index":695,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["check",{"_index":691,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["checkbox",{"_index":1573,"title":{},"body":{"components/MenuComponent.html":{}}}],["checked",{"_index":1567,"title":{},"body":{"components/MenuComponent.html":{}}}],["chrome",{"_index":1419,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["cierra",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{}}}],["clara",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{}}}],["clase",{"_index":1999,"title":{},"body":{"components/ModalComponent.html":{}}}],["clases",{"_index":1388,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":27,"title":{"classes/BaseService.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{}},"body":{"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":560,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"overview.html":{}}}],["claves",{"_index":1879,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cleartimeout(this.tooltiptimeout",{"_index":1959,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["cli",{"_index":2318,"title":{},"body":{"index.html":{}}}],["close",{"_index":1978,"title":{},"body":{"components/ModalComponent.html":{}}}],["closed",{"_index":1981,"title":{},"body":{"components/ModalComponent.html":{}}}],["cluster_appmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":511,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":513,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":512,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usuariomodule",{"_index":2161,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["cluster_usuariomodule_declarations",{"_index":2162,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["cluster_usuariomodule_imports",{"_index":2163,"title":{},"body":{"modules/UsuarioModule.html":{},"overview.html":{}}}],["collapse",{"_index":1656,"title":{},"body":{"components/MenuComponent.html":{}}}],["collection_formats",{"_index":357,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":1219,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["columnas",{"_index":924,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/MenuTablaComponent.html":{}}}],["comandos",{"_index":2379,"title":{},"body":{"index.html":{}}}],["comida",{"_index":1593,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["comidas",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["command",{"_index":2383,"title":{},"body":{"index.html":{}}}],["common",{"_index":782,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["commonmodule",{"_index":543,"title":{},"body":{"modules/AuthModule.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{}}}],["como",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["comparte",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["compatibility",{"_index":767,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["compilación",{"_index":2349,"title":{},"body":{"index.html":{}}}],["compilar",{"_index":2346,"title":{},"body":{"index.html":{}}}],["completa",{"_index":1597,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["component",{"_index":89,"title":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["componente",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["componentes",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{}}}],["componentesi",{"_index":2341,"title":{},"body":{"index.html":{}}}],["components",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"index.html":{},"overview.html":{}}}],["compra",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["compras",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["comunica",{"_index":1839,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["con",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{}}}],["configura",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"components/CrearMenuComponent.html":{}}}],["configuración",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{}}}],["configurar",{"_index":1968,"title":{},"body":{"components/ModalComponent.html":{}}}],["configuration",{"_index":62,"title":{"classes/Configuration.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["configuration#isjsonmime",{"_index":741,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationfactory",{"_index":55,"title":{},"body":{"modules/ApiModule.html":{}}}],["configurationparameters",{"_index":643,"title":{"interfaces/ConfigurationParameters.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["configurationparameters.accesstoken",{"_index":731,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.apikeys",{"_index":725,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.basepath",{"_index":732,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.credentials",{"_index":739,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encodeparam",{"_index":736,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encoder",{"_index":735,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.password",{"_index":729,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.username",{"_index":727,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.withcredentials",{"_index":734,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["confirmación",{"_index":1562,"title":{},"body":{"components/MenuComponent.html":{}}}],["confirmar",{"_index":2078,"title":{},"body":{"components/RegistroComponent.html":{}}}],["congelados",{"_index":2424,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consejo",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["conservas",{"_index":2423,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["console.log('wid",{"_index":1891,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["console.log(result",{"_index":1463,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["construcción",{"_index":2076,"title":{},"body":{"components/RegistroComponent.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["constructor(basepath",{"_index":562,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(configurationparameters",{"_index":642,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["constructor(httpclient",{"_index":300,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["constructor(ingredienteservice",{"_index":1326,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["constructor(menuservice",{"_index":1511,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["constructor(private",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["constructor(protected",{"_index":364,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["constructor(route",{"_index":817,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["constructor(router",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(snackbar",{"_index":2143,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(usuariosservice",{"_index":2084,"title":{},"body":{"components/RegistroComponent.html":{}}}],["construir",{"_index":530,"title":{},"body":{"modules/AuthModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{}}}],["construirdiascomidas",{"_index":1822,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["construye",{"_index":1804,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["construyendo",{"_index":1870,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["consulta",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["consultar",{"_index":1703,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["consumes",{"_index":338,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["consumes.indexof('multipart/form",{"_index":579,"title":{},"body":{"classes/BaseService.html":{}}}],["contador",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{}}}],["contartotalrecetas",{"_index":1498,"title":{},"body":{"components/MenuComponent.html":{}}}],["contartotalrecetas(menu",{"_index":1533,"title":{},"body":{"components/MenuComponent.html":{}}}],["contenedor",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["contenido",{"_index":1542,"title":{},"body":{"components/MenuComponent.html":{},"components/ModalComponent.html":{}}}],["contenidoparapdf",{"_index":1489,"title":{},"body":{"components/MenuComponent.html":{}}}],["content",{"_index":389,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes",{"_index":711,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.find((x",{"_index":744,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.length",{"_index":742,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes[0",{"_index":746,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["conteo",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["context",{"_index":371,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["contiene",{"_index":1027,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contraseña",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["controla",{"_index":1030,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["controlar",{"_index":1441,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["cookie",{"_index":2040,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["copia",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/componentes/header/header.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["core/componentes/listado",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["core/componentes/menu",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["core/componentes/modal/modal.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{}}}],["core/componentes/wrappers/formly",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/auth.guard",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/interceptors/auth.interceptor",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/snack",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["correct",{"_index":706,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["correctamente",{"_index":1528,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["correo",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["correspondiente",{"_index":808,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/ModalComponent.html":{},"miscellaneous/functions.html":{}}}],["correspondientes",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["corriendo",{"_index":2325,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2195,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuTablaComponent.html":{}}}],["creación",{"_index":794,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["creadas",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["creado",{"_index":1398,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{}}}],["creados",{"_index":1480,"title":{},"body":{"components/MenuComponent.html":{}}}],["creando",{"_index":1855,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["crear",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["crearmenu",{"_index":1499,"title":{},"body":{"components/MenuComponent.html":{}}}],["crearmenucomponent",{"_index":132,"title":{"components/CrearMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["crearmenusemanal",{"_index":1786,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["crearmenusemanal(menusemanalcreatedto",{"_index":1793,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["credenciales",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["credentialkey",{"_index":683,"title":{},"body":{"classes/Configuration.html":{}}}],["credentials",{"_index":631,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["css",{"_index":2000,"title":{},"body":{"components/ModalComponent.html":{},"miscellaneous/functions.html":{}}}],["csv",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cualquier",{"_index":877,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["cuando",{"_index":1866,"title":{},"body":{"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["cuenta",{"_index":1032,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["current",{"_index":1451,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["custom",{"_index":839,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["customhttpparametercodec",{"_index":349,"title":{"classes/CustomHttpParameterCodec.html":{}},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/CustomHttpParameterCodec.html":{},"coverage.html":{}}}],["customization",{"_index":784,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["código",{"_index":1727,"title":{},"body":{"components/MenuDetalleComponent.html":{},"index.html":{}}}],["código.por",{"_index":2339,"title":{},"body":{"index.html":{}}}],["cómo",{"_index":2376,"title":{},"body":{"index.html":{}}}],["d.categoria",{"_index":1897,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["d.label",{"_index":1961,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["d.recetas",{"_index":1635,"title":{},"body":{"components/MenuComponent.html":{}}}],["data",{"_index":313,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{}}}],["data.data",{"_index":1052,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["dataformat",{"_index":2025,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datarefreshservice",{"_index":859,"title":{"injectables/DataRefreshService.html":{}},"body":{"injectables/DataRefreshService.html":{},"components/ListadoIngredientesComponent.html":{},"coverage.html":{}}}],["datatype",{"_index":2026,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datatypes",{"_index":2425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datatype}s",{"_index":2044,"title":{},"body":{"interfaces/Param.html":{}}}],["date",{"_index":582,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["date).toisostring",{"_index":787,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["datos",{"_index":871,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["dc.categoria",{"_index":1639,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["dc.dia",{"_index":1775,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["de",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deben",{"_index":891,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["declara",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["declaración",{"_index":2178,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["declarations",{"_index":66,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["declare",{"_index":1890,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["decodekey",{"_index":842,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodekey(k",{"_index":846,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(k",{"_index":857,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(v",{"_index":858,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue",{"_index":843,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue(v",{"_index":848,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decorators",{"_index":1019,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{}}}],["deepobject",{"_index":2034,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":327,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultencodeparam",{"_index":637,"title":{},"body":{"classes/Configuration.html":{}}}],["defaultencodeparam(param",{"_index":687,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["defaultheaders",{"_index":294,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["defaults",{"_index":318,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["defecto",{"_index":1036,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"index.html":{}}}],["define",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["defined",{"_index":51,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/Param.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/typealiases.html":{}}}],["definición",{"_index":1016,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["definition",{"_index":25,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["del",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["dentro",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/MenuDetalleComponent.html":{},"components/RegistroComponent.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":2100,"title":{},"body":{"components/RegistroComponent.html":{}}}],["deprecated",{"_index":649,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["derecha",{"_index":2135,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["desarrollo",{"_index":2322,"title":{},"body":{"index.html":{}}}],["desayuno",{"_index":1591,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["desayuno,comida,cena",{"_index":1616,"title":{},"body":{"components/MenuComponent.html":{}}}],["descarga",{"_index":1544,"title":{},"body":{"components/MenuComponent.html":{}}}],["descargar",{"_index":1695,"title":{},"body":{"components/MenuComponent.html":{}}}],["descargarpdf",{"_index":1500,"title":{},"body":{"components/MenuComponent.html":{}}}],["descripcion",{"_index":608,"title":{},"body":{"interfaces/CategoriaIngredienteDto.html":{}}}],["description",{"_index":23,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["desde",{"_index":801,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["desmarca",{"_index":1570,"title":{},"body":{"components/MenuComponent.html":{}}}],["desperdicios",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["después",{"_index":882,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["destroy",{"_index":1309,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["details",{"_index":670,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["detalladas",{"_index":2378,"title":{},"body":{"index.html":{}}}],["detalle",{"_index":1485,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["detalle'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["detalle.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["detalle.component.html",{"_index":1708,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.scss",{"_index":1709,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts",{"_index":1698,"title":{},"body":{"components/MenuDetalleComponent.html":{},"coverage.html":{}}}],["detalle.component.ts:32",{"_index":1720,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:35",{"_index":1747,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:41",{"_index":1718,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:50",{"_index":1729,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:63",{"_index":1733,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:78",{"_index":1723,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:90",{"_index":1756,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle.component.ts:93",{"_index":1751,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["detalle/menu",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/MenuDetalleComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["detecta",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HomePublicoComponent.html":{},"components/MenuTablaComponent.html":{}}}],["detectados",{"_index":1868,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["determina",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["determine",{"_index":388,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["devuelve",{"_index":1724,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/ModalComponent.html":{},"miscellaneous/functions.html":{}}}],["dia",{"_index":1621,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["dia.recetas?.length",{"_index":1622,"title":{},"body":{"components/MenuComponent.html":{}}}],["diacomida",{"_index":1761,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["diacomida.categoria",{"_index":1915,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["diacomida.categoriaenum",{"_index":1736,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["diacomida.dia",{"_index":1914,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["diacomida.diaenum",{"_index":1739,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["diacomida.recetas",{"_index":1918,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["diacomidadto",{"_index":17,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"components/MenuTablaComponent.html":{}}}],["diacomidadto.categoriaenum",{"_index":1600,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["diacomidadto.diaenum",{"_index":1763,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["diaenum",{"_index":1762,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dialogclass",{"_index":1983,"title":{},"body":{"components/ModalComponent.html":{}}}],["diascomidas",{"_index":10,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/MenuSemanalDto.html":{},"components/MenuTablaComponent.html":{}}}],["diascomidas.length",{"_index":1932,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["diascomidas.push",{"_index":1954,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["diassemana",{"_index":1711,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["diferentes",{"_index":949,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["dinámica",{"_index":2077,"title":{},"body":{"components/RegistroComponent.html":{}}}],["dinámicamente",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["dinámicos",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{}}}],["dirección",{"_index":2327,"title":{},"body":{"index.html":{}}}],["directive",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["directives",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["diseña",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["display",{"_index":1418,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["disponible",{"_index":552,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["disponibles",{"_index":1598,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["dist/.por",{"_index":2351,"title":{},"body":{"index.html":{}}}],["distintas",{"_index":2182,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["divide",{"_index":921,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["document",{"_index":655,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["document.queryselectorall('[data",{"_index":1904,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["documentation",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["dominante",{"_index":1754,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["dominantes",{"_index":2309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["domingo",{"_index":1746,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dos",{"_index":923,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["double",{"_index":2051,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["drag",{"_index":1809,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["dragdropmodule",{"_index":1303,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{}}}],["drop",{"_index":1375,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{}}}],["dto",{"_index":1948,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["duplicado",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["duplicados",{"_index":1641,"title":{},"body":{"components/MenuComponent.html":{}}}],["duration",{"_index":2153,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["día",{"_index":1700,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["días",{"_index":1748,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["días/comidas",{"_index":1731,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["e0d4ff",{"_index":1235,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["e2e",{"_index":2366,"title":{},"body":{"index.html":{}}}],["e2eten",{"_index":2367,"title":{},"body":{"index.html":{}}}],["each",{"_index":595,"title":{},"body":{"classes/BaseService.html":{}}}],["ease",{"_index":1232,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/ModalComponent.html":{}}}],["ede7ff",{"_index":1217,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["edición",{"_index":796,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{}}}],["edit",{"_index":33,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["edita",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["editar",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["editarmenu",{"_index":1501,"title":{},"body":{"components/MenuComponent.html":{}}}],["ejecuta",{"_index":2089,"title":{},"body":{"components/RegistroComponent.html":{},"index.html":{}}}],["ejecutar",{"_index":2357,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":1585,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["el",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["el.hasattribute('data",{"_index":1927,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["el.setattribute('data",{"_index":1929,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["el.setattribute('style",{"_index":1658,"title":{},"body":{"components/MenuComponent.html":{}}}],["electrónico",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["elegir",{"_index":2370,"title":{},"body":{"index.html":{}}}],["elem",{"_index":598,"title":{},"body":{"classes/BaseService.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseService.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["elemento",{"_index":1530,"title":{},"body":{"components/MenuComponent.html":{}}}],["elemento.queryselectorall('table.pastel",{"_index":1642,"title":{},"body":{"components/MenuComponent.html":{}}}],["elementos",{"_index":1580,"title":{},"body":{"components/MenuComponent.html":{}}}],["elementos.foreach(el",{"_index":1647,"title":{},"body":{"components/MenuComponent.html":{}}}],["elementref",{"_index":1042,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["elimina",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["eliminado",{"_index":1627,"title":{},"body":{"components/MenuComponent.html":{}}}],["eliminar",{"_index":1482,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["eliminaringrediente",{"_index":1257,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["eliminaringrediente(ingredientedto",{"_index":1265,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["eliminarlista",{"_index":1282,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["eliminarlista(eliminarlistadto",{"_index":1289,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["eliminarlistadto",{"_index":910,"title":{"interfaces/EliminarListaDto.html":{}},"body":{"interfaces/EliminarListaDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"coverage.html":{}}}],["eliminarmenu",{"_index":1502,"title":{},"body":{"components/MenuComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{}}}],["eliminarmenu(menuid",{"_index":1795,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["eliminarreceta",{"_index":1823,"title":{},"body":{"components/MenuTablaComponent.html":{},"interfaces/RecetaServiceInterface.html":{}}}],["eliminarreceta(dia",{"_index":1851,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["eliminarreceta(recetadto",{"_index":2070,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["email",{"_index":36,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["emergente",{"_index":1967,"title":{},"body":{"components/ModalComponent.html":{}}}],["emergentes",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{}}}],["emisor",{"_index":1838,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["emite",{"_index":903,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/ModalComponent.html":{}}}],["emitido",{"_index":1991,"title":{},"body":{"components/ModalComponent.html":{}}}],["emitir",{"_index":863,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"injectables/SnackbarService.html":{}}}],["emoji",{"_index":1753,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["emojis",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojis_por_categoria",{"_index":2218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["empezar",{"_index":1471,"title":{},"body":{"components/LoginComponent.html":{}}}],["empty",{"_index":712,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["en",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["encabezado",{"_index":944,"title":{},"body":{"components/HeaderComponent.html":{}}}],["encapsula",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SnackbarService.html":{}}}],["encargado",{"_index":792,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/RegistroComponent.html":{}}}],["encode",{"_index":2024,"title":{},"body":{"interfaces/Param.html":{}}}],["encodekey",{"_index":844,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodekey(k",{"_index":851,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeparam",{"_index":632,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encoder",{"_index":295,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encodeuricomponent(k",{"_index":855,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeuricomponent(string(value",{"_index":788,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encodeuricomponent(v",{"_index":856,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue",{"_index":845,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue(v",{"_index":853,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encoding",{"_index":665,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encontradas",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":2363,"title":{},"body":{"index.html":{}}}],["enrutamiento",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["entrada",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{}}}],["entrar",{"_index":1474,"title":{},"body":{"components/LoginComponent.html":{}}}],["entre",{"_index":948,"title":{},"body":{"components/HeaderComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["enums",{"_index":1750,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["enviar",{"_index":1850,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["envía",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["err",{"_index":2117,"title":{},"body":{"components/RegistroComponent.html":{}}}],["err.error.data",{"_index":2119,"title":{},"body":{"components/RegistroComponent.html":{}}}],["error",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error(\"key",{"_index":600,"title":{},"body":{"classes/BaseService.html":{}}}],["error('apimodule",{"_index":78,"title":{},"body":{"modules/ApiModule.html":{}}}],["error('required",{"_index":375,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["error('you",{"_index":83,"title":{},"body":{"modules/ApiModule.html":{}}}],["error(message",{"_index":2145,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["error.status",{"_index":493,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errores",{"_index":475,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["es",{"_index":501,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["esa",{"_index":1735,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["escuchen",{"_index":868,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["esenciales",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{}}}],["especias",{"_index":2422,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["específica",{"_index":1853,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["específicas",{"_index":550,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/MenuTablaComponent.html":{}}}],["específicos",{"_index":1734,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["esquemas",{"_index":2342,"title":{},"body":{"index.html":{}}}],["est",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"index.html":{}}}],["esta",{"_index":2113,"title":{},"body":{"components/RegistroComponent.html":{}}}],["establece",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["estado",{"_index":1572,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["estadoenum",{"_index":2255,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["estadísticas",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["este",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ListadoIngredientesComponent.html":{},"modules/UsuarioModule.html":{},"index.html":{}}}],["estilos",{"_index":1521,"title":{},"body":{"components/MenuComponent.html":{}}}],["estilosoriginales",{"_index":1490,"title":{},"body":{"components/MenuComponent.html":{}}}],["estructura",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/MenuTablaComponent.html":{}}}],["estructuran",{"_index":1834,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["estructuras",{"_index":2338,"title":{},"body":{"index.html":{}}}],["estrés",{"_index":1210,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["etc",{"_index":1701,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["etiqueta",{"_index":925,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["etiquetas",{"_index":1880,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["event",{"_index":1874,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["event.item.data",{"_index":1925,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["event.previouscontainer.id",{"_index":1923,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["eventemitter",{"_index":1836,"title":{},"body":{"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["evento",{"_index":481,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DataRefreshService.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["eventos",{"_index":864,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["events",{"_index":317,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["evitar",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["example",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["example@domain.com",{"_index":2096,"title":{},"body":{"components/RegistroComponent.html":{}}}],["examples",{"_index":694,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["existe",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HomePublicoComponent.html":{}}}],["existente",{"_index":1551,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["exists",{"_index":763,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["exito",{"_index":2427,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["exitosa",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{}}}],["exitoso",{"_index":1445,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["expira",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["expirado",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["explode",{"_index":2027,"title":{},"body":{"interfaces/Param.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["exportar",{"_index":1484,"title":{},"body":{"components/MenuComponent.html":{}}}],["exports",{"_index":67,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"overview.html":{}}}],["extended",{"_index":2036,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":291,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/FormlyHorizontalWrapper.html":{}}}],["extensions",{"_index":700,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["extrae",{"_index":1730,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["extrahttprequestparams",{"_index":409,"title":{},"body":{"interfaces/AuthControllerServiceInterface.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["facilitar",{"_index":556,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["fade",{"_index":1974,"title":{},"body":{"components/ModalComponent.html":{}}}],["falla",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["fallback",{"_index":764,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["fallo",{"_index":2079,"title":{},"body":{"components/RegistroComponent.html":{}}}],["false",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["favoritos",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["fdfdff",{"_index":1240,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["fefae0",{"_index":1216,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["field",{"_index":1350,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["field.props!.options",{"_index":1352,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["field.templateoptions.addonright.text",{"_index":1453,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["field.templateoptions.type",{"_index":1452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["fields",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["fieldwrapper",{"_index":937,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["firefox",{"_index":1411,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["first",{"_index":710,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["firstbasepath",{"_index":573,"title":{},"body":{"classes/BaseService.html":{}}}],["flag",{"_index":320,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["float",{"_index":2050,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["flotantes",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"injectables/SnackbarService.html":{}}}],["fondo",{"_index":1973,"title":{},"body":{"components/ModalComponent.html":{}}}],["forkjoin",{"_index":1886,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["form",{"_index":675,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{}}}],["format",{"_index":588,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuComponent.html":{}}}],["formato",{"_index":920,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["formats",{"_index":776,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["formgroup",{"_index":1017,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["formly",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["formly/bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["formly/core",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{}}}],["formlybootstrapmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["formlyfieldconfig",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["formlyhorizontalwrapper",{"_index":135,"title":{"components/FormlyHorizontalWrapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["formlymodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/ListadoIngredientesComponent.html":{},"modules/UsuarioModule.html":{}}}],["formlymodule.forroot",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{},"modules/UsuarioModule.html":{}}}],["formulario",{"_index":919,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["formularios",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{}}}],["forroot",{"_index":48,"title":{},"body":{"modules/ApiModule.html":{}}}],["forroot(configurationfactory",{"_index":49,"title":{},"body":{"modules/ApiModule.html":{}}}],["forzar",{"_index":907,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["found",{"_index":709,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["framework",{"_index":2368,"title":{},"body":{"index.html":{}}}],["frutas",{"_index":2414,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frutos_secos",{"_index":2420,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["frutossecos",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fue",{"_index":2090,"title":{},"body":{"components/RegistroComponent.html":{},"index.html":{}}}],["fuente",{"_index":2333,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{}}}],["funcionalidades",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{},"modules/UsuarioModule.html":{}}}],["funciones",{"_index":1118,"title":{},"body":{"components/HomeComponent.html":{}}}],["función",{"_index":497,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":56,"title":{},"body":{"modules/ApiModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["functions",{"_index":2302,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentales",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["fácilmente",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{}}}],["genera",{"_index":1199,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{}}}],["generación",{"_index":2334,"title":{},"body":{"index.html":{}}}],["generada",{"_index":1633,"title":{},"body":{"components/MenuComponent.html":{}}}],["generado",{"_index":1440,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["generales",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["generar",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuComponent.html":{},"index.html":{}}}],["generarlista",{"_index":1283,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["generarlista(generarlistadto",{"_index":1291,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["generarlistacompra",{"_index":1503,"title":{},"body":{"components/MenuComponent.html":{}}}],["generarlistadto",{"_index":940,"title":{"interfaces/GenerarListaDto.html":{}},"body":{"interfaces/GenerarListaDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"coverage.html":{}}}],["generate",{"_index":2340,"title":{},"body":{"index.html":{}}}],["generated",{"_index":29,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["generator",{"_index":30,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["generator.tech",{"_index":32,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["gestiona",{"_index":945,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["gestionando",{"_index":2181,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["gestionar",{"_index":793,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["gestionarmenu",{"_index":1504,"title":{},"body":{"components/MenuComponent.html":{}}}],["gestionarmenu(menu",{"_index":1549,"title":{},"body":{"components/MenuComponent.html":{}}}],["gestión",{"_index":2166,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["getcardclasses",{"_index":1319,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcardclasses(c",{"_index":1333,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["getcardclasses(categoria",{"_index":2305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcardclassesporreceta",{"_index":2216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcardclassesporreceta(receta",{"_index":2306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdialogclass",{"_index":1997,"title":{},"body":{"components/ModalComponent.html":{}}}],["getemojidominanteporreceta",{"_index":1713,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemojidominanteporreceta(r",{"_index":1962,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["getemojidominanteporreceta(receta",{"_index":1779,"title":{},"body":{"components/MenuDetalleComponent.html":{},"miscellaneous/functions.html":{}}}],["getemojiporcategoria",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemojiporcategoria(categoria",{"_index":2314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":2315,"title":{"index.html":{}},"body":{}}],["given",{"_index":692,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["global",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["globales",{"_index":865,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["gohome",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["goingredientes",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["golistas",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["gomenu",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["gorecetas",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["gradient(135deg",{"_index":1215,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["graph",{"_index":2385,"title":{},"body":{"modules.html":{}}}],["grasas_aceites",{"_index":2421,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["grasasaceites",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":931,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["guard",{"_index":412,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guarda",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{}}}],["guardado",{"_index":1942,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["guardados",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["guardar",{"_index":883,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["guardarmenu",{"_index":1824,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["guardarnuevoingrediente",{"_index":1320,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["guardas",{"_index":2168,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["guards",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ha",{"_index":476,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["hacer",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["hacia",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["haciéndolo",{"_index":1995,"title":{},"body":{"components/ModalComponent.html":{}}}],["handled",{"_index":778,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["handling",{"_index":774,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["hay",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["header",{"_index":390,"title":{},"body":{"injectables/AuthControllerService.html":{},"components/HeaderComponent.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["header'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["header.component.html",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":139,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":680,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["headers",{"_index":407,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["headers.set(headername",{"_index":760,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["helpcompilación",{"_index":2344,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":2337,"title":{},"body":{"index.html":{}}}],["hiderequiredmarker",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["hijas",{"_index":2179,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["historial",{"_index":1442,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["hogar",{"_index":2167,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["home",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["home'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["home.component.html",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":2170,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["homecomponent",{"_index":141,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["homepublicocomponent",{"_index":143,"title":{"components/HomePublicoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":822,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["hooks",{"_index":1349,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["horizontal",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{}}}],["horizontalposition",{"_index":2155,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["html",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["html2canvas",{"_index":1529,"title":{},"body":{"components/MenuComponent.html":{},"dependencies.html":{}}}],["html2canvas(el",{"_index":1663,"title":{},"body":{"components/MenuComponent.html":{}}}],["htmlel",{"_index":1648,"title":{},"body":{"components/MenuComponent.html":{}}}],["htmlel.getattribute('style",{"_index":1651,"title":{},"body":{"components/MenuComponent.html":{}}}],["htmlel.style.border",{"_index":1652,"title":{},"body":{"components/MenuComponent.html":{}}}],["htmlel.style.bordercollapse",{"_index":1655,"title":{},"body":{"components/MenuComponent.html":{}}}],["htmlelement",{"_index":1518,"title":{},"body":{"components/MenuComponent.html":{}}}],["http",{"_index":75,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["http://localhost:4200/.la",{"_index":2328,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["http_interceptors",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["httpclient",{"_index":63,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["httpclientmodule",{"_index":85,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{}}}],["httpcontenttypeselected",{"_index":391,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["httpcontext",{"_index":348,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["httperrorresponse",{"_index":483,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":347,"title":{},"body":{"injectables/AuthControllerService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["httphandler",{"_index":469,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaderaccept",{"_index":369,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["httpheaders",{"_index":341,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["httpinterceptor",{"_index":482,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpparametercodec",{"_index":343,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{}}}],["httpparams",{"_index":330,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["httpparams.append(key",{"_index":591,"title":{},"body":{"classes/BaseService.html":{}}}],["httprequest",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpresponse",{"_index":346,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["https://github.com/angular/angular/issues/18261",{"_index":841,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["https://github.com/angular/angular/issues/20575",{"_index":88,"title":{},"body":{"modules/ApiModule.html":{}}}],["https://openapi",{"_index":31,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["i.categoria",{"_index":1404,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["i.e",{"_index":781,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["icons",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":609,"title":{},"body":{"interfaces/CategoriaIngredienteDto.html":{},"components/CrearMenuComponent.html":{},"interfaces/ListaCompraDto.html":{},"components/MenuComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/RecetaDto.html":{}}}],["identifier",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":1414,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ignore",{"_index":352,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["imgdata",{"_index":1667,"title":{},"body":{"components/MenuComponent.html":{}}}],["imgheight",{"_index":1677,"title":{},"body":{"components/MenuComponent.html":{}}}],["imgwidth",{"_index":1676,"title":{},"body":{"components/MenuComponent.html":{}}}],["implementation",{"_index":762,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["implements",{"_index":363,"title":{},"body":{"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["import('./auth/auth.module').then(m",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./usuario/usuario.module').then(m",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importa",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["importación",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":65,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["incluye",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"components/ModalComponent.html":{},"index.html":{}}}],["incluyendo",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["incorrectly",{"_index":779,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["incorrectos",{"_index":1467,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":2106,"title":{},"body":{"components/RegistroComponent.html":{}}}],["inesperado",{"_index":2142,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["inferior",{"_index":2134,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["información",{"_index":1039,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["ing",{"_index":1340,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ing.nombre",{"_index":1392,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ing.recetas",{"_index":1394,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingrediente",{"_index":1367,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientedto",{"_index":1261,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{}}}],["ingredientedto.categoriaenum",{"_index":1401,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredienteids",{"_index":2022,"title":{},"body":{"interfaces/ModificarItemsDto.html":{}}}],["ingredientes",{"_index":623,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"interfaces/RecetaDto.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["ingredientes'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["ingredientes.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["ingredientes.component.html",{"_index":1305,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.scss",{"_index":1304,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts",{"_index":1301,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"coverage.html":{}}}],["ingredientes.component.ts:108",{"_index":1342,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:114",{"_index":1341,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:119",{"_index":1337,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:129",{"_index":1334,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:134",{"_index":1339,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:140",{"_index":1336,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:154",{"_index":1331,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:160",{"_index":1347,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:161",{"_index":1344,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:31",{"_index":1360,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:32",{"_index":1362,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:33",{"_index":1359,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:35",{"_index":1366,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:36",{"_index":1361,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:37",{"_index":1373,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:39",{"_index":1364,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:40",{"_index":1371,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:41",{"_index":1372,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:42",{"_index":1370,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:76",{"_index":1357,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:77",{"_index":1358,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:78",{"_index":1356,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes.component.ts:99",{"_index":1329,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientes/ingredientes.component",{"_index":2174,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["ingredientes/listado",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/ListadoIngredientesComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["ingredientescomponent",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["ingredienteseleccionado",{"_index":1310,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredienteservice",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingredienteserviceinterface",{"_index":1253,"title":{"interfaces/IngredienteServiceInterface.html":{}},"body":{"interfaces/IngredienteServiceInterface.html":{},"coverage.html":{}}}],["ingredientesimpledto",{"_index":1278,"title":{},"body":{"interfaces/ListaCompraDto.html":{},"interfaces/RecetaDto.html":{}}}],["ingredientesoriginales",{"_index":1311,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ingredientesservice",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["inherited",{"_index":332,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["inicia",{"_index":2126,"title":{},"body":{"components/RegistroComponent.html":{}}}],["iniciales",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["inicializa",{"_index":803,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["inicialización",{"_index":823,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["inicializardesdemenu",{"_index":1825,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["inicializardesdemenu(menu",{"_index":1858,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["inicializarmenuvacio",{"_index":1826,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["iniciar",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["inicio",{"_index":1190,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["initialized",{"_index":1928,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["inject",{"_index":345,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["inject(base_path",{"_index":365,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["injectable",{"_index":287,"title":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{}},"body":{"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["injectables",{"_index":289,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{},"overview.html":{}}}],["injectiontoken('basepath",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1522,"title":{},"body":{"components/MenuComponent.html":{}}}],["input",{"_index":928,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["inputs",{"_index":1717,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["instanceof",{"_index":586,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["instead",{"_index":647,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["int32",{"_index":2048,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["int64",{"_index":2049,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["integer",{"_index":2043,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["inteligentes",{"_index":1200,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["interacción",{"_index":1813,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["interactuar",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["intercept",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercepta",{"_index":471,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":448,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptores",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interesado",{"_index":879,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{},"overview.html":{}}}],["interna",{"_index":1883,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["internet",{"_index":698,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["introduce",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["introducir",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["isjsonmime",{"_index":638,"title":{},"body":{"classes/Configuration.html":{}}}],["isjsonmime(mime",{"_index":689,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["istokenexpired",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["istokenexpired(token",{"_index":494,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["it's",{"_index":594,"title":{},"body":{"classes/BaseService.html":{}}}],["item.descripcion",{"_index":1354,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["item.id",{"_index":1369,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["item.nombre",{"_index":1355,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["items",{"_index":1276,"title":{},"body":{"interfaces/ListaCompraDto.html":{}}}],["json",{"_index":396,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["json.parse(atob(token.split('.')[1",{"_index":505,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["json.stringify(value",{"_index":592,"title":{},"body":{"classes/BaseService.html":{}}}],["jsonmime",{"_index":750,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jsonmime.test(mime",{"_index":755,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jspdf",{"_index":1599,"title":{},"body":{"components/MenuComponent.html":{},"dependencies.html":{}}}],["jueves",{"_index":1743,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":452,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["k",{"_index":604,"title":{},"body":{"classes/BaseService.html":{},"classes/CustomHttpParameterCodec.html":{}}}],["karma",{"_index":2361,"title":{},"body":{"index.html":{}}}],["key",{"_index":331,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["keys",{"_index":585,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["key}.${k",{"_index":603,"title":{},"body":{"classes/BaseService.html":{}}}],["la",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["label",{"_index":926,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lacteos",{"_index":2418,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["landscape",{"_index":1670,"title":{},"body":{"components/MenuComponent.html":{}}}],["lanzar",{"_index":2360,"title":{},"body":{"index.html":{}}}],["las",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["lazy",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["le",{"_index":2114,"title":{},"body":{"components/RegistroComponent.html":{}}}],["legend",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["legible",{"_index":1728,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["legumbres",{"_index":2417,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lg",{"_index":1985,"title":{},"body":{"components/ModalComponent.html":{}}}],["librería",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{}}}],["light",{"_index":1390,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["limpia",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1214,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["link",{"_index":723,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{}}}],["lista",{"_index":804,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"index.html":{}}}],["listacompradto",{"_index":1274,"title":{"interfaces/ListaCompraDto.html":{}},"body":{"interfaces/ListaCompraDto.html":{},"coverage.html":{}}}],["listacompraid",{"_index":912,"title":{},"body":{"interfaces/EliminarListaDto.html":{},"interfaces/ModificarItemsDto.html":{}}}],["listacompraresourceservice",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listacompraresourceserviceinterface",{"_index":1279,"title":{"interfaces/ListaCompraResourceServiceInterface.html":{}},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{},"coverage.html":{}}}],["listado",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["listadoingredientescomponent",{"_index":148,"title":{"components/ListadoIngredientesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["listadorecetascomponent",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["listar",{"_index":1479,"title":{},"body":{"components/MenuComponent.html":{}}}],["listarcategorias",{"_index":612,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{}}}],["listarcategorias(extrahttprequestparams",{"_index":626,"title":{},"body":{"interfaces/CategoriaIngredienteServiceInterface.html":{}}}],["listarcategorias(observe",{"_index":614,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["listas",{"_index":951,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["listas'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["listas/listas.component",{"_index":2175,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["listascomponent",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["listaservice",{"_index":1512,"title":{},"body":{"components/MenuComponent.html":{}}}],["listasservice",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":309,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{}}}],["llama",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["llamar",{"_index":894,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["lo",{"_index":1543,"title":{},"body":{"components/MenuComponent.html":{}}}],["load",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadchildren",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":80,"title":{},"body":{"modules/ApiModule.html":{}}}],["loadingredientes",{"_index":1321,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["loadmenus",{"_index":1505,"title":{},"body":{"components/MenuComponent.html":{}}}],["local",{"_index":2323,"title":{},"body":{"index.html":{}}}],["locales",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["localstorage",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.clear",{"_index":1060,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["localstorage.getitem('token",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HomePublicoComponent.html":{}}}],["localstorage.removeitem('token",{"_index":495,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["localstorage.setitem('token",{"_index":1464,"title":{},"body":{"components/LoginComponent.html":{}}}],["localvarheaders",{"_index":378,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvarheaders.set('accept",{"_index":383,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvarheaders.set('content",{"_index":393,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["localvarhttpcontext",{"_index":384,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvarhttpheaderacceptselected",{"_index":380,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvarhttpheaderacceptselected.startswith('text",{"_index":398,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvarpath",{"_index":400,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["localvartransfercache",{"_index":386,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["location",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["locations",{"_index":2038,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["login",{"_index":296,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["login'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["login(loginrequest",{"_index":303,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{}}}],["login.component.html",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":154,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginrequest",{"_index":304,"title":{"interfaces/LoginRequest.html":{}},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interfaces/LoginRequest.html":{},"coverage.html":{}}}],["loginresponse",{"_index":1476,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["logout",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["logueado",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lookupcredential",{"_index":639,"title":{},"body":{"classes/Configuration.html":{}}}],["lookupcredential(key",{"_index":701,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["los",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"index.html":{}}}],["luego",{"_index":1946,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["lunes",{"_index":1740,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lógica",{"_index":1387,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["m",{"_index":1332,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["m.authmodule",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.categoria",{"_index":1402,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["m.usuariomodule",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":718,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mail",{"_index":699,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["maneja",{"_index":474,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MenuTablaComponent.html":{}}}],["manejador",{"_index":480,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["manejar",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mantener",{"_index":554,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["mantenimiento",{"_index":557,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["manuales",{"_index":1523,"title":{},"body":{"components/MenuComponent.html":{}}}],["manually",{"_index":34,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["map",{"_index":656,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["map(resp",{"_index":1937,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["map[categoria",{"_index":1777,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["mapa",{"_index":1579,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["marca",{"_index":1569,"title":{},"body":{"components/MenuComponent.html":{}}}],["martes",{"_index":1741,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/SnackbarService.html":{}}}],["math.floor(date.now",{"_index":507,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["matrix",{"_index":2031,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["matsnackbar",{"_index":1328,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["mayoritaria",{"_index":2311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mediante",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{}}}],["mejor",{"_index":2354,"title":{},"body":{"index.html":{}}}],["men",{"_index":797,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["mensaje",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["mensajes",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["menu",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["menu'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["menu.component",{"_index":2172,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["menu.component.html",{"_index":815,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":814,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{}}}],["menu.component.ts",{"_index":791,"title":{},"body":{"components/CrearMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:27",{"_index":825,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":819,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":821,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["menu.diascomidas",{"_index":1619,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["menu.diascomidas.reduce((total",{"_index":1620,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.diascomidas?.flatmap(d",{"_index":1634,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.diascomidas?.map(dc",{"_index":1638,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.id",{"_index":1685,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/crear",{"_index":790,"title":{},"body":{"components/CrearMenuComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{}}}],["menu/menu.component",{"_index":2173,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["menu?categorias=desayuno,comida,cena",{"_index":810,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["menu?menuid=123",{"_index":811,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["menucomponent",{"_index":156,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["menudata",{"_index":1819,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["menudatachange",{"_index":1831,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["menudetallecomponent",{"_index":157,"title":{"components/MenuDetalleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["menuid",{"_index":11,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"components/CrearMenuComponent.html":{},"interfaces/GenerarListaDto.html":{},"components/MenuComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{}}}],["menus",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["menuseleccionado",{"_index":1491,"title":{},"body":{"components/MenuComponent.html":{}}}],["menusemanalcreatedto",{"_index":1760,"title":{},"body":{"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{}}}],["menusemanalcreatedto.categoriasenum",{"_index":1765,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["menusemanaldto",{"_index":1534,"title":{"interfaces/MenuSemanalDto.html":{}},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{}}}],["menusemanalservice",{"_index":828,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menusemanalserviceinterface",{"_index":1782,"title":{"interfaces/MenuSemanalServiceInterface.html":{}},"body":{"interfaces/MenuSemanalServiceInterface.html":{},"coverage.html":{}}}],["menuservice",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["menutablacomponent",{"_index":160,"title":{"components/MenuTablaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["menús",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["merienda",{"_index":1594,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":2148,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["metadata",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["method",{"_index":722,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["methods",{"_index":46,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["miercoles",{"_index":1742,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":693,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mime.tolowercase",{"_index":756,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["minus",{"_index":659,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mis",{"_index":1684,"title":{},"body":{"components/MenuComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["miscellaneous",{"_index":2301,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":765,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["miércoles",{"_index":1876,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["modal",{"_index":1023,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["modal'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["modal.component.html",{"_index":1975,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":1976,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":1044,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["modalcomponent",{"_index":162,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"overview.html":{}}}],["modalconfirmar",{"_index":1492,"title":{},"body":{"components/MenuComponent.html":{}}}],["modalmenudetalle",{"_index":1493,"title":{},"body":{"components/MenuComponent.html":{}}}],["modalnuevoingrediente",{"_index":1312,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["modalnuevomenu",{"_index":1494,"title":{},"body":{"components/MenuComponent.html":{}}}],["modalreceta",{"_index":1313,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["modalrecetas",{"_index":1322,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["modalrecetas(ing",{"_index":1338,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["modalusuario",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["model",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["model/apirespuestaloginresponse",{"_index":354,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["model/categoriaingredientedto",{"_index":619,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["model/loginrequest",{"_index":355,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["model/models",{"_index":411,"title":{},"body":{"interfaces/AuthControllerServiceInterface.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["modelo",{"_index":1026,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["modificaritemsdto",{"_index":1287,"title":{"interfaces/ModificarItemsDto.html":{}},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/ModificarItemsDto.html":{},"coverage.html":{}}}],["modifiques",{"_index":2330,"title":{},"body":{"index.html":{}}}],["modo",{"_index":806,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["modular",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{}}}],["module",{"_index":42,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":44,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":58,"title":{},"body":{"modules/ApiModule.html":{}}}],["more",{"_index":669,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mostrado",{"_index":1989,"title":{},"body":{"components/ModalComponent.html":{}}}],["mostrar",{"_index":532,"title":{},"body":{"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["mostrarcategoria",{"_index":1715,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["mostrarcategoria(categoria",{"_index":1722,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["mostrarcategoria(categoria).touppercase",{"_index":1778,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["mostrarcuenta",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["ms",{"_index":1416,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["msg",{"_index":1345,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["muestra",{"_index":917,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["multi",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["multipurpose",{"_index":697,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mundo",{"_index":1473,"title":{},"body":{"components/LoginComponent.html":{}}}],["más",{"_index":2375,"title":{},"body":{"index.html":{}}}],["módulo",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["módulos",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["n",{"_index":86,"title":{},"body":{"modules/ApiModule.html":{}}}],["nada",{"_index":2020,"title":{},"body":{"components/ModalComponent.html":{}}}],["name",{"_index":54,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/Param.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":652,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["navega",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["navegación",{"_index":947,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["navegador",{"_index":2326,"title":{},"body":{"index.html":{}}}],["navegar",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["necesarios",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["necesidades",{"_index":2372,"title":{},"body":{"index.html":{}}}],["need",{"_index":84,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["nete",{"_index":2122,"title":{},"body":{"components/RegistroComponent.html":{}}}],["new",{"_index":77,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":468,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["next.handle(authreq).pipe",{"_index":491,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1888,"title":{},"body":{"components/MenuTablaComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1827,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["ngbtooltipmodule",{"_index":1816,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["ngclass",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/ModalComponent.html":{}}}],["ngforof",{"_index":1045,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["ngif",{"_index":938,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/ModalComponent.html":{}}}],["ngmodule",{"_index":59,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["ngonchanges",{"_index":1828,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["ngonchanges(changes",{"_index":1863,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["ngondestroy",{"_index":1323,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ngoninit",{"_index":816,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["ngx",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"dependencies.html":{}}}],["nicas",{"_index":1556,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["nicos",{"_index":1560,"title":{},"body":{"components/MenuComponent.html":{}}}],["nombre",{"_index":37,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nombres",{"_index":1559,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{}}}],["none",{"_index":1413,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["normal",{"_index":2016,"title":{},"body":{"components/ModalComponent.html":{}}}],["note",{"_index":26,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/ModificarItemsDto.html":{}}}],["notifica",{"_index":889,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["notificaciones",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"injectables/SnackbarService.html":{}}}],["notificar",{"_index":876,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["notifyrefresh",{"_index":887,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["now",{"_index":506,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nueva",{"_index":1014,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["nuevo",{"_index":1515,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["nuevoingredientefields",{"_index":1314,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["nuevoingredienteform",{"_index":1315,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["nuevoingredientemodel",{"_index":1316,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["nuevos",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["null",{"_index":373,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/CategoriaIngredienteDto.html":{},"components/CrearMenuComponent.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"components/HomeComponent.html":{},"interfaces/ListaCompraDto.html":{},"components/MenuComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"miscellaneous/typealiases.html":{}}}],["numingredientes",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["numlistas",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["nummenus",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["numrecetas",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["número",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["o",{"_index":795,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["object",{"_index":581,"title":{},"body":{"classes/BaseService.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.menudata",{"_index":1951,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["object.keys(this.menudata[dia",{"_index":1952,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["object.keys(value).foreach(k",{"_index":601,"title":{},"body":{"classes/BaseService.html":{}}}],["objetivo",{"_index":1536,"title":{},"body":{"components/MenuComponent.html":{}}}],["objeto",{"_index":2312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":314,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"injectables/DataRefreshService.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["observable).subscribe",{"_index":1947,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["observe",{"_index":305,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["obtener",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"index.html":{}}}],["obtenercategoriasmenu",{"_index":1506,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenercategoriasmenu(menu",{"_index":1554,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenercategoriasmenu(menu).join",{"_index":1687,"title":{},"body":{"components/MenuComponent.html":{}}}],["obteneringredienteporcategoria",{"_index":1258,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["obteneringredienteporcategoria(categoria",{"_index":1267,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["obtenermenu",{"_index":1787,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["obtenermenu(id",{"_index":1797,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["obtenermislistas",{"_index":1284,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["obtenermislistas(extrahttprequestparams",{"_index":1293,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["obtenermismenus",{"_index":1788,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["obtenermismenus(extrahttprequestparams",{"_index":1799,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["obtenernombresrecetas",{"_index":1507,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenernombresrecetas(menu",{"_index":1557,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenernombresrecetas(menu).length",{"_index":1690,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenernombresrecetas(menu).slice(0",{"_index":1688,"title":{},"body":{"components/MenuComponent.html":{}}}],["obtenerrecetas",{"_index":1716,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["obtenerrecetas(dia",{"_index":1732,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["obtenertodosingredientes",{"_index":1259,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["obtenertodosingredientes(extrahttprequestparams",{"_index":1270,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["obtenerusuarioporemail",{"_index":2187,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["obtenerusuarioporemail(extrahttprequestparams",{"_index":2192,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["obtiene",{"_index":799,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["oculta",{"_index":1993,"title":{},"body":{"components/ModalComponent.html":{}}}],["oficial:angular",{"_index":2381,"title":{},"body":{"index.html":{}}}],["older",{"_index":768,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["olvidarlos",{"_index":1206,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["onchanges",{"_index":1815,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["onclick",{"_index":1449,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["ondestroy",{"_index":1302,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["ondrop",{"_index":1829,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["ondrop(event",{"_index":1871,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["oninit",{"_index":812,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["opacity",{"_index":2007,"title":{},"body":{"components/ModalComponent.html":{}}}],["opcional",{"_index":933,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/ModalComponent.html":{}}}],["opciones",{"_index":1034,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["open",{"_index":1979,"title":{},"body":{"components/ModalComponent.html":{}}}],["openapi",{"_index":24,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"modules/AppModule.html":{},"interfaces/CategoriaIngredienteDto.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{}}}],["openmodalconfirmar",{"_index":1508,"title":{},"body":{"components/MenuComponent.html":{}}}],["openmodalcuenta",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["opera",{"_index":1421,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["operaciones",{"_index":2086,"title":{},"body":{"components/RegistroComponent.html":{}}}],["optimiza",{"_index":2353,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":308,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["options?.context",{"_index":385,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["options?.httpheaderaccept",{"_index":381,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["options?.transfercache",{"_index":387,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["organiza",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/RegistroComponent.html":{}}}],["organización",{"_index":539,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/HomeComponent.html":{}}}],["organizar",{"_index":1472,"title":{},"body":{"components/LoginComponent.html":{}}}],["orientation",{"_index":1669,"title":{},"body":{"components/MenuComponent.html":{}}}],["original",{"_index":479,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["originales",{"_index":1565,"title":{},"body":{"components/MenuComponent.html":{}}}],["otherwise",{"_index":593,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["otra",{"_index":927,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["otros",{"_index":867,"title":{},"body":{"injectables/DataRefreshService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ModalComponent.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["output",{"_index":1885,"title":{},"body":{"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["outputs",{"_index":1830,"title":{},"body":{"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["overflow",{"_index":1410,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["override",{"_index":721,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["overview",{"_index":2382,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":2280,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1226,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["padre",{"_index":1808,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["pagewidth",{"_index":1674,"title":{},"body":{"components/MenuComponent.html":{}}}],["panelclass",{"_index":2159,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["panelclass:['snackbar",{"_index":1406,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["pantalla",{"_index":2136,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["para",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["param",{"_index":368,"title":{"interfaces/Param.html":{}},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/Param.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["param.dataformat",{"_index":785,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["param.value",{"_index":786,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["parameter",{"_index":376,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":53,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/functions.html":{}}}],["paramkey",{"_index":602,"title":{},"body":{"classes/BaseService.html":{}}}],["paramlocation",{"_index":2028,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paramname",{"_index":685,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["params.get('categorias",{"_index":833,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["params.get('menuid",{"_index":836,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["paramstyle",{"_index":2029,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parentmodule",{"_index":74,"title":{},"body":{"modules/ApiModule.html":{}}}],["parte",{"_index":2133,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["partir",{"_index":1209,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["parámetro",{"_index":1539,"title":{},"body":{"components/MenuComponent.html":{}}}],["parámetros",{"_index":800,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["pasa",{"_index":2019,"title":{},"body":{"components/ModalComponent.html":{}}}],["pasamos",{"_index":1615,"title":{},"body":{"components/MenuComponent.html":{}}}],["pasando",{"_index":1538,"title":{},"body":{"components/MenuComponent.html":{}}}],["password",{"_index":633,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/typealiases.html":{}}}],["passwordantiguo",{"_index":38,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["passwordnuevo",{"_index":39,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["pastel",{"_index":1211,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["pastel:hover",{"_index":1233,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["patch+json",{"_index":757,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["path",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"modules/UsuarioRoutingModule.html":{},"miscellaneous/typealiases.html":{}}}],["payload",{"_index":504,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MenuTablaComponent.html":{}}}],["payload.exp",{"_index":509,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["payload.menuid",{"_index":1938,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["pdf",{"_index":1487,"title":{},"body":{"components/MenuComponent.html":{}}}],["pdf.addimage(imgdata",{"_index":1680,"title":{},"body":{"components/MenuComponent.html":{}}}],["pdf.internal.pagesize.getwidth",{"_index":1675,"title":{},"body":{"components/MenuComponent.html":{}}}],["pdf.save('menu.pdf",{"_index":1682,"title":{},"body":{"components/MenuComponent.html":{}}}],["pequeño",{"_index":1843,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["perfil",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["permite",{"_index":862,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["permitir",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["personales",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["personalizables",{"_index":2131,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["personalizado",{"_index":916,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{}}}],["personalizados",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["pescado",{"_index":2416,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["peticiones",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["petición",{"_index":478,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["pipe",{"_index":1936,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["pipedelimited",{"_index":2033,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["pipes",{"_index":2343,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["planifica",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{}}}],["platformbrowserdynamic().bootstrapmodule(appmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["plus",{"_index":2045,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["png",{"_index":1681,"title":{},"body":{"components/MenuComponent.html":{}}}],["podría",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["por",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"index.html":{}}}],["posterior",{"_index":2107,"title":{},"body":{"components/RegistroComponent.html":{}}}],["potentes",{"_index":2336,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":589,"title":{},"body":{"classes/BaseService.html":{}}}],["prefix",{"_index":681,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["prefixes",{"_index":661,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["prepara",{"_index":2092,"title":{},"body":{"components/RegistroComponent.html":{}}}],["presentes",{"_index":1737,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["primero",{"_index":1945,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["principal",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["principales",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["privada",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["privadas",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{}}}],["privado",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataRefreshService.html":{},"components/HomePublicoComponent.html":{}}}],["private",{"_index":636,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["pro",{"_index":2123,"title":{},"body":{"components/RegistroComponent.html":{}}}],["probably",{"_index":777,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["problema",{"_index":2118,"title":{},"body":{"components/RegistroComponent.html":{}}}],["proceso",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{}}}],["producción",{"_index":2352,"title":{},"body":{"index.html":{}}}],["productos",{"_index":1204,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["progress",{"_index":323,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"interfaces/UsuariosServiceInterface.html":{},"properties.html":{}}}],["proporcionado",{"_index":2147,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["proporcionando",{"_index":2074,"title":{},"body":{"components/RegistroComponent.html":{}}}],["props",{"_index":935,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["props.label",{"_index":939,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["protected",{"_index":293,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["protege",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protegido",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UsuarioModule.html":{}}}],["provide",{"_index":71,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["provided",{"_index":590,"title":{},"body":{"classes/BaseService.html":{}}}],["providedin",{"_index":362,"title":{},"body":{"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"injectables/CategoriaIngredienteService.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["proyecto",{"_index":558,"title":{},"body":{"modules/AuthRoutingModule.html":{},"index.html":{}}}],["pruebas",{"_index":2365,"title":{},"body":{"index.html":{}}}],["public",{"_index":69,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuDetalleComponent.html":{}}}],["publico",{"_index":1193,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["publico'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["publico.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["publico.component.html",{"_index":1195,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["publico.component.scss",{"_index":1194,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["publico.component.ts",{"_index":1189,"title":{},"body":{"components/HomePublicoComponent.html":{},"coverage.html":{}}}],["publico.component.ts:20",{"_index":1196,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["publico.component.ts:32",{"_index":1197,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["publico/home",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePublicoComponent.html":{},"coverage.html":{}}}],["pudo",{"_index":1900,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["pueda",{"_index":2115,"title":{},"body":{"components/RegistroComponent.html":{}}}],["puede",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pueden",{"_index":898,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["puedes",{"_index":2369,"title":{},"body":{"index.html":{}}}],["punto",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["px",{"_index":1672,"title":{},"body":{"components/MenuComponent.html":{}}}],["página",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["páginas",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{},"modules/UsuarioRoutingModule.html":{}}}],["pública",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["público",{"_index":897,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["qu",{"_index":1693,"title":{},"body":{"components/MenuComponent.html":{}}}],["que",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["queremos",{"_index":1768,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["query",{"_index":674,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/MenuComponent.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["query.set(paramname",{"_index":761,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["queryparams",{"_index":1613,"title":{},"body":{"components/MenuComponent.html":{}}}],["quiere",{"_index":906,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["quieres",{"_index":1694,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["quitaritems",{"_index":1285,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["quitaritems(modificaritemsdto",{"_index":1295,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["r.id",{"_index":1920,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["r.nombre",{"_index":1408,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["radius",{"_index":1224,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["raw",{"_index":832,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["raw.split",{"_index":835,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["raíz",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["rea",{"_index":1031,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["reaccionar",{"_index":900,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["reactiveformsmodule",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsuarioModule.html":{}}}],["reactivo",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["reactivos",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{}}}],["readme.md",{"_index":668,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["readonly",{"_index":1712,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["real",{"_index":2095,"title":{},"body":{"components/RegistroComponent.html":{}}}],["realizada",{"_index":2140,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["realizar",{"_index":2364,"title":{},"body":{"index.html":{}}}],["recarga",{"_index":866,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HomeComponent.html":{}}}],["recargar",{"_index":2329,"title":{},"body":{"index.html":{}}}],["recargas",{"_index":901,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["receta",{"_index":1755,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["receta.id",{"_index":1921,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["receta.nombre",{"_index":1780,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["recetadto",{"_index":829,"title":{"interfaces/RecetaDto.html":{}},"body":{"components/CrearMenuComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuTablaComponent.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["recetas",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["recetas'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["recetas.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["recetas.component.ts",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["recetas.map(r",{"_index":1955,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["recetas/listado",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{},"coverage.html":{}}}],["recetas/recetas.component",{"_index":2176,"title":{},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["recetascomponent",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["recetaservice",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recetaserviceinterface",{"_index":2056,"title":{"interfaces/RecetaServiceInterface.html":{}},"body":{"interfaces/RecetaServiceInterface.html":{},"coverage.html":{}}}],["recetaslist",{"_index":1924,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["recetasseleccionadas",{"_index":1317,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["recetasservice",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["recibe",{"_index":802,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["recibidas",{"_index":826,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["recibido",{"_index":1702,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["recibimos",{"_index":1767,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["record",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recursively",{"_index":583,"title":{},"body":{"classes/BaseService.html":{}}}],["recursos",{"_index":2373,"title":{},"body":{"index.html":{}}}],["redireccionamiento",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redireccionar",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirección",{"_index":2093,"title":{},"body":{"components/RegistroComponent.html":{}}}],["redirectto",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["redirigir",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HomePublicoComponent.html":{},"components/RegistroComponent.html":{}}}],["reference",{"_index":2384,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1022,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["referencias",{"_index":2377,"title":{},"body":{"index.html":{}}}],["refrescar",{"_index":892,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["refresh",{"_index":885,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/ListadoIngredientesComponent.html":{}}}],["refreshsubject",{"_index":886,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["regexp",{"_index":751,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["regexp('^(application\\/json",{"_index":752,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["registra",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["registrado",{"_index":2111,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registrar",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{},"components/RegistroComponent.html":{}}}],["registrarse",{"_index":2124,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["registro.component.html",{"_index":2080,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro.component.scss",{"_index":2081,"title":{},"body":{"components/RegistroComponent.html":{}}}],["registro/registro.component",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["registrocomponent",{"_index":165,"title":{"components/RegistroComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registroexitoso",{"_index":2082,"title":{},"body":{"components/RegistroComponent.html":{}}}],["regístrate",{"_index":1202,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["relacionados",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsuarioModule.html":{}}}],["rendimiento",{"_index":2355,"title":{},"body":{"index.html":{}}}],["report",{"_index":321,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["reportprogress",{"_index":306,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["representa",{"_index":943,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomePublicoComponent.html":{}}}],["representados",{"_index":1749,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["representativo",{"_index":2313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["representativos",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":477,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":488,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requerido",{"_index":934,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["request",{"_index":322,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuTablaComponent.html":{}}}],["request$.subscribe",{"_index":1940,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["required",{"_index":936,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["res",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["res.data",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["res.data!.length",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.map(item",{"_index":1353,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["reset",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}],["resp",{"_index":1894,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["resp.data",{"_index":1895,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["resp.data!.id",{"_index":1939,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["response",{"_index":316,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["response.data",{"_index":1062,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["responsetype",{"_index":404,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["responsetype_",{"_index":394,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["restaura",{"_index":1564,"title":{},"body":{"components/MenuComponent.html":{}}}],["restaurarestilosoriginales",{"_index":1509,"title":{},"body":{"components/MenuComponent.html":{}}}],["result",{"_index":1462,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.data!.token",{"_index":1465,"title":{},"body":{"components/LoginComponent.html":{}}}],["resultado",{"_index":2101,"title":{},"body":{"components/RegistroComponent.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retardada",{"_index":1759,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["retraso",{"_index":1707,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["return",{"_index":70,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["returning",{"_index":319,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["returns",{"_index":57,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"miscellaneous/functions.html":{}}}],["reutilizable",{"_index":1964,"title":{},"body":{"components/ModalComponent.html":{}}}],["rgba(160",{"_index":1249,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["rica",{"_index":1814,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["right",{"_index":2156,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["rolenum",{"_index":2275,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"injectables/CategoriaIngredienteService.html":{},"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{}}}],["root'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["route",{"_index":820,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["router",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["router:router",{"_index":1048,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["routermodule",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":559,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":255,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{}}}],["routing.module.ts",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["ruta",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"modules/UsuarioModule.html":{}}}],["rutas",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["rxjs",{"_index":350,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"injectables/DataRefreshService.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":486,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sabado",{"_index":1745,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["safari",{"_index":1420,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["salida",{"_index":1972,"title":{},"body":{"components/ModalComponent.html":{}}}],["salientes",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["salir",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["scaffolding",{"_index":2335,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1664,"title":{},"body":{"components/MenuComponent.html":{},"components/ModalComponent.html":{}}}],["scale(0.8",{"_index":2011,"title":{},"body":{"components/ModalComponent.html":{}}}],["scale(1",{"_index":2012,"title":{},"body":{"components/ModalComponent.html":{}}}],["scale(1.05",{"_index":1234,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["scrollbar",{"_index":1409,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["se",{"_index":553,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["sean",{"_index":1526,"title":{},"body":{"components/MenuComponent.html":{}}}],["secciones",{"_index":950,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"modules/UsuarioRoutingModule.html":{}}}],["sección",{"_index":549,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/HomeComponent.html":{}}}],["section",{"_index":654,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["securityschemes",{"_index":653,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["see",{"_index":87,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["seguro",{"_index":1696,"title":{},"body":{"components/MenuComponent.html":{}}}],["según",{"_index":2310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selecciona",{"_index":1692,"title":{},"body":{"components/MenuComponent.html":{}}}],["seleccionadas",{"_index":1516,"title":{},"body":{"components/MenuComponent.html":{}}}],["seleccionado",{"_index":1547,"title":{},"body":{"components/MenuComponent.html":{}}}],["seleccionando",{"_index":1481,"title":{},"body":{"components/MenuComponent.html":{}}}],["select",{"_index":705,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/ListadoIngredientesComponent.html":{}}}],["selected",{"_index":717,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectheaderaccept",{"_index":640,"title":{},"body":{"classes/Configuration.html":{}}}],["selectheaderaccept(accepts",{"_index":703,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectheadercontenttype",{"_index":641,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectheadercontenttype(contenttypes",{"_index":719,"title":{},"body":{"classes/Configuration.html":{}}}],["selection",{"_index":716,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selector",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["semana",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["semanal",{"_index":798,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["semanales",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["separada",{"_index":555,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["ser",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["serveuna",{"_index":2324,"title":{},"body":{"index.html":{}}}],["service",{"_index":908,"title":{},"body":{"injectables/DataRefreshService.html":{},"injectables/SnackbarService.html":{}}}],["services/datarefreshservice",{"_index":1376,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["services/snack",{"_index":1046,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["services/utils",{"_index":1766,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["servicio",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["servicios",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{}}}],["servidor",{"_index":2321,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["set",{"_index":311,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["set(categorias",{"_index":1640,"title":{},"body":{"components/MenuComponent.html":{}}}],["set(menu.diascomidas!.map(d",{"_index":1896,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["set(recetas.map(r",{"_index":1637,"title":{},"body":{"components/MenuComponent.html":{}}}],["set(this.menu.diascomidas.map(dc",{"_index":1771,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["setheaders",{"_index":489,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["settimeout",{"_index":1926,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["shadow",{"_index":1243,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["si",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["simple",{"_index":772,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["simplechanges",{"_index":1864,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["simplificar",{"_index":2137,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["sin",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePublicoComponent.html":{}}}],["singleton",{"_index":861,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["sirve",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["sistema",{"_index":930,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["size",{"_index":1980,"title":{},"body":{"components/ModalComponent.html":{}}}],["skipself",{"_index":60,"title":{},"body":{"modules/ApiModule.html":{}}}],["sm",{"_index":1984,"title":{},"body":{"components/ModalComponent.html":{}}}],["snackbar",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarnok",{"_index":1324,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["snackbarnok(msg",{"_index":1343,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["snackbarok",{"_index":1325,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["snackbarok(msg",{"_index":1346,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["snackbars",{"_index":2130,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":959,"title":{"injectables/SnackbarService.html":{}},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["sobre",{"_index":1531,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuTablaComponent.html":{},"index.html":{}}}],["solid",{"_index":1238,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{}}}],["soltar",{"_index":1807,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/DataRefreshService.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["spacedelimited",{"_index":2032,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["spec",{"_index":2039,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":2041,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../addrecetadto.ts",{"_index":2396,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../api.ts",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../apirespuestaboolean.ts",{"_index":2402,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestalistacompradto.ts",{"_index":2403,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestalistingredientedto.ts",{"_index":2404,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestalistlistacompradto.ts",{"_index":2405,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestalistmenusemanaldto.ts",{"_index":2406,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestalistrecetadto.ts",{"_index":2407,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestaloginresponse.ts",{"_index":2408,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestamenusemanaldto.ts",{"_index":2409,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestausuariodto.ts",{"_index":2410,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../apirespuestavoid.ts",{"_index":2411,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../diacomidadto.ts",{"_index":2397,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ingredientedto.ts",{"_index":2398,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ingredientesimpledto.ts",{"_index":2399,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../menu",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menusemanalcreatedto.ts",{"_index":2400,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../param.ts",{"_index":2401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../usuariodto.ts",{"_index":2412,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":2303,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../variables.ts",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":548,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:105",{"_index":1446,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:40",{"_index":1456,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:42",{"_index":1458,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:44",{"_index":1454,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:82",{"_index":1444,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:98",{"_index":1443,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/registro/registro.component.ts",{"_index":2073,"title":{},"body":{"components/RegistroComponent.html":{},"coverage.html":{}}}],["src/app/auth/registro/registro.component.ts:106",{"_index":2103,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:108",{"_index":2099,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:115",{"_index":2091,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:136",{"_index":2087,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:145",{"_index":2094,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:147",{"_index":2085,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:29",{"_index":2105,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:31",{"_index":2098,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:33",{"_index":2104,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/auth/registro/registro.component.ts:35",{"_index":2097,"title":{},"body":{"components/RegistroComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts",{"_index":942,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/componentes/header/header.component.ts:165",{"_index":1018,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:167",{"_index":1025,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:169",{"_index":1033,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:173",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:182",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:36",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:49",{"_index":1038,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:51",{"_index":1021,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:53",{"_index":1029,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:59",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:65",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:75",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:79",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:83",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:87",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:91",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/header/header.component.ts:95",{"_index":1015,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/componentes/listado",{"_index":1300,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"coverage.html":{}}}],["src/app/core/componentes/menu",{"_index":1697,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/componentes/modal/modal.component.ts",{"_index":1963,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:50",{"_index":1988,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:52",{"_index":1987,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:54",{"_index":1990,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:56",{"_index":1996,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:61",{"_index":1992,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:69",{"_index":1994,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/modal/modal.component.ts:77",{"_index":1998,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/core/componentes/wrappers/formly",{"_index":913,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":414,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:22",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:33",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":450,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:24",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts:38",{"_index":470,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/services/datarefreshservice.ts",{"_index":860,"title":{},"body":{"injectables/DataRefreshService.html":{},"coverage.html":{}}}],["src/app/core/services/datarefreshservice.ts:22",{"_index":902,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["src/app/core/services/datarefreshservice.ts:24",{"_index":896,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["src/app/core/services/datarefreshservice.ts:30",{"_index":888,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["src/app/core/services/snack",{"_index":2127,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/core/services/utils.ts",{"_index":2215,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/home",{"_index":1188,"title":{},"body":{"components/HomePublicoComponent.html":{},"coverage.html":{}}}],["src/app/usuario/crear",{"_index":789,"title":{},"body":{"components/CrearMenuComponent.html":{},"coverage.html":{}}}],["src/app/usuario/home/home.component.ts",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/usuario/home/home.component.ts:101",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:117",{"_index":1119,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:122",{"_index":1120,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:127",{"_index":1122,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:132",{"_index":1121,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:137",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:140",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:142",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:144",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:151",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:224",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:232",{"_index":1123,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:240",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:41",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:44",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:46",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:48",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:50",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:52",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:80",{"_index":1124,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/home/home.component.ts:88",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/usuario/ingredientes/ingredientes.component.ts",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["src/app/usuario/listas/listas.component.ts",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["src/app/usuario/menu/menu.component.ts",{"_index":1478,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/usuario/menu/menu.component.ts:104",{"_index":1537,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:121",{"_index":1550,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:130",{"_index":1535,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:141",{"_index":1545,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:150",{"_index":1546,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:168",{"_index":1561,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:174",{"_index":1548,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:191",{"_index":1558,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:200",{"_index":1555,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:206",{"_index":1576,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:208",{"_index":1578,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:214",{"_index":1519,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:229",{"_index":1563,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:241",{"_index":1540,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:31",{"_index":1581,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:33",{"_index":1574,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:35",{"_index":1596,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:38",{"_index":1583,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:41",{"_index":1590,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:43",{"_index":1587,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:45",{"_index":1513,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:65",{"_index":1553,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:71",{"_index":1552,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:84",{"_index":1514,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/menu/menu.component.ts:93",{"_index":1568,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/usuario/recetas/recetas.component.ts",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["src/app/usuario/usuario",{"_index":2177,"title":{},"body":{"modules/UsuarioRoutingModule.html":{}}}],["src/app/usuario/usuario.module.ts",{"_index":2165,"title":{},"body":{"modules/UsuarioModule.html":{}}}],["src/openapi/api.base.service.ts",{"_index":561,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/openapi/api.base.service.ts:27",{"_index":569,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:31",{"_index":567,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:39",{"_index":568,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:6",{"_index":564,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:7",{"_index":566,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:8",{"_index":565,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.base.service.ts:9",{"_index":563,"title":{},"body":{"classes/BaseService.html":{}}}],["src/openapi/api.module.ts",{"_index":45,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/openapi/api.module.ts:13",{"_index":52,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/openapi/api/api.ts",{"_index":2229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/api/authcontroller.service.ts",{"_index":290,"title":{},"body":{"injectables/AuthControllerService.html":{},"coverage.html":{}}}],["src/openapi/api/authcontroller.service.ts:37",{"_index":301,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["src/openapi/api/authcontroller.service.ts:48",{"_index":310,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["src/openapi/api/authcontroller.service.ts:49",{"_index":324,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["src/openapi/api/authcontroller.service.ts:50",{"_index":325,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["src/openapi/api/authcontroller.service.ts:51",{"_index":326,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["src/openapi/api/authcontroller.serviceinterface.ts",{"_index":408,"title":{},"body":{"interfaces/AuthControllerServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/authcontroller.serviceinterface.ts:31",{"_index":410,"title":{},"body":{"interfaces/AuthControllerServiceInterface.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts",{"_index":611,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{},"coverage.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts:35",{"_index":613,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts:45",{"_index":615,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts:46",{"_index":616,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts:47",{"_index":617,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["src/openapi/api/categoriaingrediente.service.ts:48",{"_index":618,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["src/openapi/api/categoriaingrediente.serviceinterface.ts",{"_index":625,"title":{},"body":{"interfaces/CategoriaIngredienteServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/categoriaingrediente.serviceinterface.ts:29",{"_index":627,"title":{},"body":{"interfaces/CategoriaIngredienteServiceInterface.html":{}}}],["src/openapi/api/ingrediente.service.ts",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts",{"_index":1254,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts:32",{"_index":1262,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts:39",{"_index":1264,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts:46",{"_index":1266,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts:53",{"_index":1268,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["src/openapi/api/ingrediente.serviceinterface.ts:59",{"_index":1271,"title":{},"body":{"interfaces/IngredienteServiceInterface.html":{}}}],["src/openapi/api/listacompraresource.service.ts",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts",{"_index":1280,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts:35",{"_index":1288,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts:42",{"_index":1290,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts:49",{"_index":1292,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts:55",{"_index":1294,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["src/openapi/api/listacompraresource.serviceinterface.ts:62",{"_index":1296,"title":{},"body":{"interfaces/ListaCompraResourceServiceInterface.html":{}}}],["src/openapi/api/menusemanal.service.ts",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts",{"_index":1783,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:35",{"_index":1790,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:42",{"_index":1792,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:49",{"_index":1794,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:56",{"_index":1796,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:63",{"_index":1798,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/menusemanal.serviceinterface.ts:69",{"_index":1800,"title":{},"body":{"interfaces/MenuSemanalServiceInterface.html":{}}}],["src/openapi/api/receta.service.ts",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["src/openapi/api/receta.serviceinterface.ts",{"_index":2057,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/receta.serviceinterface.ts:32",{"_index":2063,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["src/openapi/api/receta.serviceinterface.ts:39",{"_index":2065,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["src/openapi/api/receta.serviceinterface.ts:46",{"_index":2067,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["src/openapi/api/receta.serviceinterface.ts:52",{"_index":2069,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["src/openapi/api/receta.serviceinterface.ts:59",{"_index":2071,"title":{},"body":{"interfaces/RecetaServiceInterface.html":{}}}],["src/openapi/api/usuarios.service.ts",{"_index":2240,"title":{},"body":{"coverage.html":{}}}],["src/openapi/api/usuarios.serviceinterface.ts",{"_index":2184,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["src/openapi/api/usuarios.serviceinterface.ts:33",{"_index":2189,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["src/openapi/api/usuarios.serviceinterface.ts:40",{"_index":2191,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["src/openapi/api/usuarios.serviceinterface.ts:46",{"_index":2193,"title":{},"body":{"interfaces/UsuariosServiceInterface.html":{}}}],["src/openapi/configuration.ts",{"_index":628,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["src/openapi/configuration.ts:117",{"_index":704,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:139",{"_index":690,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:144",{"_index":702,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:151",{"_index":682,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:158",{"_index":686,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:165",{"_index":688,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:41",{"_index":650,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:42",{"_index":677,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:43",{"_index":676,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:47",{"_index":648,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:48",{"_index":651,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:49",{"_index":678,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:53",{"_index":671,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:61",{"_index":664,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:67",{"_index":644,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/configuration.ts:98",{"_index":720,"title":{},"body":{"classes/Configuration.html":{}}}],["src/openapi/encoder.ts",{"_index":838,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"coverage.html":{}}}],["src/openapi/encoder.ts:11",{"_index":854,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["src/openapi/encoder.ts:14",{"_index":847,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["src/openapi/encoder.ts:17",{"_index":849,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["src/openapi/encoder.ts:8",{"_index":852,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["src/openapi/model/actualizarrecetasmenudto.ts",{"_index":6,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"coverage.html":{}}}],["src/openapi/model/actualizarusuariodto.ts",{"_index":22,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"coverage.html":{}}}],["src/openapi/model/addrecetadto.ts",{"_index":2252,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestaboolean.ts",{"_index":2254,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestalistacompradto.ts",{"_index":2260,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestalistingredientedto.ts",{"_index":2256,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestalistlistacompradto.ts",{"_index":2257,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestalistmenusemanaldto.ts",{"_index":2258,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestalistrecetadto.ts",{"_index":2259,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestaloginresponse.ts",{"_index":2261,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestamenusemanaldto.ts",{"_index":2262,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestausuariodto.ts",{"_index":2263,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/apirespuestavoid.ts",{"_index":2264,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/categoriaingredientedto.ts",{"_index":607,"title":{},"body":{"interfaces/CategoriaIngredienteDto.html":{},"coverage.html":{}}}],["src/openapi/model/diacomidadto.ts",{"_index":2267,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/eliminarlistadto.ts",{"_index":911,"title":{},"body":{"interfaces/EliminarListaDto.html":{},"coverage.html":{}}}],["src/openapi/model/generarlistadto.ts",{"_index":941,"title":{},"body":{"interfaces/GenerarListaDto.html":{},"coverage.html":{}}}],["src/openapi/model/ingredientedto.ts",{"_index":2269,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/ingredientesimpledto.ts",{"_index":2270,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/listacompradto.ts",{"_index":1275,"title":{},"body":{"interfaces/ListaCompraDto.html":{},"coverage.html":{}}}],["src/openapi/model/loginrequest.ts",{"_index":1475,"title":{},"body":{"interfaces/LoginRequest.html":{},"coverage.html":{}}}],["src/openapi/model/loginresponse.ts",{"_index":1477,"title":{},"body":{"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["src/openapi/model/menusemanalcreatedto.ts",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/model/menusemanaldto.ts",{"_index":1781,"title":{},"body":{"interfaces/MenuSemanalDto.html":{},"coverage.html":{}}}],["src/openapi/model/modificaritemsdto.ts",{"_index":2021,"title":{},"body":{"interfaces/ModificarItemsDto.html":{},"coverage.html":{}}}],["src/openapi/model/recetadto.ts",{"_index":2055,"title":{},"body":{"interfaces/RecetaDto.html":{},"coverage.html":{}}}],["src/openapi/model/usuariodto.ts",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/openapi/param.ts",{"_index":2023,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/openapi/variables.ts",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssv",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["standard",{"_index":660,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["standarddataformat",{"_index":2047,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standarddatatype",{"_index":2042,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardparamstyle",{"_index":2030,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardparamstyles",{"_index":2426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["standardparamstyle}s",{"_index":2035,"title":{},"body":{"interfaces/Param.html":{}}}],["started",{"_index":2316,"title":{"index.html":{}},"body":{}}],["statements",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":47,"title":{},"body":{"modules/ApiModule.html":{}}}],["string",{"_index":41,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"injectables/AuthControllerService.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/IngredienteServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["string|string",{"_index":366,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["style",{"_index":773,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/ListadoIngredientesComponent.html":{},"components/ModalComponent.html":{},"interfaces/Param.html":{}}}],["styles",{"_index":667,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["styleurl",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["styleurls",{"_index":813,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{}}}],["su",{"_index":1721,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["subject",{"_index":875,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/ListadoIngredientesComponent.html":{}}}],["submit",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["subscribe",{"_index":1379,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{}}}],["success",{"_index":1407,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"injectables/SnackbarService.html":{}}}],["success(message",{"_index":2150,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["such",{"_index":662,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["suele",{"_index":893,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["super(basepath",{"_index":367,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["superlista",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["superlista/crear",{"_index":809,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["superlista/home",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePublicoComponent.html":{}}}],["superlistafront",{"_index":2317,"title":{},"body":{"index.html":{}}}],["support",{"_index":2387,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":870,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/functions.html":{}}}],["suscribirse",{"_index":899,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["suscriptor",{"_index":878,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["suscriptores",{"_index":890,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["svg",{"_index":2388,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2017,"title":{},"body":{"components/ModalComponent.html":{}}}],["sábado",{"_index":1877,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["súperlista",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["t",{"_index":753,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["t]+[+]json",{"_index":754,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["tabla",{"_index":1805,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["tabla.component",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/UsuarioModule.html":{}}}],["tabla.component.html",{"_index":1817,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.scss",{"_index":1818,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts",{"_index":1803,"title":{},"body":{"components/MenuTablaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tabla.component.ts:101",{"_index":1862,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:108",{"_index":1861,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:123",{"_index":1859,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:153",{"_index":1873,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:177",{"_index":1852,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:185",{"_index":1854,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:236",{"_index":1849,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:259",{"_index":1884,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:265",{"_index":1841,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:275",{"_index":1845,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:281",{"_index":1881,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:36",{"_index":1833,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:38",{"_index":1835,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:40",{"_index":1837,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:43",{"_index":1882,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:46",{"_index":1878,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:54",{"_index":1832,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:71",{"_index":1869,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla.component.ts:92",{"_index":1865,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tabla/menu",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/MenuTablaComponent.html":{},"modules/UsuarioModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablas",{"_index":1524,"title":{},"body":{"components/MenuComponent.html":{}}}],["table",{"_index":1643,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2279,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":672,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["takeuntil",{"_index":1377,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["tamaño",{"_index":1970,"title":{},"body":{"components/ModalComponent.html":{}}}],["td",{"_index":1645,"title":{},"body":{"components/MenuComponent.html":{}}}],["template",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["templateoptions",{"_index":1450,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["templateurl",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["testejecutar",{"_index":2362,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2358,"title":{},"body":{"index.html":{}}}],["text",{"_index":395,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["texto",{"_index":2149,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["th",{"_index":1644,"title":{},"body":{"components/MenuComponent.html":{}}}],["that's",{"_index":780,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["then(canvas",{"_index":1666,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.accesstoken",{"_index":730,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.addtohttpparamsrecursive(httpparams",{"_index":587,"title":{},"body":{"classes/BaseService.html":{}}}],["this.apikeys",{"_index":724,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.aplicarestilospdfmanual(el",{"_index":1662,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.authservice.login(this.model).subscribe",{"_index":1461,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.basepath",{"_index":576,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.cargardatos",{"_index":881,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["this.cargarestadisticas",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cargarusuarioinicial",{"_index":1049,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.categorias",{"_index":834,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["this.categorias.length",{"_index":1903,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.categoriascomida",{"_index":1772,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["this.categoriaservice.listarcategorias().subscribe",{"_index":1351,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.categoriasseleccionadas",{"_index":1604,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.categoriasseleccionadas.filter(c",{"_index":1608,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.categoriasseleccionadas.length",{"_index":1610,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.categoriasseleccionadas.push(cat",{"_index":1607,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.closed.emit",{"_index":2015,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.configuration",{"_index":570,"title":{},"body":{"classes/BaseService.html":{}}}],["this.configuration.basepath",{"_index":572,"title":{},"body":{"classes/BaseService.html":{}}}],["this.configuration.basepath}${localvarpath",{"_index":403,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["this.configuration.encoder",{"_index":578,"title":{},"body":{"classes/BaseService.html":{}}}],["this.configuration.isjsonmime(localvarhttpheaderacceptselected",{"_index":399,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["this.configuration.selectheaderaccept",{"_index":382,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["this.configuration.selectheadercontenttype(consumes",{"_index":392,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["this.configuration.withcredentials",{"_index":406,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["this.construirdiascomidas",{"_index":1931,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.contenidoparapdf.nativeelement",{"_index":1661,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.credentials",{"_index":740,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.credentials[key",{"_index":758,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.datarefreshservice.notifyrefresh",{"_index":884,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["this.datarefreshservice.refresh$.subscribe",{"_index":880,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["this.defaultencodeparam(param",{"_index":738,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.defaultheaders",{"_index":379,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["this.destroy$.complete",{"_index":1382,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.destroy$.next",{"_index":1381,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.diassemana",{"_index":1909,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.encodeparam",{"_index":737,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.encoder",{"_index":577,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.estilosoriginales.clear",{"_index":1660,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.estilosoriginales.foreach((valor",{"_index":1657,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.estilosoriginales.has(htmlel",{"_index":1649,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.estilosoriginales.set(htmlel",{"_index":1650,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.form.patchvalue(this.model",{"_index":1054,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.form.reset",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.request('post",{"_index":402,"title":{},"body":{"injectables/AuthControllerService.html":{}}}],["this.httpclient.request>('get",{"_index":624,"title":{},"body":{"injectables/CategoriaIngredienteService.html":{}}}],["this.ingredientes",{"_index":1385,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredienteseleccionado",{"_index":1391,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredienteservice.altaingrediente(this.nuevoingredientemodel).subscribe",{"_index":1396,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredienteservice.obtenertodosingredientes().subscribe",{"_index":1383,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredientesoriginales",{"_index":1384,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredientesoriginales.filter(i",{"_index":1403,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.ingredientesservice.obtenertodosingredientes().subscribe",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.inicializardesdemenu(menu",{"_index":1898,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.inicializarmenuvacio",{"_index":1901,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.isjsonmime(x",{"_index":745,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.listaservice.generarlista",{"_index":1630,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.listasservice.obtenermislistas().subscribe",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loadingredientes",{"_index":1380,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.loadmenus",{"_index":1601,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.location.back",{"_index":1469,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["this.lookupcredential(credentialkey",{"_index":759,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.mensaje",{"_index":2112,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.menu.diascomidas.find(dc",{"_index":1774,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["this.menu?.diascomidas",{"_index":1769,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["this.menudata",{"_index":1908,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia",{"_index":1916,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia.key",{"_index":1910,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia.key][cat",{"_index":1913,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia.key][categoria",{"_index":1911,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia][cat",{"_index":1953,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia][categoria",{"_index":1917,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia][categoria].filter(r",{"_index":1930,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia][categoria].push(receta",{"_index":1922,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudata[dia][categoria].some(r",{"_index":1919,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menudatachange.emit(this.menudata",{"_index":1912,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menuid",{"_index":837,"title":{},"body":{"components/CrearMenuComponent.html":{},"components/MenuTablaComponent.html":{}}}],["this.menus",{"_index":1602,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuseleccionado",{"_index":1617,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuseleccionado!.id",{"_index":1624,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuseleccionado.id",{"_index":1631,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuservice.actualizarrecetasmenu(dto).subscribe",{"_index":1949,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menuservice.actualizarrecetasmenu(payload",{"_index":1934,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menuservice.crearmenusemanal",{"_index":1935,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menuservice.eliminarmenu(this.menuseleccionado.id!).subscribe",{"_index":1625,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.menuservice.obtenermenu(this.menuid).subscribe",{"_index":1893,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.menuservice.obtenermismenus().subscribe",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["this.modal.open",{"_index":2116,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.modal.title",{"_index":2110,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.modalconfirmar.close",{"_index":1628,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalconfirmar.open",{"_index":1629,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalmenudetalle.close",{"_index":1623,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalmenudetalle.open",{"_index":1618,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalnuevoingrediente.close",{"_index":1399,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.modalnuevomenu.close",{"_index":1611,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalnuevomenu.open",{"_index":1606,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.modalreceta.open",{"_index":1395,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.modalusuario.close",{"_index":1065,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.modalusuario.open",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.model",{"_index":1053,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.numingredientes",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.numlistas",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.nummenus",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.numrecetas",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.password",{"_index":728,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.recetasseleccionadas",{"_index":1393,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.recetasservice.buscartodasrecetas().subscribe",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.refresh.refresh$.pipe(takeuntil(this.destroy",{"_index":1378,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.refreshsubject.asobservable",{"_index":895,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["this.refreshsubject.next",{"_index":909,"title":{},"body":{"injectables/DataRefreshService.html":{}}}],["this.registroexitoso",{"_index":2109,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.restaurarestilosoriginales",{"_index":1683,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":831,"title":{},"body":{"components/CrearMenuComponent.html":{}}}],["this.router.navigate",{"_index":496,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2120,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.router.navigate(['/auth/registro",{"_index":1468,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/superlista/crear",{"_index":1612,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.navigate(['/superlista/home",{"_index":1198,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/superlista/menu",{"_index":1943,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.router.navigate(['superlista/home",{"_index":1059,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate(['superlista/ingredientes",{"_index":1055,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['superlista/menu",{"_index":1058,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['superlista/mis",{"_index":1056,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['superlista/recetas",{"_index":1057,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.size",{"_index":2018,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.snackbar.error(\"hubo",{"_index":1066,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.snackbar.error(\"usuario",{"_index":1466,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snackbar.error('el",{"_index":1933,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.snackbar.error('error",{"_index":1944,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.snackbar.error('no",{"_index":1899,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.snackbar.open(message",{"_index":2152,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbar.success(\"usuario",{"_index":1063,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.snackbar.success('men",{"_index":1941,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.snackbarnok('error",{"_index":1400,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.snackbarok('error",{"_index":1386,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.snackbarok('ingrediente",{"_index":1397,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.snackbarservice.error('error",{"_index":1603,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.snackbarservice.error('ocurri",{"_index":2141,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.open(msg",{"_index":1405,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["this.snackbarservice.success('lista",{"_index":1632,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.snackbarservice.success('men",{"_index":1626,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.snackbarservice.success('operación",{"_index":2139,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.todascategorias",{"_index":1605,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.tooltiptimeout",{"_index":1956,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["this.username",{"_index":726,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.userservice.actualizarusuario(this.model).subscribe",{"_index":1061,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.userservice.obtenerusuarioporemail().subscribe",{"_index":1050,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.usuario",{"_index":1051,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["this.usuariosservice.altausuario(this.model).subscribe",{"_index":2108,"title":{},"body":{"components/RegistroComponent.html":{}}}],["this.usuariosservice.obtenerusuarioporemail().subscribe",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.visible",{"_index":2014,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.withcredentials",{"_index":733,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["throw",{"_index":76,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"classes/BaseService.html":{}}}],["throwerror",{"_index":484,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tiempo",{"_index":1848,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tienda",{"_index":1207,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["tiene",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuTablaComponent.html":{}}}],["tienes",{"_index":1201,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["time",{"_index":775,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["timeout",{"_index":1757,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["title",{"_index":1218,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/ModalComponent.html":{}}}],["toda",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{}}}],["todas",{"_index":1348,"title":{},"body":{"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{}}}],["todascategorias",{"_index":1495,"title":{},"body":{"components/MenuComponent.html":{}}}],["todos",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DataRefreshService.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"modules/UsuarioModule.html":{}}}],["toggle=\"tooltip\"]').foreach(el",{"_index":1906,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["togglecategoria",{"_index":1510,"title":{},"body":{"components/MenuComponent.html":{}}}],["togglecategoria(cat",{"_index":1566,"title":{},"body":{"components/MenuComponent.html":{}}}],["token",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":1842,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tooltip.close",{"_index":1960,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tooltip.open",{"_index":1957,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["tooltips",{"_index":1706,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["tooltiptimeout",{"_index":1714,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["total",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuComponent.html":{}}}],["tr",{"_index":1646,"title":{},"body":{"components/MenuComponent.html":{}}}],["transfercache",{"_index":372,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["transform",{"_index":1230,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/ModalComponent.html":{}}}],["transition",{"_index":1229,"title":{},"body":{"components/HomePublicoComponent.html":{},"components/ModalComponent.html":{}}}],["transition(':enter",{"_index":2006,"title":{},"body":{"components/ModalComponent.html":{}}}],["transition(':leave",{"_index":2009,"title":{},"body":{"components/ModalComponent.html":{}}}],["translatey",{"_index":1245,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["tras",{"_index":872,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/HomeComponent.html":{},"components/MenuTablaComponent.html":{}}}],["tree",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["trigger",{"_index":2001,"title":{},"body":{"components/ModalComponent.html":{}}}],["trigger('fadeoverlay",{"_index":2005,"title":{},"body":{"components/ModalComponent.html":{}}}],["trigger('scalecontent",{"_index":2010,"title":{},"body":{"components/ModalComponent.html":{}}}],["true",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthControllerService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":503,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ts",{"_index":351,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["tslib",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["tsv",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tu",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["tus",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActualizarRecetasMenuDto.html":{},"interfaces/ActualizarUsuarioDto.html":{},"modules/ApiModule.html":{},"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/BaseService.html":{},"interfaces/CategoriaIngredienteDto.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/EliminarListaDto.html":{},"components/FormlyHorizontalWrapper.html":{},"interfaces/GenerarListaDto.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraDto.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"interfaces/MenuSemanalDto.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModificarItemsDto.html":{},"interfaces/Param.html":{},"interfaces/RecetaDto.html":{},"interfaces/RecetaServiceInterface.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2394,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":571,"title":{},"body":{"classes/BaseService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["types",{"_index":714,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["types/classes",{"_index":2046,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":769,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["título",{"_index":1969,"title":{},"body":{"components/ModalComponent.html":{}}}],["ubicados",{"_index":2132,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["un",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["una",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":374,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/MenuComponent.html":{},"interfaces/Param.html":{}}}],["unificarse",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{}}}],["unit",{"_index":1671,"title":{},"body":{"components/MenuComponent.html":{}}}],["unitarios",{"_index":2359,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2054,"title":{},"body":{"interfaces/Param.html":{}}}],["uno",{"_index":1856,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["usa",{"_index":874,"title":{},"body":{"injectables/DataRefreshService.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{},"index.html":{}}}],["usadas",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{}}}],["usado",{"_index":1024,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/RegistroComponent.html":{}}}],["usando",{"_index":929,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["usar",{"_index":1577,"title":{},"body":{"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"index.html":{}}}],["use",{"_index":646,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["useclass",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["used",{"_index":657,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["usefactory",{"_index":72,"title":{},"body":{"modules/ApiModule.html":{}}}],["user",{"_index":2037,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":40,"title":{},"body":{"interfaces/ActualizarUsuarioDto.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"components/RegistroComponent.html":{}}}],["userservice",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["uses",{"_index":708,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["uso",{"_index":2138,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["usuario",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{}}}],["usuario.apellido",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["usuario.email",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["usuario.nombre",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["usuario?.apellido",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{}}}],["usuario?.email",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{}}}],["usuario?.nombre",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{}}}],["usuariodto",{"_index":1037,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["usuarioid",{"_index":1277,"title":{},"body":{"interfaces/ListaCompraDto.html":{},"interfaces/MenuSemanalDto.html":{}}}],["usuariomodule",{"_index":2160,"title":{"modules/UsuarioModule.html":{}},"body":{"modules/UsuarioModule.html":{},"modules.html":{},"overview.html":{}}}],["usuarioroutingmodule",{"_index":2164,"title":{"modules/UsuarioRoutingModule.html":{}},"body":{"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usuarios",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["usuariosservice",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usuariosservice:usuariosservice",{"_index":2121,"title":{},"body":{"components/RegistroComponent.html":{}}}],["usuariosserviceinterface",{"_index":2183,"title":{"interfaces/UsuariosServiceInterface.html":{}},"body":{"interfaces/UsuariosServiceInterface.html":{},"coverage.html":{}}}],["utilidad",{"_index":1752,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["utilidades",{"_index":1811,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["utiliza",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["utilizando",{"_index":1455,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["v",{"_index":850,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["vacías",{"_index":1035,"title":{},"body":{"components/HeaderComponent.html":{}}}],["vacío",{"_index":1719,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{}}}],["validaciones",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["valor",{"_index":1659,"title":{},"body":{"components/MenuComponent.html":{}}}],["value",{"_index":328,"title":{},"body":{"injectables/AuthControllerService.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"interfaces/Param.html":{},"components/RegistroComponent.html":{},"miscellaneous/variables.html":{}}}],["value.foreach(elem",{"_index":597,"title":{},"body":{"classes/BaseService.html":{}}}],["value.toisostring",{"_index":599,"title":{},"body":{"classes/BaseService.html":{}}}],["value[k",{"_index":605,"title":{},"body":{"classes/BaseService.html":{}}}],["var",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["variable",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":358,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":666,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["velocidad",{"_index":2356,"title":{},"body":{"index.html":{}}}],["ventana",{"_index":1966,"title":{},"body":{"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["ver",{"_index":1588,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["verduras",{"_index":2413,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["verifica",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verificar",{"_index":499,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["version",{"_index":2392,"title":{},"body":{"properties.html":{}}}],["versions",{"_index":770,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["versión",{"_index":2319,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":2157,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["vez",{"_index":905,"title":{},"body":{"injectables/DataRefreshService.html":{},"index.html":{}}}],["viernes",{"_index":1744,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":1043,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/MenuComponent.html":{},"components/RegistroComponent.html":{}}}],["viewchild('contenidoparapdf",{"_index":1575,"title":{},"body":{"components/MenuComponent.html":{}}}],["viewchild('modalconfirmar",{"_index":1584,"title":{},"body":{"components/MenuComponent.html":{}}}],["viewchild('modalmenudetalle",{"_index":1586,"title":{},"body":{"components/MenuComponent.html":{}}}],["viewchild('modalnuevomenu",{"_index":1589,"title":{},"body":{"components/MenuComponent.html":{}}}],["viewchild('modalusuario",{"_index":1020,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["viewchild('nuevoingredientemodal",{"_index":1363,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["viewchild('recetasconingredientesmodal",{"_index":1365,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["viewchild(modalcomponent",{"_index":2102,"title":{},"body":{"components/RegistroComponent.html":{}}}],["vinculado",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{}}}],["visible",{"_index":1977,"title":{},"body":{"components/ModalComponent.html":{}}}],["visita",{"_index":2380,"title":{},"body":{"index.html":{}}}],["vista",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuTablaComponent.html":{}}}],["visual",{"_index":1699,"title":{},"body":{"components/MenuDetalleComponent.html":{}}}],["visuales",{"_index":1812,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["visualización",{"_index":946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["visualizar",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["visualmente",{"_index":1725,"title":{},"body":{"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"modules/ApiModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["volver",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["volveratras",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["vuelvas",{"_index":1205,"title":{},"body":{"components/HomePublicoComponent.html":{}}}],["vuelve",{"_index":1447,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistroComponent.html":{}}}],["válido",{"_index":502,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["webkit",{"_index":1417,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["whether",{"_index":312,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{}}}],["width",{"_index":1412,"title":{},"body":{"components/ListadoIngredientesComponent.html":{}}}],["window.innerwidth",{"_index":1892,"title":{},"body":{"components/MenuTablaComponent.html":{}}}],["withcredentials",{"_index":405,"title":{},"body":{"injectables/AuthControllerService.html":{},"injectables/CategoriaIngredienteService.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["workaround",{"_index":840,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["works",{"_index":771,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["wrapper",{"_index":915,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{}}}],["wrapper'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CrearMenuComponent.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{}}}],["wrapper.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["wrapper.component.ts",{"_index":914,"title":{},"body":{"components/FormlyHorizontalWrapper.html":{},"coverage.html":{}}}],["wrapper/formly",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/FormlyHorizontalWrapper.html":{},"coverage.html":{}}}],["wrappers",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{}}}],["xito",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegistroComponent.html":{},"injectables/SnackbarService.html":{}}}],["xl",{"_index":1986,"title":{},"body":{"components/ModalComponent.html":{}}}],["y",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CrearMenuComponent.html":{},"injectables/DataRefreshService.html":{},"components/FormlyHorizontalWrapper.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/HomePublicoComponent.html":{},"components/ListadoIngredientesComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/MenuDetalleComponent.html":{},"components/MenuTablaComponent.html":{},"components/ModalComponent.html":{},"components/RegistroComponent.html":{},"modules/UsuarioModule.html":{},"modules/UsuarioRoutingModule.html":{},"index.html":{}}}],["ya",{"_index":2125,"title":{},"body":{"components/RegistroComponent.html":{}}}],["yes",{"_index":302,"title":{},"body":{"injectables/AuthControllerService.html":{},"interfaces/AuthControllerServiceInterface.html":{},"classes/BaseService.html":{},"injectables/CategoriaIngredienteService.html":{},"interfaces/CategoriaIngredienteServiceInterface.html":{},"classes/Configuration.html":{},"interfaces/IngredienteServiceInterface.html":{},"interfaces/ListaCompraResourceServiceInterface.html":{},"interfaces/MenuSemanalServiceInterface.html":{},"interfaces/RecetaServiceInterface.html":{},"interfaces/UsuariosServiceInterface.html":{}}}],["zone.js",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsuarioModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActualizarRecetasMenuDto.html":{"url":"interfaces/ActualizarRecetasMenuDto.html","title":"interface - ActualizarRecetasMenuDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActualizarRecetasMenuDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/actualizarRecetasMenuDto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            diasComidas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            menuId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diasComidas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diasComidas:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiaComidaDto } from './diaComidaDto';\n\n\nexport interface ActualizarRecetasMenuDto { \n    menuId?: number;\n    diasComidas?: Array;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActualizarUsuarioDto.html":{"url":"interfaces/ActualizarUsuarioDto.html","title":"interface - ActualizarUsuarioDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActualizarUsuarioDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/actualizarUsuarioDto.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apellido\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nombre\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            passwordAntiguo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            passwordNuevo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellido\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellido:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordAntiguo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordAntiguo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordNuevo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordNuevo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActualizarUsuarioDto { \n    username?: string;\n    nombre?: string;\n    apellido?: string;\n    email?: string;\n    passwordAntiguo?: string;\n    passwordNuevo?: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/openapi/api.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(configurationFactory: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configurationFactory\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz (root) de la aplicación Angular SúperLista.\nActúa como contenedor principal para toda la estructura de la app y sirve como punto de entrada.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * @component\n * @name AppComponent\n * @description\n * Componente raíz (root) de la aplicación Angular SúperLista.\n * Actúa como contenedor principal para toda la estructura de la app y sirve como punto de entrada.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  standalone: false,\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePublicoComponent\n\nHomePublicoComponent\n\nAppModule -->\n\nHomePublicoComponent->AppModule\n\n\n\n\n\nListadoRecetasComponent \n\nListadoRecetasComponent \n\nListadoRecetasComponent  -->\n\nAppModule->ListadoRecetasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiModule\n\nApiModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nListadoIngredientesComponent\n\nListadoIngredientesComponent\n\nAppModule -->\n\nListadoIngredientesComponent->AppModule\n\n\n\n\n\nListadoRecetasComponent\n\nListadoRecetasComponent\n\nAppModule -->\n\nListadoRecetasComponent->AppModule\n\n\n\n\n\nMenuDetalleComponent\n\nMenuDetalleComponent\n\nAppModule -->\n\nMenuDetalleComponent->AppModule\n\n\n\n\n\nMenuTablaComponent\n\nMenuTablaComponent\n\nAppModule -->\n\nMenuTablaComponent->AppModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Módulo raíz principal de la aplicación Angular SúperLista.\nDeclara los componentes fundamentales, importa todos los módulos necesarios,\nregistra interceptores HTTP, configura Formly y establece el componente raíz para el arranque.\nIncluye:\n\nConfiguración del ApiModule para interactuar con el backend.\nRegistro del AuthInterceptor para manejar autenticación.\nImportación de módulos de Angular Material, Formly, y componentes personalizados.\n\nExample :platformBrowserDynamic().bootstrapModule(AppModule);\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomePublicoComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            ListadoIngredientesComponent\n                        \n                        \n                            ListadoRecetasComponent\n                        \n                        \n                            MenuDetalleComponent\n                        \n                        \n                            MenuTablaComponent\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListadoRecetasComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ApiModule, Configuration } from '../openapi';\nimport {FormlyModule} from '@ngx-formly/core';\nimport {FormlyBootstrapModule} from '@ngx-formly/bootstrap';\nimport { ModalComponent } from './core/componentes/modal/modal.component';\nimport { ListadoIngredientesComponent } from './core/componentes/listado-ingredientes/listado-ingredientes.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {FormlyHorizontalWrapper} from './core/componentes/wrappers/formly-horizontal-wrapper/formly-horizontal-wrapper.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ListadoRecetasComponent } from './core/componentes/listado-recetas/listado-recetas.component';\nimport {HeaderComponent} from './core/componentes/header/header.component';\nimport { MenuDetalleComponent } from './core/componentes/menu-detalle/menu-detalle.component';\nimport { MenuTablaComponent } from './core/componentes/menu-tabla/menu-tabla.component';\nimport { HomePublicoComponent } from './home-publico/home-publico.component';\n\n/**\n * @module\n * @name AppModule\n * @description\n * Módulo raíz principal de la aplicación Angular SúperLista.\n * Declara los componentes fundamentales, importa todos los módulos necesarios,\n * registra interceptores HTTP, configura Formly y establece el componente raíz para el arranque.\n *\n * Incluye:\n * - Configuración del ApiModule para interactuar con el backend.\n * - Registro del AuthInterceptor para manejar autenticación.\n * - Importación de módulos de Angular Material, Formly, y componentes personalizados.\n *\n * @example\n * platformBrowserDynamic().bootstrapModule(AppModule);\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePublicoComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ApiModule.forRoot(() => new Configuration({\n      basePath: 'http://localhost:8080'\n    })),\n    FormlyModule.forRoot({\n      wrappers: [{name: 'horizontal', component: FormlyHorizontalWrapper}],\n    }),\n    FormlyBootstrapModule,\n    ModalComponent,\n    ListadoIngredientesComponent,\n    ListadoRecetasComponent,\n    MatSnackBarModule,\n    HeaderComponent,\n    MenuDetalleComponent,\n    MenuTablaComponent,\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  exports: [\n    ListadoRecetasComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {HomePublicoComponent} from './home-publico/home-publico.component';\nimport {AuthGuard} from './core/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePublicoComponent\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  {\n    path: 'superlista',\n    canActivate: [AuthGuard],\n    loadChildren: () => \"import('./usuario/usuario.module').then(m => m.UsuarioModule)\"\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  },\n];\n\n/**\n * @module\n * @name AppRoutingModule\n * @description\n * Módulo de enrutamiento principal de la aplicación Angular SúperLista.\n * Define las rutas raíz de la aplicación, incluyendo:\n * - La home pública (sin autenticación).\n * - El módulo de autenticación (lazy load).\n * - El módulo privado 'superlista' protegido por AuthGuard.\n * - Un redireccionamiento global para rutas no encontradas.\n *\n * @example\n * RouterModule.forRoot(routes)\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthControllerService.html":{"url":"injectables/AuthControllerService.html","title":"injectable - AuthControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/authController.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Protected\n                                addToHttpParams\n                            \n                            \n                                    Protected\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Protected\n                                canConsumeForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration?: Configuration)\n                    \n                \n                        \n                            \n                                Defined in src/openapi/api/authController.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginRequest: LoginRequest, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/authController.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginRequest\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginRequest: LoginRequest, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/authController.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginRequest\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginRequest: LoginRequest, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/authController.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginRequest\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginRequest: LoginRequest, observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/authController.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                loginRequest\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canConsumeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    canConsumeForm(consumes: string[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Configuration\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec, HttpContext \n        }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\n// @ts-ignore\nimport { ApiRespuestaLoginResponse } from '../model/apiRespuestaLoginResponse';\n// @ts-ignore\nimport { LoginRequest } from '../model/loginRequest';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { BaseService } from '../api.base.service';\nimport {\n    AuthControllerServiceInterface\n} from './authController.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthControllerService extends BaseService implements AuthControllerServiceInterface {\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string|string[], @Optional() configuration?: Configuration) {\n        super(basePath, configuration);\n    }\n\n    /**\n     * @param loginRequest \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public login(loginRequest: LoginRequest, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable;\n    public login(loginRequest: LoginRequest, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable>;\n    public login(loginRequest: LoginRequest, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable>;\n    public login(loginRequest: LoginRequest, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable {\n        if (loginRequest === null || loginRequest === undefined) {\n            throw new Error('Required parameter loginRequest was null or undefined when calling login.');\n        }\n\n        let localVarHeaders = this.defaultHeaders;\n\n        const localVarHttpHeaderAcceptSelected: string | undefined = options?.httpHeaderAccept ?? this.configuration.selectHeaderAccept([\n            'application/json'\n        ]);\n        if (localVarHttpHeaderAcceptSelected !== undefined) {\n            localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n        }\n\n        const localVarHttpContext: HttpContext = options?.context ?? new HttpContext();\n\n        const localVarTransferCache: boolean = options?.transferCache ?? true;\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            localVarHeaders = localVarHeaders.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType_: 'text' | 'json' | 'blob' = 'json';\n        if (localVarHttpHeaderAcceptSelected) {\n            if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n                responseType_ = 'text';\n            } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n                responseType_ = 'json';\n            } else {\n                responseType_ = 'blob';\n            }\n        }\n\n        let localVarPath = `/auth/login`;\n        return this.httpClient.request('post', `${this.configuration.basePath}${localVarPath}`,\n            {\n                context: localVarHttpContext,\n                body: loginRequest,\n                responseType: responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: localVarHeaders,\n                observe: observe,\n                transferCache: localVarTransferCache,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthControllerServiceInterface.html":{"url":"interfaces/AuthControllerServiceInterface.html","title":"interface - AuthControllerServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthControllerServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/authController.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginRequest: LoginRequest, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/authController.serviceInterface.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginRequest\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ApiRespuestaLoginResponse } from '../model/models';\nimport { LoginRequest } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface AuthControllerServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param loginRequest \n     */\n    login(loginRequest: LoginRequest, extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard de rutas que protege las páginas privadas de la aplicación SúperLista.\nVerifica si existe un token de autenticación en localStorage antes de permitir el acceso.\nSi no hay token, redirige al usuario a la página de autenticación.\nExample :{\n  path: 'superlista/home',\n  canActivate: [AuthGuard],\n  component: HomeComponent\n}\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor del guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento para redireccionar si no hay token.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:33\n                        \n                    \n\n\n            \n                \n                        Determina si la ruta puede ser activada.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si hay token, false si no (y redirige a '/auth').\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n/**\n * @guard\n * @name AuthGuard\n * @description\n * Guard de rutas que protege las páginas privadas de la aplicación SúperLista.\n * Verifica si existe un token de autenticación en localStorage antes de permitir el acceso.\n * Si no hay token, redirige al usuario a la página de autenticación.\n *\n * @example\n * {\n *   path: 'superlista/home',\n *   canActivate: [AuthGuard],\n *   component: HomeComponent\n * }\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Constructor del guard.\n   * @param router Servicio de enrutamiento para redireccionar si no hay token.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Determina si la ruta puede ser activada.\n   * @returns true si hay token, false si no (y redirige a '/auth').\n   */\n  canActivate(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['/auth']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor HTTP que añade el token JWT a las cabeceras de las peticiones salientes.\nSi detecta un error 401 y el token está expirado, elimina el token y redirige al usuario a la página principal.\nExample :{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n}\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/auth.interceptor.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor del interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento para redirigir si el token expira.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/auth.interceptor.ts:38\n                        \n                    \n\n\n            \n                \n                        Intercepta las peticiones HTTP salientes, añade el token (si existe) en la cabecera Authorization\ny maneja errores 401 si el token ha expirado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Petición original.\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Manejador HTTP.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                Observable del evento HTTP.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n/**\n * @interceptor\n * @name AuthInterceptor\n * @description\n * Interceptor HTTP que añade el token JWT a las cabeceras de las peticiones salientes.\n * Si detecta un error 401 y el token está expirado, elimina el token y redirige al usuario a la página principal.\n *\n * @example\n * {\n *   provide: HTTP_INTERCEPTORS,\n *   useClass: AuthInterceptor,\n *   multi: true\n * }\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  /**\n   * Constructor del interceptor.\n   * @param router Servicio de enrutamiento para redirigir si el token expira.\n   */\n  constructor(private router: Router) {}\n  /**\n   * Intercepta las peticiones HTTP salientes, añade el token (si existe) en la cabecera Authorization\n   * y maneja errores 401 si el token ha expirado.\n   * @param req Petición original.\n   * @param next Manejador HTTP.\n   * @returns Observable del evento HTTP.\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    const authReq = token\n      ? req.clone({ setHeaders: { Authorization: `Bearer ${token}` } })\n      : req;\n\n    return next.handle(authReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401 && token && isTokenExpired(token)) {\n          localStorage.removeItem('token');\n          this.router.navigate(['']);\n        }\n\n        return throwError(() => error);\n      })\n    );\n  }\n}\n\n/**\n * Función auxiliar para verificar si un token JWT ha expirado.\n * @param token Token JWT.\n * @returns true si ha expirado, false si aún es válido.\n */\nfunction isTokenExpired(token: string): boolean {\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const now = Math.floor(Date.now() / 1000);\n    return payload.exp \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nAuthModule -->\n\nRegistroComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAuthModule -->\n\nModalComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Módulo de autenticación de la aplicación SúperLista.\nEste módulo agrupa todos los componentes relacionados con el proceso de autenticación, incluyendo:\n\nLoginComponent: para iniciar sesión.\nRegistroComponent: para registrar nuevos usuarios.\n\nAdemás, importa módulos esenciales como:\n\nAuthRoutingModule: define las rutas del módulo de autenticación.\nReactiveFormsModule: para manejar formularios reactivos.\nFormlyModule: para construir formularios dinámicos.\nModalComponent: para mostrar mensajes emergentes al usuario.\n\nEste módulo encapsula toda la funcionalidad de autenticación, asegurando una organización clara y modular dentro de la aplicación.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegistroComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport {LoginComponent} from './login/login.component';\nimport { RegistroComponent } from './registro/registro.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FormlyModule} from '@ngx-formly/core';\nimport {ModalComponent} from '../core/componentes/modal/modal.component';\n\n/**\n * @module\n * @name AuthModule\n * @description\n * Módulo de autenticación de la aplicación SúperLista.\n * Este módulo agrupa todos los componentes relacionados con el proceso de autenticación, incluyendo:\n * - LoginComponent: para iniciar sesión.\n * - RegistroComponent: para registrar nuevos usuarios.\n *\n * Además, importa módulos esenciales como:\n * - AuthRoutingModule: define las rutas del módulo de autenticación.\n * - ReactiveFormsModule: para manejar formularios reactivos.\n * - FormlyModule: para construir formularios dinámicos.\n * - ModalComponent: para mostrar mensajes emergentes al usuario.\n *\n * Este módulo encapsula toda la funcionalidad de autenticación, asegurando una organización clara y modular dentro de la aplicación.\n */\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegistroComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FormlyModule,\n    ModalComponent\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegistroComponent } from './registro/registro.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'registro', component: RegistroComponent }\n];\n\n/**\n * @module\n * @name AuthRoutingModule\n * @description\n * Módulo de enrutamiento para la sección de autenticación de la aplicación SúperLista.\n * Define las rutas específicas para acceder a:\n * - LoginComponent: disponible en la ruta '/login'.\n * - RegistroComponent: disponible en la ruta '/registro'.\n *\n * Este módulo se importa dentro del AuthModule para mantener separada la configuración de rutas\n * y facilitar la organización y el mantenimiento del proyecto.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api.base.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addToHttpParams\n                            \n                            \n                                    Protected\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Protected\n                                canConsumeForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(basePath?: string | string[], configuration?: Configuration)\n                    \n                \n                        \n                            \n                                Defined in src/openapi/api.base.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/openapi/api.base.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Configuration\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/api.base.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                    \n                        \n                                Defined in src/openapi/api.base.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/api.base.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api.base.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api.base.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canConsumeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    canConsumeForm(consumes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api.base.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpParams, HttpParameterCodec } from '@angular/common/http';\nimport { CustomHttpParameterCodec } from './encoder';\nimport { Configuration } from './configuration';\n\nexport class BaseService {\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration: Configuration;\n    public encoder: HttpParameterCodec;\n\n    constructor(basePath?: string|string[], configuration?: Configuration) {\n        this.configuration = configuration || new Configuration();\n        if (typeof this.configuration.basePath !== 'string') {\n            const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n            if (firstBasePath != undefined) {\n                basePath = firstBasePath;\n            }\n\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    protected canConsumeForm(consumes: string[]): boolean {\n        return consumes.indexOf('multipart/form-data') !== -1;\n    }\n\n    protected addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        // If the value is an object (but not a Date), recursively add its keys.\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            return this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n\n    protected addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value === null || value === undefined) {\n            return httpParams;\n        }\n        if (typeof value === 'object') {\n            // If JSON format is preferred, key must be provided.\n            if (key != null) {\n                return httpParams.append(key, JSON.stringify(value));\n            }\n            // Otherwise, if it's an array, add each element.\n            if (Array.isArray(value)) {\n                value.forEach(elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key, value.toISOString());\n                } else {\n                    throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach(k => {\n                    const paramKey = key ? `${key}.${k}` : k;\n                    httpParams = this.addToHttpParamsRecursive(httpParams, value[k], paramKey);\n                });\n            }\n            return httpParams;\n        } else if (key != null) {\n            return httpParams.append(key, value);\n        }\n        throw Error(\"key may not be null if value is not object or array\");\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoriaIngredienteDto.html":{"url":"interfaces/CategoriaIngredienteDto.html","title":"interface - CategoriaIngredienteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoriaIngredienteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/categoriaIngredienteDto.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoriaIngredienteDto { \n    id?: number;\n    nombre?: string;\n    descripcion?: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriaIngredienteService.html":{"url":"injectables/CategoriaIngredienteService.html","title":"injectable - CategoriaIngredienteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriaIngredienteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/categoriaIngrediente.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listarCategorias\n                            \n                            \n                                    Public\n                                listarCategorias\n                            \n                            \n                                    Public\n                                listarCategorias\n                            \n                            \n                                    Public\n                                listarCategorias\n                            \n                            \n                                    Protected\n                                addToHttpParams\n                            \n                            \n                                    Protected\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Protected\n                                canConsumeForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration?: Configuration)\n                    \n                \n                        \n                            \n                                Defined in src/openapi/api/categoriaIngrediente.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listarCategorias\n                        \n                    \n                \n            \n            \n                \n                        \n                    listarCategorias(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/categoriaIngrediente.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listarCategorias\n                        \n                    \n                \n            \n            \n                \n                        \n                    listarCategorias(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/categoriaIngrediente.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listarCategorias\n                        \n                    \n                \n            \n            \n                \n                        \n                    listarCategorias(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/categoriaIngrediente.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listarCategorias\n                        \n                    \n                \n            \n            \n                \n                        \n                    listarCategorias(observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/categoriaIngrediente.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        canConsumeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    canConsumeForm(consumes: string[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Configuration\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec, HttpContext \n        }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\n// @ts-ignore\nimport { CategoriaIngredienteDto } from '../model/categoriaIngredienteDto';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { BaseService } from '../api.base.service';\nimport {\n    CategoriaIngredienteServiceInterface\n} from './categoriaIngrediente.serviceInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriaIngredienteService extends BaseService implements CategoriaIngredienteServiceInterface {\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string|string[], @Optional() configuration?: Configuration) {\n        super(basePath, configuration);\n    }\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listarCategorias(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable>;\n    public listarCategorias(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable>>;\n    public listarCategorias(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable>>;\n    public listarCategorias(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json', context?: HttpContext, transferCache?: boolean}): Observable {\n\n        let localVarHeaders = this.defaultHeaders;\n\n        const localVarHttpHeaderAcceptSelected: string | undefined = options?.httpHeaderAccept ?? this.configuration.selectHeaderAccept([\n            'application/json'\n        ]);\n        if (localVarHttpHeaderAcceptSelected !== undefined) {\n            localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n        }\n\n        const localVarHttpContext: HttpContext = options?.context ?? new HttpContext();\n\n        const localVarTransferCache: boolean = options?.transferCache ?? true;\n\n\n        let responseType_: 'text' | 'json' | 'blob' = 'json';\n        if (localVarHttpHeaderAcceptSelected) {\n            if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n                responseType_ = 'text';\n            } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n                responseType_ = 'json';\n            } else {\n                responseType_ = 'blob';\n            }\n        }\n\n        let localVarPath = `/categorias-ingredientes`;\n        return this.httpClient.request>('get', `${this.configuration.basePath}${localVarPath}`,\n            {\n                context: localVarHttpContext,\n                responseType: responseType_,\n                withCredentials: this.configuration.withCredentials,\n                headers: localVarHeaders,\n                observe: observe,\n                transferCache: localVarTransferCache,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoriaIngredienteServiceInterface.html":{"url":"interfaces/CategoriaIngredienteServiceInterface.html","title":"interface - CategoriaIngredienteServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoriaIngredienteServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/categoriaIngrediente.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listarCategorias\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listarCategorias\n                        \n                    \n                \n            \n            \n                \nlistarCategorias(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/categoriaIngrediente.serviceInterface.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { CategoriaIngredienteDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface CategoriaIngredienteServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     */\n    listarCategorias(extraHttpRequestParams?: any): Observable>;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Configuration.html":{"url":"classes/Configuration.html","title":"class - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/configuration.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessToken\n                            \n                            \n                                    Optional\n                                apiKeys\n                            \n                            \n                                    Optional\n                                basePath\n                            \n                            \n                                credentials\n                            \n                            \n                                encodeParam\n                            \n                            \n                                    Optional\n                                encoder\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCredentialToHeaders\n                            \n                            \n                                    Public\n                                addCredentialToQuery\n                            \n                            \n                                    Private\n                                defaultEncodeParam\n                            \n                            \n                                    Public\n                                isJsonMime\n                            \n                            \n                                    Public\n                                lookupCredential\n                            \n                            \n                                    Public\n                                selectHeaderAccept\n                            \n                            \n                                    Public\n                                selectHeaderContentType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationParameters: ConfigurationParameters)\n                    \n                \n                        \n                            \n                                Defined in src/openapi/configuration.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationParameters\n                                                  \n                                                        \n                                                                        ConfigurationParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     string | \n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:47\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        apiKeys\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:41\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:67\n                        \n                    \n\n            \n                \n                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:61\n                        \n                    \n\n            \n                \n                    Encoding of various path parameter\nstyles.\n\nSee README.md for more details\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:53\n                        \n                    \n\n            \n                \n                    Takes care of encoding query- and form-parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        withCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/openapi/configuration.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addCredentialToHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    addCredentialToHeaders(credentialKey: string, headerName: string, headers: HttpHeaders, prefix?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentialKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addCredentialToQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    addCredentialToQuery(credentialKey: string, paramName: string, query: HttpParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentialKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paramName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultEncodeParam\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultEncodeParam(param: Param)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            Param\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isJsonMime\n                        \n                    \n                \n            \n            \n                \n                        \n                    isJsonMime(mime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:139\n                        \n                    \n\n\n            \n                \n                        Check if the given MIME is a JSON MIME.\nJSON MIME examples:\n  application/json\n  application/json; charset=UTF8\n  APPLICATION/JSON\n  application/vnd.company+json\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMIME (Multipurpose Internet Mail Extensions)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the given MIME is JSON, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lookupCredential\n                        \n                    \n                \n            \n            \n                \n                        \n                    lookupCredential(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderAccept\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderAccept(accepts: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:117\n                        \n                    \n\n\n            \n                \n                        Select the correct accept content-type to use for a request.\nUses Configuration to determine the correct accept content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accepts\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderContentType\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderContentType(contentTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/configuration.ts:98\n                        \n                    \n\n\n            \n                \n                        Select the correct content-type to use for a request.\nUses Configuration to determine the correct content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contentTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpParams, HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Override the default method for encoding path parameters in various\n     * styles.\n     * \n     * See {@link README.md} for more details\n     * \n     */\n    encodeParam?: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class Configuration {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Encoding of various path parameter\n     * styles.\n     * \n     * See {@link README.md} for more details\n     * \n     */\n    encodeParam: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.encodeParam) {\n            this.encodeParam = configurationParameters.encodeParam;\n        }\n        else {\n            this.encodeParam = param => this.defaultEncodeParam(param);\n        }\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or undefined if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or undefined if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n\n    public addCredentialToHeaders(credentialKey: string, headerName: string, headers: HttpHeaders, prefix?: string): HttpHeaders {\n        const value = this.lookupCredential(credentialKey);\n        return value\n            ? headers.set(headerName, (prefix ?? '') + value)\n            : headers;\n    }\n\n    public addCredentialToQuery(credentialKey: string, paramName: string, query: HttpParams): HttpParams {\n        const value = this.lookupCredential(credentialKey);\n        return value\n            ? query.set(paramName, value)\n            : query;\n    }\n\n    private defaultEncodeParam(param: Param): string {\n        // This implementation exists as fallback for missing configuration\n        // and for backwards compatibility to older typescript-angular generator versions.\n        // It only works for the 'simple' parameter style.\n        // Date-handling only works for the 'date-time' format.\n        // All other styles and Date-formats are probably handled incorrectly.\n        //\n        // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n        const value = param.dataFormat === 'date-time' && param.value instanceof Date\n            ? (param.value as Date).toISOString()\n            : param.value;\n\n        return encodeURIComponent(String(value));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationParameters.html":{"url":"interfaces/ConfigurationParameters.html","title":"interface - ConfigurationParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/configuration.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiKeys\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            basePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            credentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encodeParam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encoder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        apiKeys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        basePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encodeParam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encodeParam:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Override the default method for encoding path parameters in various\nstyles.\n\nSee README.md for more details\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoder:         HttpParameterCodec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpParameterCodec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Takes care of encoding query- and form-parameters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders, HttpParams, HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Override the default method for encoding path parameters in various\n     * styles.\n     * \n     * See {@link README.md} for more details\n     * \n     */\n    encodeParam?: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class Configuration {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Encoding of various path parameter\n     * styles.\n     * \n     * See {@link README.md} for more details\n     * \n     */\n    encodeParam: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.encodeParam) {\n            this.encodeParam = configurationParameters.encodeParam;\n        }\n        else {\n            this.encodeParam = param => this.defaultEncodeParam(param);\n        }\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or undefined if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or undefined if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n\n    public addCredentialToHeaders(credentialKey: string, headerName: string, headers: HttpHeaders, prefix?: string): HttpHeaders {\n        const value = this.lookupCredential(credentialKey);\n        return value\n            ? headers.set(headerName, (prefix ?? '') + value)\n            : headers;\n    }\n\n    public addCredentialToQuery(credentialKey: string, paramName: string, query: HttpParams): HttpParams {\n        const value = this.lookupCredential(credentialKey);\n        return value\n            ? query.set(paramName, value)\n            : query;\n    }\n\n    private defaultEncodeParam(param: Param): string {\n        // This implementation exists as fallback for missing configuration\n        // and for backwards compatibility to older typescript-angular generator versions.\n        // It only works for the 'simple' parameter style.\n        // Date-handling only works for the 'date-time' format.\n        // All other styles and Date-formats are probably handled incorrectly.\n        //\n        // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n        const value = param.dataFormat === 'date-time' && param.value instanceof Date\n            ? (param.value as Date).toISOString()\n            : param.value;\n\n        return encodeURIComponent(String(value));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrearMenuComponent.html":{"url":"components/CrearMenuComponent.html","title":"component - CrearMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CrearMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/usuario/crear-menu/crear-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de gestionar la creación o edición de un menú semanal en la aplicación SúperLista.\nObtiene los parámetros de query desde la ruta:\n\nSi recibe categorias, inicializa la lista de categorías.\nSi recibe menuId, configura el modo edición cargando el menú correspondiente.\n\nExample :/superlista/crear-menu?categorias=DESAYUNO,COMIDA,CENA\n/superlista/crear-menu?menuId=123\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-crear-menu\n            \n\n\n\n            \n                styleUrls\n                ./crear-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./crear-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorias\n                            \n                            \n                                menuId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/usuario/crear-menu/crear-menu.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para acceder a los parámetros de la ruta.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/crear-menu/crear-menu.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente.\nObtiene los parámetros categorias y menuId desde la query de la ruta.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CategoriaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/crear-menu/crear-menu.component.ts:27\n                        \n                    \n\n            \n                \n                    Lista de categorías recibidas por parámetros para construir el menú.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/crear-menu/crear-menu.component.ts:29\n                        \n                    \n\n            \n                \n                    ID del menú si se está en modo edición, null si es creación.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AddRecetaDto, DiaComidaDto, MenuSemanalService, RecetaDto} from '../../../openapi';\nimport CategoriaEnum = AddRecetaDto.CategoriaEnum;\nimport {ActivatedRoute, Router} from '@angular/router';\n\n/**\n * @component\n * @name CrearMenuComponent\n * @description\n * Componente encargado de gestionar la creación o edición de un menú semanal en la aplicación SúperLista.\n * Obtiene los parámetros de query desde la ruta:\n * - Si recibe `categorias`, inicializa la lista de categorías.\n * - Si recibe `menuId`, configura el modo edición cargando el menú correspondiente.\n *\n * @example\n * /superlista/crear-menu?categorias=DESAYUNO,COMIDA,CENA\n * /superlista/crear-menu?menuId=123\n */\n@Component({\n  selector: 'app-crear-menu',\n  templateUrl: './crear-menu.component.html',\n  standalone: false,\n  styleUrls: ['./crear-menu.component.scss']\n})\nexport class CrearMenuComponent implements OnInit {\n  /** Lista de categorías recibidas por parámetros para construir el menú. */\n  categorias: CategoriaEnum[] = [];\n  /** ID del menú si se está en modo edición, null si es creación. */\n  menuId: number | null = null;\n\n  /**\n   * Constructor del componente.\n   * @param route Servicio para acceder a los parámetros de la ruta.\n   */\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * Hook de inicialización del componente.\n   * Obtiene los parámetros `categorias` y `menuId` desde la query de la ruta.\n   */\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe(params => {\n      const raw = params.get('categorias');\n      this.categorias = raw ? raw.split(',') as CategoriaEnum[] : [];\n\n      const id = params.get('menuId');\n      if (id) this.menuId = +id;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./crear-menu.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CrearMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomHttpParameterCodec.html":{"url":"classes/CustomHttpParameterCodec.html","title":"class - CustomHttpParameterCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomHttpParameterCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom HttpParameterCodec\nWorkaround for https://github.com/angular/angular/issues/18261\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/encoder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/encoder.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/encoder.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/encoder.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataRefreshService.html":{"url":"injectables/DataRefreshService.html","title":"injectable - DataRefreshService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataRefreshService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/DataRefreshService.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio singleton que permite emitir eventos globales de recarga para que otros componentes escuchen\ny actualicen sus datos tras cambios en el backend.\nUsa un Subject de RxJS para notificar a cualquier suscriptor interesado.\nExample :// En un componente:\nthis.dataRefreshService.refresh$.subscribe(() => this.cargarDatos());// Después de guardar:\nthis.dataRefreshService.notifyRefresh();\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refresh$\n                            \n                            \n                                    Private\n                                refreshSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyRefresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyRefresh\n                        \n                    \n                \n            \n            \n                \nnotifyRefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/DataRefreshService.ts:30\n                        \n                    \n\n\n            \n                \n                        Notifica a todos los suscriptores que deben refrescar sus datos.\nSe suele llamar tras guardar cambios en el backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refresh$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.refreshSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/DataRefreshService.ts:24\n                        \n                    \n\n            \n                \n                    Observable público al que los componentes pueden suscribirse para reaccionar a recargas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refreshSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/DataRefreshService.ts:22\n                        \n                    \n\n            \n                \n                    Subject privado que emite un evento cada vez que se quiere forzar recarga.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * @service\n * @name DataRefreshService\n * @description\n * Servicio singleton que permite emitir eventos globales de recarga para que otros componentes escuchen\n * y actualicen sus datos tras cambios en el backend.\n * Usa un Subject de RxJS para notificar a cualquier suscriptor interesado.\n *\n * @example\n * // En un componente:\n * this.dataRefreshService.refresh$.subscribe(() => this.cargarDatos());\n *\n * // Después de guardar:\n * this.dataRefreshService.notifyRefresh();\n */\n@Injectable({ providedIn: 'root' })\nexport class DataRefreshService {\n  /** Subject privado que emite un evento cada vez que se quiere forzar recarga. */\n  private refreshSubject = new Subject();\n  /** Observable público al que los componentes pueden suscribirse para reaccionar a recargas. */\n  refresh$ = this.refreshSubject.asObservable();\n\n  /**\n   * Notifica a todos los suscriptores que deben refrescar sus datos.\n   * Se suele llamar tras guardar cambios en el backend.\n   */\n  notifyRefresh() {\n    this.refreshSubject.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EliminarListaDto.html":{"url":"interfaces/EliminarListaDto.html","title":"interface - EliminarListaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EliminarListaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/eliminarListaDto.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            listaCompraId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listaCompraId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listaCompraId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EliminarListaDto { \n    listaCompraId: number;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyHorizontalWrapper.html":{"url":"components/FormlyHorizontalWrapper.html","title":"component - FormlyHorizontalWrapper","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormlyHorizontalWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/wrappers/formly-horizontal-wrapper/formly-horizontal-wrapper.component.ts\n\n\n\n    \n        Description\n    \n    \n        Wrapper personalizado de ngx-formly que muestra los campos de formulario en formato horizontal.\nDivide cada campo en dos columnas: una para la etiqueta (label) y otra para el input, usando el sistema grid de Bootstrap.\nAñade un asterisco opcional si el campo es requerido.\nExample :{\n  wrappers: ['horizontal'],\n  key: 'nombre',\n  type: 'input',\n  props: { label: 'Nombre', required: true }\n}\n    \n\n    \n        Extends\n    \n    \n                FieldWrapper\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                formly-horizontal-wrapper\n            \n\n\n            \n                imports\n                \n                            FormlyModule\n                            NgIf\n                \n            \n\n\n\n            \n                template\n                \n  \n    {{ props.label }}\n    *\n  \n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {FieldWrapper, FormlyModule} from '@ngx-formly/core';\nimport {NgIf} from '@angular/common';\n\n/**\n * @component\n * @name FormlyHorizontalWrapper\n * @description\n * Wrapper personalizado de ngx-formly que muestra los campos de formulario en formato horizontal.\n * Divide cada campo en dos columnas: una para la etiqueta (label) y otra para el input, usando el sistema grid de Bootstrap.\n * Añade un asterisco opcional si el campo es requerido.\n *\n * @example\n * {\n *   wrappers: ['horizontal'],\n *   key: 'nombre',\n *   type: 'input',\n *   props: { label: 'Nombre', required: true }\n * }\n */\n@Component({\n  selector: 'formly-horizontal-wrapper',\n  template: `\n    \n      \n        {{ props.label }}\n        *\n      \n      \n        \n      \n    \n  `,\n  imports: [\n    FormlyModule,\n    NgIf\n  ]\n})\nexport class FormlyHorizontalWrapper extends FieldWrapper {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ props.label }}    *          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormlyHorizontalWrapper'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenerarListaDto.html":{"url":"interfaces/GenerarListaDto.html","title":"interface - GenerarListaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GenerarListaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/generarListaDto.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            menuId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        menuId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GenerarListaDto { \n    menuId?: number;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente standalone que representa el encabezado principal de la aplicación SúperLista.\nGestiona la visualización y navegación entre las diferentes secciones: ingredientes, listas, recetas, menú y home.\nPermite al usuario visualizar y actualizar sus datos de perfil, así como cerrar sesión.\nUtiliza ngx-formly para construir dinámicamente el formulario de edición de perfil y muestra mensajes emergentes con SnackbarService.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                                ModalComponent\n                            FormlyModule\n                            NgIf\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                form\n                            \n                            \n                                    \n                                modalUsuario\n                            \n                            \n                                model\n                            \n                            \n                                mostrarCuenta\n                            \n                            \n                                options\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarDatos\n                            \n                            \n                                cargarUsuarioInicial\n                            \n                            \n                                goHome\n                            \n                            \n                                goIngredientes\n                            \n                            \n                                goListas\n                            \n                            \n                                goMenu\n                            \n                            \n                                goRecetas\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UsuariosService, snackBar: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/componentes/header/header.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento de Angular.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsuariosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para obtener y actualizar datos del usuario.\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio personalizado para mostrar notificaciones.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarDatos\n                        \n                    \n                \n            \n            \n                \nactualizarDatos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Envía los datos actualizados del usuario al backend.\nMuestra un mensaje de éxito o error y actualiza los datos locales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarUsuarioInicial\n                        \n                    \n                \n            \n            \n                \ncargarUsuarioInicial()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos del usuario logueado y los carga en el formulario reactivo.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goHome\n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Navega a la página principal (home).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goIngredientes\n                        \n                    \n                \n            \n            \n                \ngoIngredientes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navega a la vista de ingredientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goListas\n                        \n                    \n                \n            \n            \n                \ngoListas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Navega a la vista de listas de compra.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goMenu\n                        \n                    \n                \n            \n            \n                \ngoMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Navega a la vista del menú semanal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goRecetas\n                        \n                    \n                \n            \n            \n                \ngoRecetas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Navega a la vista de recetas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario, limpia el localStorage y redirige a la raíz.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/header/header.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente.\nCarga los datos iniciales del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre de usuario',\n        placeholder: 'Introduce el nombre de usuario',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre',\n        placeholder: 'Introduce el nombre',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Apellido',\n        placeholder: 'Introduce el apellido',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        placeholder: 'Introduce el email',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'passwordAntiguo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Contraseña',\n        placeholder: 'Introduce la contraseña antigua',\n        required: false\n      },\n    },\n    {\n      key: 'passwordNuevo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Nueva contraseña',\n        placeholder: 'Introduce una nueva contraseña',\n        required: false\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:95\n                        \n                    \n\n            \n                \n                    Definición de campos del formulario de edición del usuario usando ngx-formly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:165\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la edición del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalUsuario')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:51\n                        \n                    \n\n            \n                \n                    Referencia al modal usado para mostrar el formulario de edición del perfil.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:167\n                        \n                    \n\n            \n                \n                    Modelo que contiene los datos actuales del formulario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarCuenta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:53\n                        \n                    \n\n            \n                \n                    Controla la visualización del área de cuenta en el encabezado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:169\n                        \n                    \n\n            \n                \n                    Opciones del formulario (vacías por defecto).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UsuarioDto\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/header/header.component.ts:49\n                        \n                    \n\n            \n                \n                    Información del usuario actualmente logueado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormGroup, FormsModule} from '@angular/forms';\nimport {ModalComponent} from '../modal/modal.component';\nimport {NgClass, NgForOf, NgIf} from '@angular/common';\nimport {UsuarioDto, UsuariosService} from '../../../../openapi';\nimport {FormlyFieldConfig, FormlyModule} from '@ngx-formly/core';\nimport {SnackbarService} from '../../services/snack-bar.service';\n\n/**\n * @component\n * @name HeaderComponent\n * @description\n * Componente standalone que representa el encabezado principal de la aplicación SúperLista.\n * Gestiona la visualización y navegación entre las diferentes secciones: ingredientes, listas, recetas, menú y home.\n * Permite al usuario visualizar y actualizar sus datos de perfil, así como cerrar sesión.\n * Utiliza ngx-formly para construir dinámicamente el formulario de edición de perfil y muestra mensajes emergentes con SnackbarService.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  templateUrl: './header.component.html',\n  imports: [\n    FormsModule,\n    ModalComponent,\n    FormlyModule,\n    NgIf,\n    NgClass\n\n  ],\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent implements OnInit{\n\n  /**\n   * Constructor del componente.\n   * @param router Servicio de enrutamiento de Angular.\n   * @param userService Servicio para obtener y actualizar datos del usuario.\n   * @param snackBar Servicio personalizado para mostrar notificaciones.\n   */\n  constructor(private router:Router,\n              private userService: UsuariosService,\n              private snackBar: SnackbarService) {\n  }\n  /** Información del usuario actualmente logueado. */\n  usuario: UsuarioDto = {};\n  /** Referencia al modal usado para mostrar el formulario de edición del perfil. */\n  @ViewChild('modalUsuario') modalUsuario!: ModalComponent;\n  /** Controla la visualización del área de cuenta en el encabezado. */\n  mostrarCuenta = false;\n\n  /**\n   * Hook de inicialización del componente.\n   * Carga los datos iniciales del usuario.\n   */\n  ngOnInit(): void {\n    this.cargarUsuarioInicial();\n  }\n  /**\n   * Obtiene los datos del usuario logueado y los carga en el formulario reactivo.\n   */\n  cargarUsuarioInicial(){\n    this.userService.obtenerUsuarioPorEmail().subscribe({\n      next: data => {\n        this.usuario = data.data!;\n        this.model = data.data!;\n        this.form.patchValue(this.model);\n      }\n    })\n  }\n  /** Navega a la vista de ingredientes. */\n  goIngredientes() {\n    this.router.navigate(['superlista/ingredientes']);\n  }\n  /** Navega a la vista de listas de compra. */\n  goListas() {\n    this.router.navigate(['superlista/mis-listas']);\n  }\n  /** Navega a la vista de recetas. */\n  goRecetas() {\n    this.router.navigate(['superlista/recetas']);\n  }\n  /** Navega a la vista del menú semanal. */\n  goMenu() {\n    this.router.navigate(['superlista/menu']);\n  }\n  /** Navega a la página principal (home). */\n  goHome() {\n    this.router.navigate(['superlista/home']);\n  }\n  /** Definición de campos del formulario de edición del usuario usando ngx-formly. */\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre de usuario',\n        placeholder: 'Introduce el nombre de usuario',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre',\n        placeholder: 'Introduce el nombre',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Apellido',\n        placeholder: 'Introduce el apellido',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        placeholder: 'Introduce el email',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'passwordAntiguo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Contraseña',\n        placeholder: 'Introduce la contraseña antigua',\n        required: false\n      },\n    },\n    {\n      key: 'passwordNuevo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Nueva contraseña',\n        placeholder: 'Introduce una nueva contraseña',\n        required: false\n      },\n    },\n  ];\n  /** Formulario reactivo para la edición del usuario. */\n  form = new FormGroup({});\n  /** Modelo que contiene los datos actuales del formulario. */\n  model: any = {};\n  /** Opciones del formulario (vacías por defecto). */\n  options: any = {};\n  /**\n   * Cierra la sesión del usuario, limpia el localStorage y redirige a la raíz.\n   */\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n\n  /**\n   * Envía los datos actualizados del usuario al backend.\n   * Muestra un mensaje de éxito o error y actualiza los datos locales.\n   */\n  actualizarDatos() {\n    this.userService.actualizarUsuario(this.model).subscribe({\n      next: response => {\n        if (response.data == true) {\n          this.cargarUsuarioInicial();\n          this.snackBar.success(\"Usuario actualizado con éxito\");\n          this.modalUsuario.close();\n        }\n      },\n      error: error => {\n        this.cargarUsuarioInicial();\n        this.snackBar.error(\"Hubo un error al actualizar los datos\");\n        this.modalUsuario.close();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n  \n      🏠 Home\n      🥕 Ingredientes\n      📖 Recetas\n      🛒 Listas\n      🗓️ Menús\n    \n\n    \n    \n      \n\n        \n\n        \n          {{ usuario?.nombre || '' }} {{ usuario?.apellido || '' }}\n          {{ usuario?.email || '' }}\n          \n            Datos\n            Salir\n          \n        \n      \n    \n\n\n\n  \n    \n  \n  Guardar\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          🏠 Home      🥕 Ingredientes      📖 Recetas      🛒 Listas      🗓️ Menús                                            {{ usuario?.nombre || \\'\\' }} {{ usuario?.apellido || \\'\\' }}          {{ usuario?.email || \\'\\' }}                      Datos            Salir                                      Guardar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/usuario/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal del área privada de la aplicación SúperLista.\nMuestra al usuario las estadísticas generales (ingredientes, recetas, listas, menús)\ny permite acceder a las diferentes secciones, así como editar los datos personales desde un modal.\nFuncionalidades principales:\n\nCargar información básica del usuario autenticado.\nMostrar conteo total de ingredientes, recetas, listas de la compra y menús.\nPermitir navegación hacia las secciones principales.\nMostrar y actualizar los datos del usuario (nombre, email, contraseña).\n\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                form\n                            \n                            \n                                    \n                                modalUsuario\n                            \n                            \n                                model\n                            \n                            \n                                mostrarCuenta\n                            \n                            \n                                numIngredientes\n                            \n                            \n                                numListas\n                            \n                            \n                                numMenus\n                            \n                            \n                                numRecetas\n                            \n                            \n                                options\n                            \n                            \n                                usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarDatos\n                            \n                            \n                                cargarEstadisticas\n                            \n                            \n                                cargarUsuarioInicial\n                            \n                            \n                                goIngredientes\n                            \n                            \n                                goListas\n                            \n                            \n                                goMenu\n                            \n                            \n                                goRecetas\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModalCuenta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, usuariosService: UsuariosService, ingredientesService: IngredienteService, recetasService: RecetaService, listasService: ListaCompraResourceService, menuService: MenuSemanalService, userService: UsuariosService, snackBar: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/usuario/home/home.component.ts:52\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento.\n\n                                                        \n                                                \n                                                \n                                                        usuariosService\n                                                  \n                                                        \n                                                                        UsuariosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios.\n\n                                                        \n                                                \n                                                \n                                                        ingredientesService\n                                                  \n                                                        \n                                                                        IngredienteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de ingredientes.\n\n                                                        \n                                                \n                                                \n                                                        recetasService\n                                                  \n                                                        \n                                                                        RecetaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de recetas.\n\n                                                        \n                                                \n                                                \n                                                        listasService\n                                                  \n                                                        \n                                                                        ListaCompraResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de listas de compra.\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuSemanalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de menús semanales.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsuariosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de usuarios (duplicado, podría unificarse).\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para mostrar mensajes flotantes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarDatos\n                        \n                    \n                \n            \n            \n                \nactualizarDatos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:240\n                        \n                    \n\n\n            \n                \n                        Guarda los cambios en los datos del usuario.\nSi tiene éxito, recarga la información; si falla, muestra un error.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarEstadisticas\n                        \n                    \n                \n            \n            \n                \ncargarEstadisticas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Llama a los servicios correspondientes para obtener las estadísticas generales\ndel número de ingredientes, recetas, listas de compra y menús.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarUsuarioInicial\n                        \n                    \n                \n            \n            \n                \ncargarUsuarioInicial()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos básicos del usuario autenticado.\nTras cargar los datos, llama a las funciones para cargar las estadísticas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goIngredientes\n                        \n                    \n                \n            \n            \n                \ngoIngredientes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Navega a la sección de ingredientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goListas\n                        \n                    \n                \n            \n            \n                \ngoListas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Navega a la sección de listas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goMenu\n                        \n                    \n                \n            \n            \n                \ngoMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Navega a la sección de menús.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goRecetas\n                        \n                    \n                \n            \n            \n                \ngoRecetas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Navega a la sección de recetas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:232\n                        \n                    \n\n\n            \n                \n                        Cierra sesión y redirige a la página pública.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente.\nCarga los datos iniciales del usuario y las estadísticas generales.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalCuenta\n                        \n                    \n                \n            \n            \n                \nopenModalCuenta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/home/home.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Abre el modal para editar los datos del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre de usuario',\n        placeholder: 'Introduce el nombre de usuario',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre',\n        placeholder: 'Introduce el nombre',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Apellido',\n        placeholder: 'Introduce el apellido',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        placeholder: 'Introduce el email',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'passwordAntiguo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Contraseña',\n        placeholder: 'Introduce la contraseña antigua',\n        required: false\n      },\n    },\n    {\n      key: 'passwordNuevo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Nueva contraseña',\n        placeholder: 'Introduce una nueva contraseña',\n        required: false\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:151\n                        \n                    \n\n            \n                \n                    Definición de los campos del formulario de edición de cuenta,\nusando la librería ngx-formly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:140\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la edición de datos del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalUsuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalUsuario')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:137\n                        \n                    \n\n            \n                \n                    Referencia al modal de edición de usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:142\n                        \n                    \n\n            \n                \n                    Modelo de datos vinculado al formulario de edición.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarCuenta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:52\n                        \n                    \n\n            \n                \n                    Controla si se muestra el bloque de cuenta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numIngredientes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:44\n                        \n                    \n\n            \n                \n                    Contador de ingredientes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numListas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Contador de listas de la compra.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:50\n                        \n                    \n\n            \n                \n                    Contador de menus.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numRecetas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:46\n                        \n                    \n\n            \n                \n                    Contador de recetas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:144\n                        \n                    \n\n            \n                \n                    Opciones generales del formulario (usadas por Formly).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UsuarioDto\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/home/home.component.ts:41\n                        \n                    \n\n            \n                \n                    Datos del usuario autenticado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {\n  IngredienteService,\n  ListaCompraResourceService, MenuSemanalService,\n  RecetaService,\n  UsuarioDto,\n  UsuariosService\n} from '../../../openapi';\nimport {ModalComponent} from '../../core/componentes/modal/modal.component';\nimport {FormGroup} from '@angular/forms';\nimport {FormlyFieldConfig} from '@ngx-formly/core';\nimport {SnackbarService} from '../../core/services/snack-bar.service';\n\n/**\n * @component\n * @name HomeComponent\n * @description\n * Componente principal del área privada de la aplicación SúperLista.\n * Muestra al usuario las estadísticas generales (ingredientes, recetas, listas, menús)\n * y permite acceder a las diferentes secciones, así como editar los datos personales desde un modal.\n *\n * Funcionalidades principales:\n * - Cargar información básica del usuario autenticado.\n * - Mostrar conteo total de ingredientes, recetas, listas de la compra y menús.\n * - Permitir navegación hacia las secciones principales.\n * - Mostrar y actualizar los datos del usuario (nombre, email, contraseña).\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-home',\n  standalone: false,\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit {\n\n  /** Datos del usuario autenticado. */\n  usuario: UsuarioDto = {};\n\n  /** Contador de ingredientes. */\n  numIngredientes = 0;\n  /** Contador de recetas. */\n  numRecetas = 0;\n  /** Contador de listas de la compra. */\n  numListas = 0;\n  /** Contador de menus. */\n  numMenus = 0;\n  /** Controla si se muestra el bloque de cuenta. */\n  mostrarCuenta = false;\n\n  /**\n   * Constructor del componente.\n   * @param router Servicio de enrutamiento.\n   * @param usuariosService Servicio de usuarios.\n   * @param ingredientesService Servicio de ingredientes.\n   * @param recetasService Servicio de recetas.\n   * @param listasService Servicio de listas de compra.\n   * @param menuService Servicio de menús semanales.\n   * @param userService Servicio de usuarios (duplicado, podría unificarse).\n   * @param snackBar Servicio para mostrar mensajes flotantes.\n   */\n  constructor(\n    private router: Router,\n    private usuariosService: UsuariosService,\n    private ingredientesService: IngredienteService,\n    private recetasService: RecetaService,\n    private listasService: ListaCompraResourceService,\n    private menuService: MenuSemanalService,\n    private userService: UsuariosService,\n    private snackBar: SnackbarService\n  ) {}\n\n  /**\n   * Hook de inicialización del componente.\n   * Carga los datos iniciales del usuario y las estadísticas generales.\n   */\n  ngOnInit(): void {\n    this.cargarUsuarioInicial()\n  }\n\n  /**\n   * Obtiene los datos básicos del usuario autenticado.\n   * Tras cargar los datos, llama a las funciones para cargar las estadísticas.\n   */\n  cargarUsuarioInicial(){\n    this.usuariosService.obtenerUsuarioPorEmail().subscribe({\n      next: (res) => {\n        this.usuario = res.data!;\n        this.cargarEstadisticas();\n      }\n    });\n  }\n\n  /**\n   * Llama a los servicios correspondientes para obtener las estadísticas generales\n   * del número de ingredientes, recetas, listas de compra y menús.\n   */\n  cargarEstadisticas(): void {\n    this.ingredientesService.obtenerTodosIngredientes().subscribe({\n      next: res => this.numIngredientes = res.data!.length\n    });\n    this.recetasService.buscarTodasRecetas().subscribe({\n      next: res => this.numRecetas = res.data!.length\n    });\n    this.listasService.obtenerMisListas().subscribe({\n      next: res => this.numListas = res.data!.length\n    });\n    this.menuService.obtenerMisMenus().subscribe({\n      next: res => this.numMenus = res.data!.length\n    });\n  }\n\n  /** Navega a la sección de ingredientes. */\n  goIngredientes() {\n    this.router.navigate(['superlista/ingredientes']);\n  }\n\n  /** Navega a la sección de listas. */\n  goListas() {\n    this.router.navigate(['superlista/mis-listas']);\n  }\n\n  /** Navega a la sección de recetas. */\n  goRecetas() {\n    this.router.navigate(['superlista/recetas']);\n  }\n\n  /** Navega a la sección de menús. */\n  goMenu() {\n    this.router.navigate(['superlista/menu']);\n  }\n\n  /** Referencia al modal de edición de usuario. */\n  @ViewChild('modalUsuario') modalUsuario!: ModalComponent;\n\n  /** Formulario reactivo para la edición de datos del usuario. */\n  form = new FormGroup({});\n  /** Modelo de datos vinculado al formulario de edición. */\n  model: any = {};\n  /** Opciones generales del formulario (usadas por Formly). */\n  options: any = {};\n\n\n  /**\n   * Definición de los campos del formulario de edición de cuenta,\n   * usando la librería ngx-formly.\n   */\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre de usuario',\n        placeholder: 'Introduce el nombre de usuario',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Nombre',\n        placeholder: 'Introduce el nombre',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Apellido',\n        placeholder: 'Introduce el apellido',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        placeholder: 'Introduce el email',\n        required: true,\n        hideRequiredMarker: true,\n      },\n    },\n    {\n      key: 'passwordAntiguo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Contraseña',\n        placeholder: 'Introduce la contraseña antigua',\n        required: false\n      },\n    },\n    {\n      key: 'passwordNuevo',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'password',\n        label: 'Nueva contraseña',\n        placeholder: 'Introduce una nueva contraseña',\n        required: false\n      },\n    },\n  ];\n\n  /**\n   * Abre el modal para editar los datos del usuario.\n   */\n  openModalCuenta(): void {\n    this.model = { ...this.usuario };  // Copia los datos para edición\n    this.form.reset();  // Limpia validaciones anteriores\n    this.modalUsuario.open();\n  }\n  /**\n   * Cierra sesión y redirige a la página pública.\n   */\n  logout(): void {\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n  /**\n   * Guarda los cambios en los datos del usuario.\n   * Si tiene éxito, recarga la información; si falla, muestra un error.\n   */\n  actualizarDatos() {\n    this.userService.actualizarUsuario(this.model).subscribe({\n      next: response => {\n        if (response.data == true) {\n          this.cargarUsuarioInicial();\n          this.snackBar.success(\"Usuario actualizado con éxito\");\n          this.modalUsuario.close();\n        }\n      },\n      error: error => {\n        this.cargarUsuarioInicial();\n        this.snackBar.error(\"Hubo un error al actualizar los datos\");\n        this.modalUsuario.close();\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n\n      \n\n      \n        {{ usuario.nombre }} {{ usuario.apellido }}\n        {{ usuario.email }}\n        \n          Datos\n          Salir\n        \n      \n    \n  \n\n\n  \n  \n    ¡Bienvenido, {{ usuario.nombre || 'usuario' }}! 👋\n    Tu centro de organización de comidas y compras\n  \n\n  \n  \n    \n      \n        {{ numIngredientes }}\n      \n      Ingredientes guardados\n    \n    \n      \n        {{ numRecetas }}\n      \n      Recetas creadas\n    \n    \n      \n        {{ numListas }}\n      \n      Listas de la compra\n    \n    \n      \n        {{ numMenus }}\n      \n      Menús semanales\n    \n  \n\n  \n  \n    \n      \n        🥕\n        Ingredientes\n        Agrega o edita tus ingredientes favoritos.\n      \n    \n    \n      \n        📖\n        Recetas\n        Crea, edita o consulta tus recetas personales.\n      \n    \n    \n      \n        🛒\n        Listas\n        Organiza y comparte tus compras.\n      \n    \n    \n      \n        🗓️\n        Menús\n        Diseña tu semana de comidas fácilmente.\n      \n    \n  \n\n  \n  \n    🧠 Consejo de la semana: planifica tu menú antes de hacer la lista de la compra para evitar desperdicios.\n  \n\n\n\n  \n    \n  \n  Guardar\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ usuario.nombre }} {{ usuario.apellido }}        {{ usuario.email }}                  Datos          Salir                            ¡Bienvenido, {{ usuario.nombre || \\'usuario\\' }}! 👋    Tu centro de organización de comidas y compras                        {{ numIngredientes }}            Ingredientes guardados                      {{ numRecetas }}            Recetas creadas                      {{ numListas }}            Listas de la compra                      {{ numMenus }}            Menús semanales                            🥕        Ingredientes        Agrega o edita tus ingredientes favoritos.                            📖        Recetas        Crea, edita o consulta tus recetas personales.                            🛒        Listas        Organiza y comparte tus compras.                            🗓️        Menús        Diseña tu semana de comidas fácilmente.                    🧠 Consejo de la semana: planifica tu menú antes de hacer la lista de la compra para evitar desperdicios.            Guardar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePublicoComponent.html":{"url":"components/HomePublicoComponent.html","title":"component - HomePublicoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePublicoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-publico/home-publico.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que representa la página de inicio pública (sin autenticación) de la aplicación SúperLista.\nSi detecta un token activo en localStorage, redirige automáticamente al área privada (/superlista/home).\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-publico\n            \n\n\n\n            \n                styleUrls\n                ./home-publico.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home-publico.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-publico/home-publico.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento para redirigir al área privada.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home-publico/home-publico.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización.\nSi existe un token en localStorage, redirige al home privado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * @component\n * @name HomePublicoComponent\n * @description\n * Componente que representa la página de inicio pública (sin autenticación) de la aplicación SúperLista.\n * Si detecta un token activo en localStorage, redirige automáticamente al área privada (/superlista/home).\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-home-publico',\n  standalone: false,\n  templateUrl: './home-publico.component.html',\n  styleUrls: ['./home-publico.component.scss']\n})\nexport class HomePublicoComponent implements OnInit {\n\n  /**\n   * Constructor del componente.\n   * @param router Servicio de enrutamiento para redirigir al área privada.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Hook de inicialización.\n   * Si existe un token en localStorage, redirige al home privado.\n   */\n  ngOnInit(): void {\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.router.navigate(['/superlista/home']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    🥗 SúperLista\n    \n      Organiza tus comidas, guarda recetas y genera listas de compra inteligentes.\n    \n\n    \n      \n         Iniciar sesión\n      \n    \n\n    \n      ¿No tienes cuenta?\n      Regístrate aquí\n    \n\n    \n      \n        \n          🍅 Ingredientes\n          \n            Guarda todos tus productos y no vuelvas a olvidarlos en la tienda.\n          \n        \n      \n      \n        \n          📋 Listas de compra\n          \n            Genera listas automáticas a partir de tus menús.\n          \n        \n      \n      \n        \n          🗓️ Menús\n          \n            Planifica tu semana fácilmente y sin estrés.\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home-publico.component.scss\n                \n                .pastel-bg {\n  background: linear-gradient(135deg, #fefae0, #ede7ff);\n}\n\n.pastel-title {\n  color: #7a5eb5;\n}\n\n.btn-pastel {\n  background-color: #ede7ff;\n  color: #333;\n  border-radius: 12px;\n  padding: 0.6rem 1.4rem;\n  transition: transform 0.2s ease, background-color 0.2s ease;\n}\n\n.btn-pastel:hover {\n  transform: scale(1.05);\n  background-color: #e0d4ff;\n}\n\n.pastel-card {\n  border: 2px solid #cfcfff;\n  background: #fdfdff;\n  border-radius: 1rem;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.pastel-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 6px 16px rgba(160, 160, 255, 0.2);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      🥗 SúperLista          Organiza tus comidas, guarda recetas y genera listas de compra inteligentes.                       Iniciar sesión                    ¿No tienes cuenta?      Regístrate aquí                                🍅 Ingredientes                      Guarda todos tus productos y no vuelvas a olvidarlos en la tienda.                                                📋 Listas de compra                      Genera listas automáticas a partir de tus menús.                                                🗓️ Menús                      Planifica tu semana fácilmente y sin estrés.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePublicoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredienteServiceInterface.html":{"url":"interfaces/IngredienteServiceInterface.html","title":"interface - IngredienteServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredienteServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/ingrediente.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizarIngrediente\n                                    \n                                \n                                \n                                    \n                                        altaIngrediente\n                                    \n                                \n                                \n                                    \n                                        eliminarIngrediente\n                                    \n                                \n                                \n                                    \n                                        obtenerIngredientePorCategoria\n                                    \n                                \n                                \n                                    \n                                        obtenerTodosIngredientes\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarIngrediente\n                        \n                    \n                \n            \n            \n                \nactualizarIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/ingrediente.serviceInterface.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ingredienteDto\n                                            \n                                                        IngredienteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        altaIngrediente\n                        \n                    \n                \n            \n            \n                \naltaIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/ingrediente.serviceInterface.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ingredienteDto\n                                            \n                                                        IngredienteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarIngrediente\n                        \n                    \n                \n            \n            \n                \neliminarIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/ingrediente.serviceInterface.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ingredienteDto\n                                            \n                                                        IngredienteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerIngredientePorCategoria\n                        \n                    \n                \n            \n            \n                \nobtenerIngredientePorCategoria(categoria: string, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/ingrediente.serviceInterface.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerTodosIngredientes\n                        \n                    \n                \n            \n            \n                \nobtenerTodosIngredientes(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/ingrediente.serviceInterface.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ApiRespuestaBoolean } from '../model/models';\nimport { ApiRespuestaListIngredienteDto } from '../model/models';\nimport { IngredienteDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface IngredienteServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param ingredienteDto \n     */\n    actualizarIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param ingredienteDto \n     */\n    altaIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param ingredienteDto \n     */\n    eliminarIngrediente(ingredienteDto: IngredienteDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param categoria \n     */\n    obtenerIngredientePorCategoria(categoria: string, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     */\n    obtenerTodosIngredientes(extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListaCompraDto.html":{"url":"interfaces/ListaCompraDto.html","title":"interface - ListaCompraDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListaCompraDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/listaCompraDto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            usuarioId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usuarioId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usuarioId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngredienteSimpleDto } from './ingredienteSimpleDto';\n\n\nexport interface ListaCompraDto { \n    id?: number;\n    usuarioId?: number;\n    items?: Array;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListaCompraResourceServiceInterface.html":{"url":"interfaces/ListaCompraResourceServiceInterface.html","title":"interface - ListaCompraResourceServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListaCompraResourceServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/listaCompraResource.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        anadirItems\n                                    \n                                \n                                \n                                    \n                                        eliminarLista\n                                    \n                                \n                                \n                                    \n                                        generarLista\n                                    \n                                \n                                \n                                    \n                                        obtenerMisListas\n                                    \n                                \n                                \n                                    \n                                        quitarItems\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        anadirItems\n                        \n                    \n                \n            \n            \n                \nanadirItems(modificarItemsDto: ModificarItemsDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/listaCompraResource.serviceInterface.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modificarItemsDto\n                                            \n                                                            ModificarItemsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarLista\n                        \n                    \n                \n            \n            \n                \neliminarLista(eliminarListaDto: EliminarListaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/listaCompraResource.serviceInterface.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eliminarListaDto\n                                            \n                                                            EliminarListaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarLista\n                        \n                    \n                \n            \n            \n                \ngenerarLista(generarListaDto: GenerarListaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/listaCompraResource.serviceInterface.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                generarListaDto\n                                            \n                                                            GenerarListaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerMisListas\n                        \n                    \n                \n            \n            \n                \nobtenerMisListas(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/listaCompraResource.serviceInterface.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarItems\n                        \n                    \n                \n            \n            \n                \nquitarItems(modificarItemsDto: ModificarItemsDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/listaCompraResource.serviceInterface.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modificarItemsDto\n                                            \n                                                            ModificarItemsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ApiRespuestaListListaCompraDto } from '../model/models';\nimport { ApiRespuestaListaCompraDto } from '../model/models';\nimport { ApiRespuestaVoid } from '../model/models';\nimport { EliminarListaDto } from '../model/models';\nimport { GenerarListaDto } from '../model/models';\nimport { ModificarItemsDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface ListaCompraResourceServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param modificarItemsDto \n     */\n    anadirItems(modificarItemsDto: ModificarItemsDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param eliminarListaDto \n     */\n    eliminarLista(eliminarListaDto: EliminarListaDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param generarListaDto \n     */\n    generarLista(generarListaDto: GenerarListaDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     */\n    obtenerMisListas(extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param modificarItemsDto \n     */\n    quitarItems(modificarItemsDto: ModificarItemsDto, extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListadoIngredientesComponent.html":{"url":"components/ListadoIngredientesComponent.html","title":"component - ListadoIngredientesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListadoIngredientesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-listado-ingredientes\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                            CommonModule\n                                ModalComponent\n                            FormlyModule\n                            DragDropModule\n                \n            \n\n            \n                styleUrls\n                ./listado-ingredientes.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./listado-ingredientes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buscarFields\n                            \n                            \n                                buscarForm\n                            \n                            \n                                buscarModel\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                ingredientes\n                            \n                            \n                                ingredienteSeleccionado\n                            \n                            \n                                ingredientesOriginales\n                            \n                            \n                                    \n                                modalNuevoIngrediente\n                            \n                            \n                                    \n                                modalReceta\n                            \n                            \n                                nuevoIngredienteFields\n                            \n                            \n                                nuevoIngredienteForm\n                            \n                            \n                                nuevoIngredienteModel\n                            \n                            \n                                recetasSeleccionadas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aplicarFiltro\n                            \n                            \n                                getCardClasses\n                            \n                            \n                                guardarNuevoIngrediente\n                            \n                            \n                                    Private\n                                loadIngredientes\n                            \n                            \n                                modalRecetas\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                snackbarnok\n                            \n                            \n                                snackbarok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredienteService: IngredienteService, categoriaService: CategoriaIngredienteService, snackBarService: MatSnackBar, refresh: DataRefreshService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingredienteService\n                                                  \n                                                        \n                                                                        IngredienteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriaService\n                                                  \n                                                        \n                                                                        CategoriaIngredienteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBarService\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refresh\n                                                  \n                                                        \n                                                                        DataRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        aplicarFiltro\n                        \n                    \n                \n            \n            \n                \naplicarFiltro(m: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                m\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardClasses\n                        \n                    \n                \n            \n            \n                \ngetCardClasses(c: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                c\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardarNuevoIngrediente\n                        \n                    \n                \n            \n            \n                \nguardarNuevoIngrediente()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadIngredientes\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadIngredientes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalRecetas\n                        \n                    \n                \n            \n            \n                \nmodalRecetas(ing: IngredienteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ing\n                                            \n                                                        IngredienteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackbarnok\n                        \n                    \n                \n            \n            \n                \nsnackbarnok(msg: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snackbarok\n                        \n                    \n                \n            \n            \n                \nsnackbarok(msg: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buscarFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'categoria',\n      type: 'select',\n      props: {\n        placeholder: 'Todas',\n        options: []\n      },\n      hooks: {\n        onInit: field => {\n          this.categoriaService.listarCategorias().subscribe({\n            next: res => {\n              field.props!.options = res.map(item => ({\n                label: item.descripcion,\n                value: item.nombre\n              }));\n            }\n          });\n        }\n      }\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buscarForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buscarModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IngredienteDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredienteSeleccionado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientesOriginales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IngredienteDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalNuevoIngrediente\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('NuevoIngredienteModal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalReceta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('RecetasConIngredientesModal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevoIngredienteFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'nombre',\n      type: 'input',\n      props: {\n        type: 'text',\n        label: 'Nombre',\n        required: true,\n        placeholder: 'Nombre del ingrediente'\n      }\n    },\n    {\n      key: 'categoria',\n      type: 'select',\n      props: {\n        label: 'Categoría',\n        required: true,\n        options: []\n      },\n      hooks: {\n        onInit: field => {\n          this.categoriaService.listarCategorias().subscribe({\n            next: res => {\n              field.props!.options = res.map(item => ({\n                label: item.descripcion,\n                value: item.id\n              }));\n            }\n          });\n        }\n      }\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevoIngredienteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nuevoIngredienteModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recetasSeleccionadas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecetaDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  CategoriaIngredienteService,\n  IngredienteDto,\n  IngredienteService,\n  RecetaDto\n} from '../../../../openapi';\nimport { NgClass, CommonModule } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { DataRefreshService } from '../../services/DataRefreshService';\nimport { Subject, takeUntil } from 'rxjs';\nimport {ModalComponent} from '../modal/modal.component';\n\n@Component({\n  selector: 'app-listado-ingredientes',\n  templateUrl: './listado-ingredientes.component.html',\n  styleUrls: ['./listado-ingredientes.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    CommonModule,\n    ModalComponent,\n    FormlyModule,\n    DragDropModule\n  ]\n})\nexport class ListadoIngredientesComponent implements OnInit, OnDestroy {\n  ingredientes: IngredienteDto[] = [];\n  ingredientesOriginales: IngredienteDto[] = [];\n  private destroy$ = new Subject();\n\n  @ViewChild('RecetasConIngredientesModal') modalReceta!: ModalComponent;\n  ingredienteSeleccionado!: string;\n  recetasSeleccionadas: RecetaDto[] = [];\n\n  @ViewChild('NuevoIngredienteModal') modalNuevoIngrediente!: ModalComponent;\n  nuevoIngredienteForm = new FormGroup({});\n  nuevoIngredienteModel: any = {};\n  nuevoIngredienteFields: FormlyFieldConfig[] = [\n    {\n      key: 'nombre',\n      type: 'input',\n      props: {\n        type: 'text',\n        label: 'Nombre',\n        required: true,\n        placeholder: 'Nombre del ingrediente'\n      }\n    },\n    {\n      key: 'categoria',\n      type: 'select',\n      props: {\n        label: 'Categoría',\n        required: true,\n        options: []\n      },\n      hooks: {\n        onInit: field => {\n          this.categoriaService.listarCategorias().subscribe({\n            next: res => {\n              field.props!.options = res.map(item => ({\n                label: item.descripcion,\n                value: item.id\n              }));\n            }\n          });\n        }\n      }\n    }\n  ];\n\n  buscarForm = new FormGroup({});\n  buscarModel: any = {};\n  buscarFields: FormlyFieldConfig[] = [\n    {\n      key: 'categoria',\n      type: 'select',\n      props: {\n        placeholder: 'Todas',\n        options: []\n      },\n      hooks: {\n        onInit: field => {\n          this.categoriaService.listarCategorias().subscribe({\n            next: res => {\n              field.props!.options = res.map(item => ({\n                label: item.descripcion,\n                value: item.nombre\n              }));\n            }\n          });\n        }\n      }\n    }\n  ];\n\n  constructor(\n    private ingredienteService: IngredienteService,\n    private categoriaService: CategoriaIngredienteService,\n    private snackBarService: MatSnackBar,\n    private refresh: DataRefreshService\n  ) {}\n\n  ngOnInit(): void {\n    this.refresh.refresh$.pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.loadIngredientes());\n    this.loadIngredientes();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadIngredientes() {\n    this.ingredienteService.obtenerTodosIngredientes().subscribe({\n      next: res => {\n        this.ingredientesOriginales = res.data || [];\n        this.ingredientes = [...this.ingredientesOriginales];\n      },\n      error: () => this.snackbarok('Error cargando ingredientes')\n    });\n  }\n\n  getCardClasses(c: string): string[] {\n    // tu lógica de clases...\n    return ['border-0','bg-light'];\n  }\n\n  modalRecetas(ing: IngredienteDto) {\n    this.ingredienteSeleccionado = ing.nombre!;\n    this.recetasSeleccionadas = ing.recetas || [];\n    this.modalReceta.open();\n  }\n\n  guardarNuevoIngrediente() {\n    this.ingredienteService.altaIngrediente(this.nuevoIngredienteModel).subscribe({\n      next: () => {\n        this.loadIngredientes();\n        this.snackbarok('Ingrediente creado');\n        this.modalNuevoIngrediente.close();\n      },\n      error: () => {\n        this.snackbarnok('Error al crear ingrediente');\n        this.modalNuevoIngrediente.close();\n      }\n    });\n  }\n\n  aplicarFiltro(m: { categoria?: IngredienteDto.CategoriaEnum }) {\n    this.ingredientes = m.categoria\n      ? this.ingredientesOriginales.filter(i => i.categoria === m.categoria)\n      : [...this.ingredientesOriginales];\n  }\n\n  snackbarok(msg: string) { this.snackBarService.open(msg,'',{ panelClass:['snackbar-success']}); }\n  snackbarnok(msg: string) { this.snackBarService.open(msg,'',{ panelClass:['snackbar-error']}); }\n}\n\n    \n\n    \n        \n  \n    Ingredientes\n    \n      \n        \n        \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n          {{ ing.nombre }}\n          \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{ r.nombre }}\n        \n      \n    \n  \n  \n    No hay recetas con este ingrediente\n  \n\n\n\n  \n  Guardar\n\n\n    \n\n    \n                \n                    ./listado-ingredientes.component.scss\n                \n                .no-scrollbar {\n  overflow-y: auto;\n\n  /* Firefox */\n  scrollbar-width: none;\n  /* IE 10+ */\n  -ms-overflow-style: none;\n}\n\n.no-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari y Opera */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Ingredientes                                                                                        {{ ing.nombre }}                                                                                  {{ r.nombre }}                          No hay recetas con este ingrediente      Guardar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListadoIngredientesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de gestionar el formulario de inicio de sesión.\nPermite al usuario introducir sus credenciales (usuario y contraseña) para autenticarse en la aplicación.\nUtiliza ngx-formly para generar dinámicamente los campos del formulario y muestra mensajes de error mediante el servicio Snackbar.\nSi la autenticación es exitosa, redirige al usuario al área privada.\nAdemás, permite navegar a la página de registro o volver a la página anterior.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                form\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirRegistro\n                            \n                            \n                                submit\n                            \n                            \n                                volverAtras\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthControllerService, location: Location, snackbar: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento de Angular.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación generado por OpenAPI.\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para controlar la navegación del historial.\n\n                                                        \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio personalizado para mostrar mensajes emergentes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirRegistro\n                        \n                    \n                \n            \n            \n                \nabrirRegistro()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Navega a la página de registro de usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Envía el formulario al backend para autenticación.\nSi es exitoso, guarda el token en localStorage y redirige al home.\nSi falla, muestra un mensaje de error.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volverAtras\n                        \n                    \n                \n            \n            \n                \nvolverAtras()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login/login.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Vuelve a la página anterior usando el historial de navegación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'username',\n      type: 'input',\n      props: {\n        type: 'text',\n        label: 'Usuario',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Nombre de usuario',\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      props: {\n        label: 'Contraseña',\n        required: true,\n        hideRequiredMarker: true,\n        type: 'password',\n        addonRight: {\n          text: '🙈',\n          onClick: (field: { templateOptions: { type: string; addonRight: { text: string; }; }; }) => {\n            const current = field.templateOptions.type;\n            field.templateOptions.type = current === 'password' ? 'text' : 'password';\n            field.templateOptions.addonRight.text = current === 'password' ? '🙉' : '🙈';\n          }\n        }\n      }\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:44\n                        \n                    \n\n            \n                \n                    Definición de los campos del formulario utilizando ngx-formly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:40\n                        \n                    \n\n            \n                \n                    Formulario reactivo asociado al formulario de inicio de sesión.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.component.ts:42\n                        \n                    \n\n            \n                \n                    Modelo que almacena los datos del formulario (usuario, contraseña).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthControllerService} from '../../../openapi';\nimport {FormlyFieldConfig} from '@ngx-formly/core';\nimport { Location } from '@angular/common';\nimport {SnackbarService} from '../../core/services/snack-bar.service';\n\n/**\n * @component\n * @name LoginComponent\n * @description\n * Componente encargado de gestionar el formulario de inicio de sesión.\n * Permite al usuario introducir sus credenciales (usuario y contraseña) para autenticarse en la aplicación.\n * Utiliza ngx-formly para generar dinámicamente los campos del formulario y muestra mensajes de error mediante el servicio Snackbar.\n * Si la autenticación es exitosa, redirige al usuario al área privada.\n * Además, permite navegar a la página de registro o volver a la página anterior.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-login',\n  standalone: false,\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  /**\n   * Constructor del componente.\n   * @param router Servicio de enrutamiento de Angular.\n   * @param authService Servicio de autenticación generado por OpenAPI.\n   * @param location Servicio para controlar la navegación del historial.\n   * @param snackbar Servicio personalizado para mostrar mensajes emergentes.\n   */\n  constructor(private router:Router, private authService:AuthControllerService, private location: Location,\n              private snackbar: SnackbarService) {}\n\n  /** Formulario reactivo asociado al formulario de inicio de sesión. */\n  form = new FormGroup({});\n  /** Modelo que almacena los datos del formulario (usuario, contraseña). */\n  model: any = {};\n  /** Definición de los campos del formulario utilizando ngx-formly. */\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      props: {\n        type: 'text',\n        label: 'Usuario',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Nombre de usuario',\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      props: {\n        label: 'Contraseña',\n        required: true,\n        hideRequiredMarker: true,\n        type: 'password',\n        addonRight: {\n          text: '🙈',\n          onClick: (field: { templateOptions: { type: string; addonRight: { text: string; }; }; }) => {\n            const current = field.templateOptions.type;\n            field.templateOptions.type = current === 'password' ? 'text' : 'password';\n            field.templateOptions.addonRight.text = current === 'password' ? '🙉' : '🙈';\n          }\n        }\n      }\n    },\n  ];\n\n\n  /**\n   * Envía el formulario al backend para autenticación.\n   * Si es exitoso, guarda el token en localStorage y redirige al home.\n   * Si falla, muestra un mensaje de error.\n   */\n  submit() {\n    this.authService.login(this.model).subscribe({\n      next: (result) => {\n        console.log(result)\n        localStorage.setItem('token', result.data!.token!);\n        this.router.navigate(['/superlista/home']);\n      },\n      error: (error) => {\n        this.snackbar.error(\"Usuario o contraseña incorrectos\")\n      }\n    })\n  }\n\n  /**\n   * Navega a la página de registro de usuario.\n   */\n  abrirRegistro() {\n    this.router.navigate(['/auth/registro']);\n  }\n\n  /**\n   * Vuelve a la página anterior usando el historial de navegación.\n   */\n  volverAtras(): void {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        👤\n        Iniciar sesión\n        Accede a tu cuenta para empezar a organizar tu mundo 🍽️\n      \n\n      \n      \n        \n        Entrar\n      \n\n      \n      \n        ¿No tienes cuenta aún?\n        Regístrate aquí\n      \n    \n\n    \n    \n      \n         Volver a la página anterior\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          👤        Iniciar sesión        Accede a tu cuenta para empezar a organizar tu mundo 🍽️                                  Entrar                          ¿No tienes cuenta aún?        Regístrate aquí                                 Volver a la página anterior            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/loginRequest.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest { \n    username?: string;\n    password?: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/loginResponse.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResponse { \n    token?: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/usuario/menu/menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de gestionar los menús semanales en la aplicación SúperLista.\nPermite:\n\nListar los menús creados por el usuario.\nCrear nuevos menús seleccionando categorías.\nEditar, eliminar y gestionar recetas asociadas a cada menú.\nGenerar listas de compra desde un menú.\nExportar el detalle del menú como archivo PDF.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriasSeleccionadas\n                            \n                            \n                                    \n                                contenidoParaPdf\n                            \n                            \n                                    Private\n                                estilosOriginales\n                            \n                            \n                                menus\n                            \n                            \n                                menuSeleccionado\n                            \n                            \n                                    \n                                modalConfirmar\n                            \n                            \n                                    \n                                modalMenuDetalle\n                            \n                            \n                                    \n                                modalNuevoMenu\n                            \n                            \n                                todasCategorias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirModalNuevoMenu\n                            \n                            \n                                aplicarEstilosPDFManual\n                            \n                            \n                                contarTotalRecetas\n                            \n                            \n                                crearMenu\n                            \n                            \n                                descargarPDF\n                            \n                            \n                                editarMenu\n                            \n                            \n                                eliminarMenu\n                            \n                            \n                                generarListaCompra\n                            \n                            \n                                gestionarMenu\n                            \n                            \n                                    Private\n                                loadMenus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                obtenerCategoriasMenu\n                            \n                            \n                                obtenerNombresRecetas\n                            \n                            \n                                openModalConfirmar\n                            \n                            \n                                restaurarEstilosOriginales\n                            \n                            \n                                toggleCategoria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuSemanalService, listaService: ListaCompraResourceService, snackBarService: SnackbarService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/usuario/menu/menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuSemanalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los menús semanales.\n\n                                                        \n                                                \n                                                \n                                                        listaService\n                                                  \n                                                        \n                                                                        ListaCompraResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para generar listas de compra.\n\n                                                        \n                                                \n                                                \n                                                        snackBarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para mostrar notificaciones flotantes.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio Angular Router para la navegación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirModalNuevoMenu\n                        \n                    \n                \n            \n            \n                \nabrirModalNuevoMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Abre el modal para crear un nuevo menú con todas las categorías seleccionadas por defecto.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        aplicarEstilosPDFManual\n                        \n                    \n                \n            \n            \n                \naplicarEstilosPDFManual(elemento: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:214\n                        \n                    \n\n\n            \n                \n                        Aplica estilos inline manuales a las tablas y celdas para que sean capturadas correctamente por html2canvas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elemento\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Elemento HTML raíz sobre el que aplicar los estilos.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contarTotalRecetas\n                        \n                    \n                \n            \n            \n                \ncontarTotalRecetas(menu: MenuSemanalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Cuenta el número total de recetas asociadas a un menú.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                            MenuSemanalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menú objetivo.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Número total de recetas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearMenu\n                        \n                    \n                \n            \n            \n                \ncrearMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Cierra el modal y navega al componente de creación de menú,\npasando las categorías seleccionadas como parámetro de query.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descargarPDF\n                        \n                    \n                \n            \n            \n                \ndescargarPDF()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:241\n                        \n                    \n\n\n            \n                \n                        Captura el contenido HTML del menú y lo descarga como archivo PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editarMenu\n                        \n                    \n                \n            \n            \n                \neditarMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de detalle y navega al componente de edición de menú,\npasando el ID del menú como parámetro de query.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarMenu\n                        \n                    \n                \n            \n            \n                \neliminarMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Elimina el menú actualmente seleccionado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarListaCompra\n                        \n                    \n                \n            \n            \n                \ngenerarListaCompra()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Genera una lista de la compra a partir del menú seleccionado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gestionarMenu\n                        \n                    \n                \n            \n            \n                \ngestionarMenu(menu: MenuSemanalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Abre el modal de detalle para gestionar un menú existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                            MenuSemanalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menú seleccionado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadMenus\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadMenus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Llama al servicio para obtener los menús del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente.\nCarga todos los menús del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerCategoriasMenu\n                        \n                    \n                \n            \n            \n                \nobtenerCategoriasMenu(menu: MenuSemanalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:200\n                        \n                    \n\n\n            \n                \n                        Obtiene las categorías únicas de un menú.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                            MenuSemanalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menú objetivo.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                Array de categorías.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerNombresRecetas\n                        \n                    \n                \n            \n            \n                \nobtenerNombresRecetas(menu: MenuSemanalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Obtiene los nombres únicos de las recetas en un menú.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                            MenuSemanalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menú objetivo.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                Array de nombres de recetas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModalConfirmar\n                        \n                    \n                \n            \n            \n                \nopenModalConfirmar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Abre el modal de confirmación para eliminar un menú.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurarEstilosOriginales\n                        \n                    \n                \n            \n            \n                \nrestaurarEstilosOriginales()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:229\n                        \n                    \n\n\n            \n                \n                        Restaura los estilos originales guardados después de exportar a PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoria\n                        \n                    \n                \n            \n            \n                \ntoggleCategoria(cat: CategoriaEnum, checked: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/usuario/menu/menu.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Marca o desmarca una categoría para la creación de un nuevo menú.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoriaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría objetivo.\n\n                                            \n                                        \n                                        \n                                                checked\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Estado del checkbox.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriasSeleccionadas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CategoriaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:33\n                        \n                    \n\n            \n                \n                    Categorías seleccionadas para la creación de un nuevo menú.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenidoParaPdf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('contenidoParaPdf')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:206\n                        \n                    \n\n            \n                \n                    Referencia al contenedor HTML que se usará para exportar el PDF del menú.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        estilosOriginales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:208\n                        \n                    \n\n            \n                \n                    Mapa para guardar los estilos originales de los elementos antes de exportar a PDF.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuSemanalDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Lista de menús cargados desde el backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSeleccionado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuSemanalDto | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:38\n                        \n                    \n\n            \n                \n                    Menú actualmente seleccionado para mostrar detalle o editar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalConfirmar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalConfirmar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:45\n                        \n                    \n\n            \n                \n                    Referencia al modal de confirmación (por ejemplo, para eliminar un menú).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalMenuDetalle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalMenuDetalle')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:43\n                        \n                    \n\n            \n                \n                    Referencia al modal para ver el detalle de un menú.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalNuevoMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modalNuevoMenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:41\n                        \n                    \n\n            \n                \n                    Referencia al modal para crear un nuevo menú.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todasCategorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CategoriaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : ['DESAYUNO', 'ALMUERZO', 'COMIDA', 'MERIENDA', 'CENA']\n                    \n                \n                    \n                        \n                                Defined in src/app/usuario/menu/menu.component.ts:35\n                        \n                    \n\n            \n                \n                    Lista completa de categorías disponibles.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {DiaComidaDto, ListaCompraResourceService, MenuSemanalDto, MenuSemanalService} from '../../../openapi';\nimport {SnackbarService} from '../../core/services/snack-bar.service';\nimport {ModalComponent} from '../../core/componentes/modal/modal.component';\nimport {Router} from '@angular/router';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport CategoriaEnum = DiaComidaDto.CategoriaEnum;\n\n/**\n * @component\n * @name MenuComponent\n * @description\n * Componente encargado de gestionar los menús semanales en la aplicación SúperLista.\n * Permite:\n * - Listar los menús creados por el usuario.\n * - Crear nuevos menús seleccionando categorías.\n * - Editar, eliminar y gestionar recetas asociadas a cada menú.\n * - Generar listas de compra desde un menú.\n * - Exportar el detalle del menú como archivo PDF.\n */\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n  standalone: false,\n})\nexport class MenuComponent implements OnInit {\n\n  /** Lista de menús cargados desde el backend. */\n  menus: MenuSemanalDto[] = [];\n  /** Categorías seleccionadas para la creación de un nuevo menú. */\n  categoriasSeleccionadas: CategoriaEnum[] = [];\n  /** Lista completa de categorías disponibles. */\n  todasCategorias: CategoriaEnum[] = ['DESAYUNO', 'ALMUERZO', 'COMIDA', 'MERIENDA', 'CENA'];\n\n  /** Menú actualmente seleccionado para mostrar detalle o editar. */\n  menuSeleccionado: MenuSemanalDto | null = null;\n\n  /** Referencia al modal para crear un nuevo menú. */\n  @ViewChild('modalNuevoMenu') modalNuevoMenu!: ModalComponent;\n  /** Referencia al modal para ver el detalle de un menú. */\n  @ViewChild('modalMenuDetalle') modalMenuDetalle!: ModalComponent;\n  /** Referencia al modal de confirmación (por ejemplo, para eliminar un menú). */\n  @ViewChild('modalConfirmar') modalConfirmar!: ModalComponent;\n\n  /**\n   * Constructor del componente.\n   * @param menuService Servicio para gestionar los menús semanales.\n   * @param listaService Servicio para generar listas de compra.\n   * @param snackBarService Servicio para mostrar notificaciones flotantes.\n   * @param router Servicio Angular Router para la navegación.\n   */\n  constructor(\n    private menuService: MenuSemanalService,\n    private listaService: ListaCompraResourceService,\n    private snackBarService: SnackbarService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Hook de inicialización del componente.\n   * Carga todos los menús del usuario.\n   */\n  ngOnInit(): void {\n    this.loadMenus();\n  }\n  /**\n   * Llama al servicio para obtener los menús del usuario.\n   */\n  private loadMenus() {\n    this.menuService.obtenerMisMenus().subscribe({\n      next: (data) => {\n        this.menus = data.data || [];\n      },\n      error: () => {\n        this.snackBarService.error('Error al cargar tus menús');\n      }\n    });\n  }\n  /**\n   * Abre el modal para crear un nuevo menú con todas las categorías seleccionadas por defecto.\n   */\n  abrirModalNuevoMenu() {\n    this.categoriasSeleccionadas = [...this.todasCategorias];\n    this.modalNuevoMenu.open();\n  }\n  /**\n   * Marca o desmarca una categoría para la creación de un nuevo menú.\n   * @param cat Categoría objetivo.\n   * @param checked Estado del checkbox.\n   */\n  toggleCategoria(cat: CategoriaEnum, checked: boolean) {\n    if (checked) {\n      this.categoriasSeleccionadas.push(cat);\n    } else {\n      this.categoriasSeleccionadas = this.categoriasSeleccionadas.filter(c => c !== cat);\n    }\n  }\n  /**\n   * Cierra el modal y navega al componente de creación de menú,\n   * pasando las categorías seleccionadas como parámetro de query.\n   */\n  crearMenu() {\n    const categoriasFinal = this.categoriasSeleccionadas.length > 0 ? this.categoriasSeleccionadas : undefined;\n\n    this.modalNuevoMenu.close();\n\n    // Navegar al componente de crear-menu con las categorías seleccionadas\n    this.router.navigate(['/superlista/crear-menu'], {\n      queryParams: {\n        categorias: categoriasFinal?.join(',') // pasamos como string \"DESAYUNO,COMIDA,CENA\"\n      }\n    });\n  }\n\n  /**\n   * Abre el modal de detalle para gestionar un menú existente.\n   * @param menu Menú seleccionado.\n   */\n  gestionarMenu(menu: MenuSemanalDto) {\n    this.menuSeleccionado = menu;\n    this.modalMenuDetalle.open();\n  }\n  /**\n   * Cuenta el número total de recetas asociadas a un menú.\n   * @param menu Menú objetivo.\n   * @returns Número total de recetas.\n   */\n  contarTotalRecetas(menu: MenuSemanalDto): number {\n    if (!menu.diasComidas) return 0;\n\n    return menu.diasComidas.reduce((total, dia) => {\n      return total + (dia.recetas?.length || 0);\n    }, 0);\n  }\n  /**\n   * Cierra el modal de detalle y navega al componente de edición de menú,\n   * pasando el ID del menú como parámetro de query.\n   */\n  editarMenu() {\n    this.modalMenuDetalle.close();\n    this.router.navigate(['/superlista/crear-menu'], {\n      queryParams: { menuId: this.menuSeleccionado!.id }\n    });\n  }\n  /**\n   * Elimina el menú actualmente seleccionado.\n   */\n  eliminarMenu() {\n    if (!this.menuSeleccionado) return;\n\n    this.menuService.eliminarMenu(this.menuSeleccionado.id!).subscribe({\n      next: () => {\n        this.snackBarService.success('Menú eliminado correctamente');\n        this.modalConfirmar.close();\n        this.modalMenuDetalle.close();\n        this.loadMenus();\n      },\n      error: () => {\n        this.snackBarService.error('Error al eliminar el menú');\n      }\n    });\n  }\n  /**\n   * Abre el modal de confirmación para eliminar un menú.\n   */\n  openModalConfirmar() {\n    this.modalConfirmar.open();\n  }\n  /**\n   * Genera una lista de la compra a partir del menú seleccionado.\n   */\n  generarListaCompra() {\n    if (!this.menuSeleccionado) return;\n    this.listaService.generarLista({ menuId: this.menuSeleccionado.id! }).subscribe({\n      next: () => {\n        this.snackBarService.success('Lista de la compra generada correctamente');\n        this.modalMenuDetalle.close();\n      },\n      error: () => {\n        this.snackBarService.error('Error al generar la lista de la compra');\n      }\n    });\n  }\n  /**\n   * Obtiene los nombres únicos de las recetas en un menú.\n   * @param menu Menú objetivo.\n   * @returns Array de nombres de recetas.\n   */\n  obtenerNombresRecetas(menu: MenuSemanalDto): string[] {\n    const recetas = menu.diasComidas?.flatMap(d => d.recetas || []) || [];\n    return Array.from(new Set(recetas.map(r => r.nombre!)));\n  }\n  /**\n   * Obtiene las categorías únicas de un menú.\n   * @param menu Menú objetivo.\n   * @returns Array de categorías.\n   */\n  obtenerCategoriasMenu(menu: MenuSemanalDto): string[] {\n    const categorias = menu.diasComidas?.map(dc => dc.categoria!) || [];\n    return Array.from(new Set(categorias)); // Elimina duplicados\n  }\n\n  /** Referencia al contenedor HTML que se usará para exportar el PDF del menú. */\n  @ViewChild('contenidoParaPdf') contenidoParaPdf!: ElementRef;\n  /** Mapa para guardar los estilos originales de los elementos antes de exportar a PDF. */\n  private estilosOriginales: Map = new Map();\n\n  /**\n   * Aplica estilos inline manuales a las tablas y celdas para que sean capturadas correctamente por html2canvas.\n   * @param elemento Elemento HTML raíz sobre el que aplicar los estilos.\n   */\n  aplicarEstilosPDFManual(elemento: HTMLElement) {\n    const elementos = elemento.querySelectorAll('table.pastel-table, th, td, tr');\n    elementos.forEach(el => {\n      const htmlEl = el as HTMLElement;\n      if (!this.estilosOriginales.has(htmlEl)) {\n        this.estilosOriginales.set(htmlEl, htmlEl.getAttribute('style') || '');\n      }\n      htmlEl.style.border = '1px solid #c5c5e5';\n      htmlEl.style.borderCollapse = 'collapse';\n    });\n  }\n\n  /**\n   * Restaura los estilos originales guardados después de exportar a PDF.\n   */\n  restaurarEstilosOriginales() {\n    this.estilosOriginales.forEach((valor, el) => {\n      el.setAttribute('style', valor);\n    });\n    this.estilosOriginales.clear();\n  }\n\n\n\n  /**\n   * Captura el contenido HTML del menú y lo descarga como archivo PDF.\n   */\n  descargarPDF() {\n    const el = this.contenidoParaPdf.nativeElement;\n\n    this.aplicarEstilosPDFManual(el);\n\n    html2canvas(el, { scale: 2 }).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape',\n        unit: 'px',\n        format: 'a4'\n      });\n\n      const pageWidth = pdf.internal.pageSize.getWidth();\n      const imgWidth = pageWidth;\n      const imgHeight = canvas.height * (imgWidth / canvas.width);\n\n      pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n      pdf.save('menu.pdf');\n\n      this.restaurarEstilosOriginales();\n    });\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n    \n      🗓️ Mis menús semanales\n      ➕ Crear menú\n    \n  \n\n  \n  \n    \n      \n        \n          📅 Menú #{{ menu.id }}\n        \n\n        \n          \n            {{ contarTotalRecetas(menu) }} recetas asignadas\n          \n          \n            {{ obtenerCategoriasMenu(menu).join(', ') }}\n          \n          \n            {{ obtenerNombresRecetas(menu).slice(0, 3).join(', ') }}{{ obtenerNombresRecetas(menu).length > 3 ? '...' : '' }}\n          \n        \n      \n    \n  \n\n\n\n\n\n  \n    \n      Selecciona qué comidas quieres en el menú\n\n      \n        \n        {{ categoria }}\n      \n    \n  \n\n  \n    Crear menú\n  \n\n\n\n\n  \n    \n      \n    \n  \n  \n    ✏️ Editar menú\n  \n\n  \n    🗑️ Eliminar menú\n  \n\n  \n    🛒 Generar lista de la compra\n  \n\n  \n    📄 Descargar PDF\n  \n\n\n\n\n  \n    ¿Seguro que quieres eliminar el menú?\n  \n  Eliminar menú\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        🗓️ Mis menús semanales      ➕ Crear menú                                      📅 Menú #{{ menu.id }}                                      {{ contarTotalRecetas(menu) }} recetas asignadas                                {{ obtenerCategoriasMenu(menu).join(\\', \\') }}                                {{ obtenerNombresRecetas(menu).slice(0, 3).join(\\', \\') }}{{ obtenerNombresRecetas(menu).length > 3 ? \\'...\\' : \\'\\' }}                                          Selecciona qué comidas quieres en el menú                      {{ categoria }}                  Crear menú                          ✏️ Editar menú        🗑️ Eliminar menú        🛒 Generar lista de la compra        📄 Descargar PDF        ¿Seguro que quieres eliminar el menú?    Eliminar menú'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuDetalleComponent.html":{"url":"components/MenuDetalleComponent.html","title":"component - MenuDetalleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuDetalleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/menu-detalle/menu-detalle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente standalone encargado de mostrar el detalle visual de un menú semanal en la aplicación SúperLista.\nMuestra las recetas asignadas a cada día y categoría (desayuno, almuerzo, etc.) dentro del menú recibido por input.\nPermite consultar las recetas de cada celda, mostrar nombres amigables para las categorías y usar tooltips con retraso.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-detalle\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgForOf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu-detalle.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu-detalle.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriasComida\n                            \n                            \n                                diasSemana\n                            \n                            \n                                    Public\n                                    Readonly\n                                getEmojiDominantePorReceta\n                            \n                            \n                                tooltipTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mostrarCategoria\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                obtenerRecetas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor vacío del componente.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuSemanalDto\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:32\n                            \n                        \n                \n                    \n                        Menú semanal recibido como input para mostrar su detalle.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mostrarCategoria\n                        \n                    \n                \n            \n            \n                \nmostrarCategoria(categoria: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Devuelve un nombre visualmente amigable para una categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Código de categoría.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre legible de la categoría.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Hook de inicialización del componente.\nExtrae las categorías únicas de los días/comidas del menú recibido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerRecetas\n                        \n                    \n                \n            \n            \n                \nobtenerRecetas(dia: string, categoria: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Obtiene las recetas asignadas a un día y categoría específicos del menú.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dia\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Día de la semana.\n\n                                            \n                                        \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría de comida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Array de recetas para esa celda.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoriasComida\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiaComida.CategoriaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:41\n                        \n                    \n\n            \n                \n                    Categorías de comida únicas presentes en el menú actual.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diasSemana\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiaComida.DiaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO', 'DOMINGO'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:35\n                        \n                    \n\n            \n                \n                    Días de la semana representados como enums.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getEmojiDominantePorReceta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getEmojiDominantePorReceta\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:93\n                        \n                    \n\n            \n                \n                    Referencia pública a la utilidad que obtiene el emoji dominante de una receta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltipTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-detalle/menu-detalle.component.ts:90\n                        \n                    \n\n            \n                \n                    Timeout usado para gestionar la apertura retardada de tooltips.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {MenuSemanalDto, DiaComidaDto, MenuSemanalCreateDto} from '../../../../openapi';\nimport { DiaComidaDto as DiaComida } from '../../../../openapi';\nimport DiaEnum = DiaComidaDto.DiaEnum;\nimport CategoriasEnum = MenuSemanalCreateDto.CategoriasEnum;\nimport {NgForOf} from '@angular/common';\nimport {getEmojiDominantePorReceta} from '../../services/utils';\n\n/**\n * @component\n * @name MenuDetalleComponent\n * @description\n * Componente standalone encargado de mostrar el detalle visual de un menú semanal en la aplicación SúperLista.\n * Muestra las recetas asignadas a cada día y categoría (desayuno, almuerzo, etc.) dentro del menú recibido por input.\n * Permite consultar las recetas de cada celda, mostrar nombres amigables para las categorías y usar tooltips con retraso.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-menu-detalle',\n  templateUrl: './menu-detalle.component.html',\n  styleUrl: './menu-detalle.component.scss',\n  standalone: true,\n  imports: [\n    NgForOf\n  ]\n})\nexport class MenuDetalleComponent implements OnInit {\n\n  /** Menú semanal recibido como input para mostrar su detalle. */\n  @Input() menu!: MenuSemanalDto;  // Recibimos el menú que queremos mostrar\n\n  /** Días de la semana representados como enums. */\n  diasSemana: DiaComida.DiaEnum[] = [\n    'LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO', 'DOMINGO'\n  ];\n\n\n  /** Categorías de comida únicas presentes en el menú actual. */\n  categoriasComida: DiaComida.CategoriaEnum[] = [];\n\n  /** Constructor vacío del componente. */\n  constructor() {}\n\n  /**\n   * Hook de inicialización del componente.\n   * Extrae las categorías únicas de los días/comidas del menú recibido.\n   */\n  ngOnInit(): void {\n    if (this.menu?.diasComidas) {\n      const categoriasUnicas = new Set(this.menu.diasComidas.map(dc => dc.categoria));\n      this.categoriasComida = Array.from(categoriasUnicas) as DiaComida.CategoriaEnum[];\n    }\n  }\n\n  /**\n   * Obtiene las recetas asignadas a un día y categoría específicos del menú.\n   * @param dia Día de la semana.\n   * @param categoria Categoría de comida.\n   * @returns Array de recetas para esa celda.\n   */\n  obtenerRecetas(dia: string, categoria: string) {\n    if (!this.menu?.diasComidas) return [];\n\n    const celda = this.menu.diasComidas.find(dc =>\n      dc.dia === dia && dc.categoria === categoria\n    );\n\n    return celda?.recetas || [];\n  }\n\n  /**\n   * Devuelve un nombre visualmente amigable para una categoría.\n   * @param categoria Código de categoría.\n   * @returns Nombre legible de la categoría.\n   */\n  mostrarCategoria(categoria: string): string {\n    const map: any = {\n      DESAYUNO: 'Desayuno',\n      ALMUERZO: 'Almuerzo',\n      COMIDA: 'Comida',\n      MERIENDA: 'Merienda',\n      CENA: 'Cena',\n    };\n    return map[categoria] || categoria;\n  }\n\n  /** Timeout usado para gestionar la apertura retardada de tooltips. */\n  tooltipTimeout: any;\n\n  /** Referencia pública a la utilidad que obtiene el emoji dominante de una receta. */\n  public readonly getEmojiDominantePorReceta = getEmojiDominantePorReceta;\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        COMIDA / DÍA\n        {{ dia }}\n      \n      \n\n      \n      \n        \n          {{ mostrarCategoria(categoria).toUpperCase() }}\n        \n        \n          \n            {{ getEmojiDominantePorReceta(receta) }} {{ receta.nombre }}\n          \n        \n      \n      \n\n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          COMIDA / DÍA        {{ dia }}                                          {{ mostrarCategoria(categoria).toUpperCase() }}                                      {{ getEmojiDominantePorReceta(receta) }} {{ receta.nombre }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuDetalleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuSemanalDto.html":{"url":"interfaces/MenuSemanalDto.html","title":"interface - MenuSemanalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuSemanalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/menuSemanalDto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            diasComidas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            usuarioId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diasComidas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diasComidas:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usuarioId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usuarioId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DiaComidaDto } from './diaComidaDto';\n\n\nexport interface MenuSemanalDto { \n    id?: number;\n    usuarioId?: number;\n    diasComidas?: Array;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuSemanalServiceInterface.html":{"url":"interfaces/MenuSemanalServiceInterface.html","title":"interface - MenuSemanalServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuSemanalServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/menuSemanal.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizarRecetasMenu\n                                    \n                                \n                                \n                                    \n                                        addReceta\n                                    \n                                \n                                \n                                    \n                                        crearMenuSemanal\n                                    \n                                \n                                \n                                    \n                                        eliminarMenu\n                                    \n                                \n                                \n                                    \n                                        obtenerMenu\n                                    \n                                \n                                \n                                    \n                                        obtenerMisMenus\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarRecetasMenu\n                        \n                    \n                \n            \n            \n                \nactualizarRecetasMenu(actualizarRecetasMenuDto: ActualizarRecetasMenuDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actualizarRecetasMenuDto\n                                            \n                                                            ActualizarRecetasMenuDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addReceta\n                        \n                    \n                \n            \n            \n                \naddReceta(addRecetaDto: AddRecetaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addRecetaDto\n                                            \n                                                            AddRecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearMenuSemanal\n                        \n                    \n                \n            \n            \n                \ncrearMenuSemanal(menuSemanalCreateDto: MenuSemanalCreateDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuSemanalCreateDto\n                                            \n                                                        MenuSemanalCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarMenu\n                        \n                    \n                \n            \n            \n                \neliminarMenu(menuId: number, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerMenu\n                        \n                    \n                \n            \n            \n                \nobtenerMenu(id: number, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerMisMenus\n                        \n                    \n                \n            \n            \n                \nobtenerMisMenus(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/menuSemanal.serviceInterface.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ActualizarRecetasMenuDto } from '../model/models';\nimport { AddRecetaDto } from '../model/models';\nimport { ApiRespuestaBoolean } from '../model/models';\nimport { ApiRespuestaListMenuSemanalDto } from '../model/models';\nimport { ApiRespuestaMenuSemanalDto } from '../model/models';\nimport { MenuSemanalCreateDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface MenuSemanalServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param actualizarRecetasMenuDto \n     */\n    actualizarRecetasMenu(actualizarRecetasMenuDto: ActualizarRecetasMenuDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param addRecetaDto \n     */\n    addReceta(addRecetaDto: AddRecetaDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param menuSemanalCreateDto \n     */\n    crearMenuSemanal(menuSemanalCreateDto: MenuSemanalCreateDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param menuId \n     */\n    eliminarMenu(menuId: number, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param id \n     */\n    obtenerMenu(id: number, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     */\n    obtenerMisMenus(extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuTablaComponent.html":{"url":"components/MenuTablaComponent.html","title":"component - MenuTablaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuTablaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/menu-tabla/menu-tabla.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente standalone que construye y gestiona visualmente una tabla de menú semanal en la aplicación SúperLista.\nPermite arrastrar y soltar recetas en celdas específicas (día + categoría), eliminar recetas,\nguardar menús nuevos o actualizados, y emitir los datos del menú actualizado al componente padre.\nUsa tooltips, drag-and-drop (CDK) y utilidades visuales para una interacción rica.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-tabla\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DragDropModule\n                            NgbTooltipModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu-tabla.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu-tabla.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                diasSemana\n                            \n                            \n                                    Protected\n                                    Readonly\n                                getEmojiDominantePorReceta\n                            \n                            \n                                menuData\n                            \n                            \n                                tooltipTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirTooltipConDelay\n                            \n                            \n                                cancelarTooltip\n                            \n                            \n                                    Private\n                                construirDiasComidas\n                            \n                            \n                                eliminarReceta\n                            \n                            \n                                guardarMenu\n                            \n                            \n                                    Private\n                                inicializarDesdeMenu\n                            \n                            \n                                    Private\n                                inicializarMenuVacio\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorias\n                            \n                            \n                                menuId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuDataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuSemanalService, snackBar: SnackbarService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:54\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuSemanalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar menús semanales.\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para mostrar mensajes emergentes.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categorias\n                    \n                \n                \n                    \n                        Type :     CategoriaEnum[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:36\n                            \n                        \n                \n                    \n                        Categorías de comida que estructuran las columnas de la tabla.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        menuId\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:38\n                            \n                        \n                \n                    \n                        ID del menú si es edición (null si es creación).\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuDataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:40\n                            \n                        \n                \n                    \n                        Emisor que comunica al padre los cambios en el menú.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirTooltipConDelay\n                        \n                    \n                \n            \n            \n                \nabrirTooltipConDelay(tooltip: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:265\n                        \n                    \n\n\n            \n                \n                        Abre un tooltip tras un pequeño retraso.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tooltip\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Referencia al tooltip.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelarTooltip\n                        \n                    \n                \n            \n            \n                \ncancelarTooltip(tooltip: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:275\n                        \n                    \n\n\n            \n                \n                        Cancela la apertura del tooltip si se abandona antes de tiempo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tooltip\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Referencia al tooltip.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        construirDiasComidas\n                        \n                    \n                \n            \n            \n                \n                        \n                    construirDiasComidas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:236\n                        \n                    \n\n\n            \n                \n                        Construye la estructura de días y comidas para enviar al backend.\n\n\n                        \n                            Returns :     literal type[]\n\n                        \n                            \n                                Array de días con sus categorías y recetas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarReceta\n                        \n                    \n                \n            \n            \n                \neliminarReceta(dia: string, categoria: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Elimina una receta de una celda específica.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dia\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Día de la semana.\n\n                                            \n                                        \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría de comida.\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la receta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardarMenu\n                        \n                    \n                \n            \n            \n                \nguardarMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:185\n                        \n                    \n\n\n            \n                \n                        Guarda el menú actual, creando uno nuevo o actualizando uno existente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inicializarDesdeMenu\n                        \n                    \n                \n            \n            \n                \n                        \n                    inicializarDesdeMenu(menu: MenuSemanalDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Inicializa el estado del componente a partir de un menú cargado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                            MenuSemanalDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menú semanal recibido del backend.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inicializarMenuVacio\n                        \n                    \n                \n            \n            \n                \n                        \n                    inicializarMenuVacio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Inicializa un menú vacío para creación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Inicializa los tooltips de Bootstrap después de que la vista está lista.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Detecta cambios en las categorías cuando no hay menú cargado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Cambios detectados.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente cargando el menú existente o construyendo uno vacío.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrop\n                        \n                    \n                \n            \n            \n                \nonDrop(event: CdkDragDrop, dia: string, categoria: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Maneja el evento de arrastrar y soltar una receta sobre una celda.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            CdkDragDrop\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de arrastre.\n\n                                            \n                                        \n                                        \n                                                dia\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Día de la semana.\n\n                                            \n                                        \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Categoría de comida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        diasSemana\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Lunes', key: 'LUNES' },\n    { label: 'Martes', key: 'MARTES' },\n    { label: 'Miércoles', key: 'MIERCOLES' },\n    { label: 'Jueves', key: 'JUEVES' },\n    { label: 'Viernes', key: 'VIERNES' },\n    { label: 'Sábado', key: 'SABADO' },\n    { label: 'Domingo', key: 'DOMINGO' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:46\n                        \n                    \n\n            \n                \n                    Días de la semana con claves y etiquetas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        getEmojiDominantePorReceta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getEmojiDominantePorReceta\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:281\n                        \n                    \n\n            \n                \n                    Referencia pública a la utilidad que obtiene el emoji dominante de una receta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:43\n                        \n                    \n\n            \n                \n                    Estructura interna que guarda las recetas por día y categoría.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltipTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/menu-tabla/menu-tabla.component.ts:259\n                        \n                    \n\n            \n                \n                    Timeout usado para gestionar la apertura retardada de tooltips.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, OnChanges, SimpleChanges, AfterViewInit, OnInit} from '@angular/core';\nimport {CdkDragDrop, DragDropModule} from '@angular/cdk/drag-drop';\nimport {DiaComidaDto, MenuSemanalDto, MenuSemanalService, RecetaDto} from '../../../../openapi';\nimport CategoriaEnum = DiaComidaDto.CategoriaEnum;\nimport {CommonModule} from '@angular/common';\nimport { AddRecetaDto } from '../../../../openapi';\nimport {forkJoin, map, Observable, of} from 'rxjs';\nimport { SnackbarService } from '../../services/snack-bar.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport DiaEnum = AddRecetaDto.DiaEnum;\nimport {getEmojiDominantePorReceta} from '../../services/utils';\nimport {NgbTooltipModule} from '@ng-bootstrap/ng-bootstrap';\ndeclare const bootstrap: any;\n\n/**\n * @component\n * @name MenuTablaComponent\n * @description\n * Componente standalone que construye y gestiona visualmente una tabla de menú semanal en la aplicación SúperLista.\n * Permite arrastrar y soltar recetas en celdas específicas (día + categoría), eliminar recetas,\n * guardar menús nuevos o actualizados, y emitir los datos del menú actualizado al componente padre.\n * Usa tooltips, drag-and-drop (CDK) y utilidades visuales para una interacción rica.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-menu-tabla',\n  templateUrl: './menu-tabla.component.html',\n  styleUrl: './menu-tabla.component.scss',\n  standalone: true,\n  imports: [CommonModule, DragDropModule, NgbTooltipModule]\n})\nexport class MenuTablaComponent implements OnInit, AfterViewInit, OnChanges {\n  /** Categorías de comida que estructuran las columnas de la tabla. */\n  @Input() categorias: CategoriaEnum[] = [];\n  /** ID del menú si es edición (null si es creación). */\n  @Input() menuId: number | null = null;\n  /** Emisor que comunica al padre los cambios en el menú. */\n  @Output() menuDataChange = new EventEmitter();\n\n  /** Estructura interna que guarda las recetas por día y categoría. */\n  menuData: { [dia: string]: { [categoria: string]: RecetaDto[] } } = {};\n\n  /** Días de la semana con claves y etiquetas. */\n  diasSemana = [\n    { label: 'Lunes', key: 'LUNES' },\n    { label: 'Martes', key: 'MARTES' },\n    { label: 'Miércoles', key: 'MIERCOLES' },\n    { label: 'Jueves', key: 'JUEVES' },\n    { label: 'Viernes', key: 'VIERNES' },\n    { label: 'Sábado', key: 'SABADO' },\n    { label: 'Domingo', key: 'DOMINGO' },\n  ];\n\n  /**\n   * Constructor del componente.\n   * @param menuService Servicio para gestionar menús semanales.\n   * @param snackBar Servicio para mostrar mensajes emergentes.\n   * @param router Servicio de enrutamiento.\n   */\n  constructor(\n    private menuService: MenuSemanalService,\n    private snackBar: SnackbarService,\n    private router: Router\n  ) {}\n\n  /**\n   * Inicializa el componente cargando el menú existente o construyendo uno vacío.\n   */\n  ngOnInit(): void {\n    console.log('wid' + window.innerWidth)\n    if (this.menuId) {\n      this.menuService.obtenerMenu(this.menuId).subscribe({\n        next: resp => {\n          const menu = resp.data!;\n          this.categorias = [...new Set(menu.diasComidas!.map(d => d.categoria!))];\n          this.inicializarDesdeMenu(menu);\n        },\n        error: () => this.snackBar.error('No se pudo cargar el menú')\n      });\n    } else {\n      this.inicializarMenuVacio();\n    }\n  }\n\n\n  /**\n   * Detecta cambios en las categorías cuando no hay menú cargado.\n   * @param changes Cambios detectados.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['categorias'] && !this.menuId && this.categorias.length > 0) {\n      this.inicializarMenuVacio();\n    }\n  }\n\n  /**\n   * Inicializa los tooltips de Bootstrap después de que la vista está lista.\n   */\n  ngAfterViewInit(): void {\n    document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach(el => {\n      new bootstrap.Tooltip(el);\n    });\n  }\n\n  /** Inicializa un menú vacío para creación. */\n  private inicializarMenuVacio(): void {\n    this.menuData = {};\n    for (const dia of this.diasSemana) {\n      this.menuData[dia.key] = {};\n      for (const categoria of this.categorias) {\n        this.menuData[dia.key][categoria] = [];\n      }\n    }\n    this.menuDataChange.emit(this.menuData);\n  }\n\n  /**\n   * Inicializa el estado del componente a partir de un menú cargado.\n   * @param menu Menú semanal recibido del backend.\n   */\n  private inicializarDesdeMenu(menu: MenuSemanalDto): void {\n    this.menuData = {};\n    for (const dia of this.diasSemana) {\n      this.menuData[dia.key] = {};\n      for (const cat of this.categorias) {\n        this.menuData[dia.key][cat] = [];\n      }\n    }\n\n    for (const diaComida of menu.diasComidas || []) {\n      const dia = diaComida.dia!;\n      const categoria = diaComida.categoria!;\n      if (!this.menuData[dia]) this.menuData[dia] = {};\n      if (!this.menuData[dia][categoria]) this.menuData[dia][categoria] = [];\n      for (const receta of diaComida.recetas || []) {\n        if (!this.menuData[dia][categoria].some(r => r.id === receta.id)) {\n          this.menuData[dia][categoria].push(receta);\n        }\n      }\n    }\n\n    this.menuDataChange.emit(this.menuData);\n  }\n\n  /**\n   * Maneja el evento de arrastrar y soltar una receta sobre una celda.\n   * @param event Evento de arrastre.\n   * @param dia Día de la semana.\n   * @param categoria Categoría de comida.\n   */\n  onDrop(event: CdkDragDrop, dia: string, categoria: string): void {\n    if (event.previousContainer.id !== 'recetasList') return;\n    const receta = event.item.data as RecetaDto;\n    if (!this.menuData[dia][categoria].some(r => r.id === receta.id)) {\n      this.menuData[dia][categoria].push(receta);\n      this.menuDataChange.emit(this.menuData);\n    }\n\n    setTimeout(() => {\n      document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach(el => {\n        if (!el.hasAttribute('data-bs-initialized')) {\n          new bootstrap.Tooltip(el);\n          el.setAttribute('data-bs-initialized', 'true');\n        }\n      });\n    });\n  }\n\n  /**\n   * Elimina una receta de una celda específica.\n   * @param dia Día de la semana.\n   * @param categoria Categoría de comida.\n   * @param id ID de la receta.\n   */\n  eliminarReceta(dia: string, categoria: string, id: number): void {\n    this.menuData[dia][categoria] = this.menuData[dia][categoria].filter(r => r.id !== id);\n    this.menuDataChange.emit(this.menuData);\n  }\n\n  /**\n   * Guarda el menú actual, creando uno nuevo o actualizando uno existente.\n   */\n  guardarMenu(): void {\n    const diasComidas = this.construirDiasComidas();\n\n    if (diasComidas.length === 0) {\n      this.snackBar.error('El menú no tiene recetas');\n      return;\n    }\n\n    const payload = {\n      menuId: this.menuId!,\n      diasComidas\n    };\n\n    const request$: Observable = this.menuId\n      ? this.menuService.actualizarRecetasMenu(payload)\n      : this.menuService.crearMenuSemanal({ categorias: this.categorias }).pipe(\n        map(resp => {\n          payload.menuId = resp.data!.id!;\n          return payload;\n        }),\n      );\n\n    if (this.menuId) {\n      request$.subscribe({\n        next: () => {\n          this.snackBar.success('Menú guardado correctamente');\n          this.router.navigate(['/superlista/menu']);\n        },\n        error: () => this.snackBar.error('Error al guardar el menú')\n      });\n    } else {\n      // Si es nuevo, primero se crea, luego se actualiza\n      (request$ as Observable).subscribe({\n        next: dto => {\n          this.menuService.actualizarRecetasMenu(dto).subscribe({\n            next: () => {\n              this.snackBar.success('Menú creado correctamente');\n              this.router.navigate(['/superlista/menu']);\n            },\n            error: () => this.snackBar.error('Error al asignar recetas')\n          });\n        },\n        error: () => this.snackBar.error('Error al crear el menú')\n      });\n    }\n  }\n\n  /**\n   * Construye la estructura de días y comidas para enviar al backend.\n   * @returns Array de días con sus categorías y recetas.\n   */\n  private construirDiasComidas(): {\n    dia: DiaEnum;\n    categoria: CategoriaEnum;\n    recetas: { id: number }[];\n  }[] {\n    const diasComidas = [];\n\n    for (const dia of Object.keys(this.menuData)) {\n      for (const cat of Object.keys(this.menuData[dia])) {\n        const recetas = this.menuData[dia][cat] || [];\n\n        diasComidas.push({\n          dia: dia as DiaEnum,\n          categoria: cat as CategoriaEnum,\n          recetas: recetas.map(r => ({ id: r.id! }))\n        });\n      }\n    }\n\n    return diasComidas;\n  }\n\n  /** Timeout usado para gestionar la apertura retardada de tooltips. */\n  tooltipTimeout: any;\n\n  /**\n   * Abre un tooltip tras un pequeño retraso.\n   * @param tooltip Referencia al tooltip.\n   */\n  abrirTooltipConDelay(tooltip: any) {\n    this.tooltipTimeout = setTimeout(() => {\n      tooltip.open();\n    }, 500);\n  }\n\n  /**\n   * Cancela la apertura del tooltip si se abandona antes de tiempo.\n   * @param tooltip Referencia al tooltip.\n   */\n  cancelarTooltip(tooltip: any) {\n    clearTimeout(this.tooltipTimeout);\n    tooltip.close();\n  }\n\n  /** Referencia pública a la utilidad que obtiene el emoji dominante de una receta. */\n  protected readonly getEmojiDominantePorReceta = getEmojiDominantePorReceta;\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n      \n        🍽️ Categoría / Día\n        {{ d.label }}\n      \n      \n      \n      \n        \n          {{ cat }}\n        \n        \n          \n            \n              \n                  {{ getEmojiDominantePorReceta(r) }} {{ r.nombre }}\n              \n              \n              \n            \n          \n        \n      \n      \n    \n  \n\n  \n  \n    \n      💾 Guardar menú\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            🍽️ Categoría / Día        {{ d.label }}                                          {{ cat }}                                                                      {{ getEmojiDominantePorReceta(r) }} {{ r.nombre }}                                                                                                        💾 Guardar menú      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuTablaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/componentes/modal/modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente standalone reutilizable que muestra un modal animado (ventana emergente) en la aplicación SúperLista.\nPermite configurar un título opcional, un tamaño personalizado y emitir un evento cuando se cierra.\nIncluye animaciones de entrada y salida para el fondo (fade) y el contenido (scale).\nExample :\n  \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dialogClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"sm\" | \"lg\" | \"xl\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/modal/modal.component.ts:52\n                            \n                        \n                \n                    \n                        Tamaño opcional del modal ('sm', 'lg' o 'xl').\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/modal/modal.component.ts:50\n                            \n                        \n                \n                    \n                        Título opcional del modal, mostrado en la cabecera.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/componentes/modal/modal.component.ts:54\n                            \n                        \n                \n                    \n                        Evento emitido cuando se cierra el modal.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/modal/modal.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Cierra el modal, oculta la ventana y emite el evento 'closed'.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/componentes/modal/modal.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Abre el modal, haciéndolo visible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/componentes/modal/modal.component.ts:56\n                        \n                    \n\n            \n                \n                    Controla si el modal es visible actualmente.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dialogClass\n                    \n                \n\n                \n                    \n                        getdialogClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/componentes/modal/modal.component.ts:77\n                                \n                            \n                    \n                        \n                                Devuelve la clase CSS correspondiente al tamaño del modal.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {NgClass, NgIf} from '@angular/common';\nimport { trigger, style, animate, transition } from '@angular/animations';\n\n/**\n * @component\n * @name ModalComponent\n * @description\n * Componente standalone reutilizable que muestra un modal animado (ventana emergente) en la aplicación SúperLista.\n * Permite configurar un título opcional, un tamaño personalizado y emitir un evento cuando se cierra.\n * Incluye animaciones de entrada y salida para el fondo (fade) y el contenido (scale).\n *\n * @example\n * \n *   \n * \n */\n@Component({\n  selector: 'app-modal',\n  standalone: true,\n  templateUrl: './modal.component.html',\n  imports: [\n    NgIf,\n    NgClass\n  ],\n  styleUrl: './modal.component.scss',\n  animations: [\n    trigger('fadeOverlay', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('200ms ease-out', style({ opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate('200ms ease-in', style({ opacity: 0 })),\n      ]),\n    ]),\n    trigger('scaleContent', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate('200ms ease-in', style({ transform: 'scale(0.8)', opacity: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class ModalComponent {\n  /** Título opcional del modal, mostrado en la cabecera. */\n  @Input() title?: string;\n  /** Tamaño opcional del modal ('sm', 'lg' o 'xl'). */\n  @Input() size?: 'sm' | 'lg' | 'xl';   // 👈 Añadimos el tamaño opcional\n  /** Evento emitido cuando se cierra el modal. */\n  @Output() closed = new EventEmitter();\n  /** Controla si el modal es visible actualmente. */\n  visible = false;\n\n  /**\n   * Cierra el modal, oculta la ventana y emite el evento 'closed'.\n   */\n  close() {\n    this.visible = false;\n    this.closed.emit();\n  }\n\n  /**\n   * Abre el modal, haciéndolo visible.\n   */\n  open() {\n    this.visible = true;\n  }\n\n  /**\n   * Devuelve la clase CSS correspondiente al tamaño del modal.\n   * @returns Clase de tamaño ('modal-sm', 'modal-lg', 'modal-xl') o vacío si es normal.\n   */\n  get dialogClass(): string {\n    switch (this.size) {\n      case 'sm': return 'modal-sm';\n      case 'lg': return 'modal-lg';\n      case 'xl': return 'modal-xl';\n      default: return ''; // Normal si no pasa nada\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ title }}\n        \n        \n      \n\n      \n        \n      \n\n      \n        \n        \n          Cerrar\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ title }}                                                                          Cerrar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModificarItemsDto.html":{"url":"interfaces/ModificarItemsDto.html","title":"interface - ModificarItemsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModificarItemsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/modificarItemsDto.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenAPI definition\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ingredienteIds\n                                        \n                                \n                                \n                                        \n                                            listaCompraId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ingredienteIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredienteIds:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listaCompraId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listaCompraId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModificarItemsDto { \n    listaCompraId: number;\n    ingredienteIds?: Array;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Param.html":{"url":"interfaces/Param.html","title":"interface - Param","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Param\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/param.ts\n        \n\n\n            \n                Description\n            \n            \n                The parameter to encode.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataFormat\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            explode\n                                        \n                                \n                                \n                                        \n                                            in\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataFormat:         DataFormat | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataFormat | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         DataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         ParamLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         ParamStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StandardParamStyle =\n  | 'matrix'\n  | 'label'\n  | 'form'\n  | 'simple'\n  | 'spaceDelimited'\n  | 'pipeDelimited'\n  | 'deepObject'\n  ;\n\n/**\n * The OpenAPI standard {@link StandardParamStyle}s may be extended by custom styles by the user.\n */\nexport type ParamStyle = StandardParamStyle | string;\n\n/**\n * Standard parameter locations defined by OpenAPI spec\n */\nexport type ParamLocation = 'query' | 'header' | 'path' | 'cookie';\n\n/**\n * Standard types as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataType =\n  | \"integer\"\n  | \"number\"\n  | \"boolean\"\n  | \"string\"\n  | \"object\"\n  | \"array\"\n  ;\n\n/**\n * Standard {@link DataType}s plus your own types/classes.\n */\nexport type DataType = StandardDataType | string;\n\n/**\n * Standard formats as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataFormat =\n  | \"int32\"\n  | \"int64\"\n  | \"float\"\n  | \"double\"\n  | \"byte\"\n  | \"binary\"\n  | \"date\"\n  | \"date-time\"\n  | \"password\"\n  ;\n\nexport type DataFormat = StandardDataFormat | string;\n\n/**\n * The parameter to encode.\n */\nexport interface Param {\n  name: string;\n  value: unknown;\n  in: ParamLocation;\n  style: ParamStyle,\n  explode: boolean;\n  dataType: DataType;\n  dataFormat: DataFormat | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecetaDto.html":{"url":"interfaces/RecetaDto.html","title":"interface - RecetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/model/recetaDto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ingredientes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientes:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IngredienteSimpleDto } from './ingredienteSimpleDto';\n\n\nexport interface RecetaDto { \n    id?: number;\n    nombre?: string;\n    ingredientes?: Array;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RecetaServiceInterface.html":{"url":"interfaces/RecetaServiceInterface.html","title":"interface - RecetaServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RecetaServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/receta.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizarReceta\n                                    \n                                \n                                \n                                    \n                                        altaReceta\n                                    \n                                \n                                \n                                    \n                                        buscarRecetaPorNombre\n                                    \n                                \n                                \n                                    \n                                        buscarTodasRecetas\n                                    \n                                \n                                \n                                    \n                                        eliminarReceta\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarReceta\n                        \n                    \n                \n            \n            \n                \nactualizarReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/receta.serviceInterface.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                recetaDto\n                                            \n                                                            RecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        altaReceta\n                        \n                    \n                \n            \n            \n                \naltaReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/receta.serviceInterface.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                recetaDto\n                                            \n                                                            RecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buscarRecetaPorNombre\n                        \n                    \n                \n            \n            \n                \nbuscarRecetaPorNombre(nombre: string, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/receta.serviceInterface.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nombre\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buscarTodasRecetas\n                        \n                    \n                \n            \n            \n                \nbuscarTodasRecetas(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/receta.serviceInterface.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarReceta\n                        \n                    \n                \n            \n            \n                \neliminarReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/receta.serviceInterface.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                recetaDto\n                                            \n                                                            RecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ApiRespuestaBoolean } from '../model/models';\nimport { ApiRespuestaListRecetaDto } from '../model/models';\nimport { RecetaDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface RecetaServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param recetaDto \n     */\n    actualizarReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param recetaDto \n     */\n    altaReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param nombre \n     */\n    buscarRecetaPorNombre(nombre: string, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     */\n    buscarTodasRecetas(extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param recetaDto \n     */\n    eliminarReceta(recetaDto: RecetaDto, extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistroComponent.html":{"url":"components/RegistroComponent.html","title":"component - RegistroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/registro/registro.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente encargado de gestionar el formulario de registro de nuevos usuarios.\nPermite a los usuarios crear una cuenta proporcionando su nombre, apellidos, correo electrónico, nombre de usuario y contraseña.\nUsa ngx-formly para la construcción dinámica del formulario y muestra un modal para confirmar el éxito o fallo del registro.\nSi el registro es exitoso, redirige automáticamente al login.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registro\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./registro.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registro.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                form\n                            \n                            \n                                mensaje\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                model\n                            \n                            \n                                registroExitoso\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cerrarModal\n                            \n                            \n                                submit\n                            \n                            \n                                volverAtras\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usuariosService: UsuariosService, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/registro/registro.component.ts:147\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usuariosService\n                                                  \n                                                        \n                                                                        UsuariosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio encargado de gestionar las operaciones de usuario.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento de Angular.\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para controlar la navegación del historial.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cerrarModal\n                        \n                    \n                \n            \n            \n                \ncerrarModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/registro/registro.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Acción que se ejecuta al cerrar el modal.\nSi el registro fue exitoso, redirige al usuario a la página de login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/registro/registro.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Envía el formulario al backend para registrar un nuevo usuario.\nSi el registro es exitoso, muestra un mensaje de éxito y prepara la redirección.\nSi falla, muestra un mensaje de error dentro del modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volverAtras\n                        \n                    \n                \n            \n            \n                \nvolverAtras()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/registro/registro.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Vuelve a la página anterior usando el historial de navegación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormlyFieldConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Usuario',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Nombre de usuario',\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Contraseña',\n        required: true,\n        hideRequiredMarker: true,\n        type: 'password',\n        addonRight: {\n          text: '🙈',\n          onClick: (field: { templateOptions: { type: string; addonRight: { text: string } } }) => {\n            const current = field.templateOptions.type;\n            field.templateOptions.type = current === 'password' ? 'text' : 'password';\n            field.templateOptions.addonRight.text = current === 'password' ? '🙉' : '🙈';\n          }\n        }\n      }\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Nombre',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Tu nombre real',\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Apellidos',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Tus apellidos',\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'example@domain.com',\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:35\n                        \n                    \n\n            \n                \n                    Definición de los campos del formulario utilizando ngx-formly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:31\n                        \n                    \n\n            \n                \n                    Formulario reactivo asociado al formulario de registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mensaje\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:108\n                        \n                    \n\n            \n                \n                    Mensaje que se muestra dentro del modal, dependiendo del resultado del registro.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:106\n                        \n                    \n\n            \n                \n                    Referencia al componente de modal usado para mostrar mensajes al usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:33\n                        \n                    \n\n            \n                \n                    Modelo que almacena los datos del formulario (usuario, contraseña, nombre, apellidos, correo).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registroExitoso\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/registro/registro.component.ts:29\n                        \n                    \n\n            \n                \n                    Indica si el registro fue exitoso, usado para controlar la redirección posterior.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {FormlyFieldConfig} from '@ngx-formly/core';\nimport {UsuariosService} from '../../../openapi';\nimport {Router} from '@angular/router';\nimport {ModalComponent} from '../../core/componentes/modal/modal.component';\nimport { Location } from '@angular/common';\n\n/**\n * @component\n * @name RegistroComponent\n * @description\n * Componente encargado de gestionar el formulario de registro de nuevos usuarios.\n * Permite a los usuarios crear una cuenta proporcionando su nombre, apellidos, correo electrónico, nombre de usuario y contraseña.\n * Usa ngx-formly para la construcción dinámica del formulario y muestra un modal para confirmar el éxito o fallo del registro.\n * Si el registro es exitoso, redirige automáticamente al login.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-registro',\n  standalone: false,\n  templateUrl: './registro.component.html',\n  styleUrl: './registro.component.scss'\n})\nexport class RegistroComponent {\n  /** Indica si el registro fue exitoso, usado para controlar la redirección posterior. */\n  registroExitoso = false;\n  /** Formulario reactivo asociado al formulario de registro. */\n  form = new FormGroup({});\n  /** Modelo que almacena los datos del formulario (usuario, contraseña, nombre, apellidos, correo). */\n  model: any = {};\n  /** Definición de los campos del formulario utilizando ngx-formly. */\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Usuario',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Nombre de usuario',\n      },\n    },\n    {\n      key: 'password',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        label: 'Contraseña',\n        required: true,\n        hideRequiredMarker: true,\n        type: 'password',\n        addonRight: {\n          text: '🙈',\n          onClick: (field: { templateOptions: { type: string; addonRight: { text: string } } }) => {\n            const current = field.templateOptions.type;\n            field.templateOptions.type = current === 'password' ? 'text' : 'password';\n            field.templateOptions.addonRight.text = current === 'password' ? '🙉' : '🙈';\n          }\n        }\n      }\n    },\n    {\n      key: 'nombre',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Nombre',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Tu nombre real',\n      },\n    },\n    {\n      key: 'apellido',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'text',\n        label: 'Apellidos',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'Tus apellidos',\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      wrappers: ['horizontal'],\n      props: {\n        type: 'email',\n        label: 'Correo electrónico',\n        required: true,\n        hideRequiredMarker: true,\n        placeholder: 'example@domain.com',\n      },\n    },\n  ];\n\n  /** Referencia al componente de modal usado para mostrar mensajes al usuario. */\n  @ViewChild(ModalComponent) modal!: ModalComponent;\n  /** Mensaje que se muestra dentro del modal, dependiendo del resultado del registro. */\n  mensaje!: string;\n\n  /**\n   * Envía el formulario al backend para registrar un nuevo usuario.\n   * Si el registro es exitoso, muestra un mensaje de éxito y prepara la redirección.\n   * Si falla, muestra un mensaje de error dentro del modal.\n   */\n  submit() {\n    this.usuariosService.altaUsuario(this.model).subscribe({\n      next: data => {\n        this.registroExitoso = true;\n        this.modal.title = '¡Se ha registrado con éxito!';\n        this.mensaje = 'Al cerrar esta ventana se le redirigirá para que pueda iniciar sesión';\n        this.modal.open();\n      },\n      error: err => {\n        this.registroExitoso = false;\n        this.modal.title = '¡Hay un problema!';\n        this.mensaje = err.error.data;\n          this.modal.open();\n      }\n    })\n  }\n\n  /**\n   * Acción que se ejecuta al cerrar el modal.\n   * Si el registro fue exitoso, redirige al usuario a la página de login.\n   */\n  cerrarModal() {\n    if (this.registroExitoso) {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  /**\n   * Vuelve a la página anterior usando el historial de navegación.\n   */\n  volverAtras(): void {\n    this.location.back();\n  }\n\n\n  /**\n   * Constructor del componente.\n   * @param usuariosService Servicio encargado de gestionar las operaciones de usuario.\n   * @param router Servicio de enrutamiento de Angular.\n   * @param location Servicio para controlar la navegación del historial.\n   */\n  constructor(private usuariosService:UsuariosService, protected router: Router, private location: Location) { }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        📝\n        Crear una cuenta\n        Únete a SúperLista y organiza tu comida como un pro 🛒🥦\n      \n\n      \n      \n        \n        Registrarse\n      \n\n      \n      \n        ¿Ya tienes cuenta?\n        Inicia sesión aquí\n      \n    \n\n    \n    \n      \n         Volver a la página anterior\n      \n    \n  \n\n\n\n\n  \n    {{ mensaje }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          📝        Crear una cuenta        Únete a SúperLista y organiza tu comida como un pro 🛒🥦                                  Registrarse                          ¿Ya tienes cuenta?        Inicia sesión aquí                                 Volver a la página anterior                  {{ mensaje }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CrearMenuComponent', 'selector': 'app-crear-menu'},{'name': 'FormlyHorizontalWrapper', 'selector': 'formly-horizontal-wrapper'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomePublicoComponent', 'selector': 'app-home-publico'},{'name': 'IngredientesComponent', 'selector': 'app-ingredientes'},{'name': 'ListadoIngredientesComponent', 'selector': 'app-listado-ingredientes'},{'name': 'ListadoRecetasComponent', 'selector': 'app-listado-recetas'},{'name': 'ListasComponent', 'selector': 'app-listas'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MenuDetalleComponent', 'selector': 'app-menu-detalle'},{'name': 'MenuTablaComponent', 'selector': 'app-menu-tabla'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'RecetasComponent', 'selector': 'app-recetas'},{'name': 'RegistroComponent', 'selector': 'app-registro'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/snack-bar.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio centralizado para mostrar notificaciones flotantes (snackbars) usando Angular Material.\nPermite emitir mensajes de éxito o error personalizables, ubicados en la parte inferior derecha de la pantalla.\nEncapsula MatSnackBar para simplificar su uso en los componentes.\nExample :this.snackbarService.success('Operación realizada con éxito');\nthis.snackbarService.error('Ocurrió un error inesperado');\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/snack-bar.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del servicio.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Angular Material para mostrar snackbars.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/snack-bar.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Muestra un snackbar de error con el mensaje proporcionado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Texto a mostrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/snack-bar.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Muestra un snackbar de éxito con el mensaje proporcionado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Texto a mostrar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n/**\n * @service\n * @name SnackbarService\n * @description\n * Servicio centralizado para mostrar notificaciones flotantes (snackbars) usando Angular Material.\n * Permite emitir mensajes de éxito o error personalizables, ubicados en la parte inferior derecha de la pantalla.\n * Encapsula MatSnackBar para simplificar su uso en los componentes.\n *\n * @example\n * this.snackbarService.success('Operación realizada con éxito');\n * this.snackbarService.error('Ocurrió un error inesperado');\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  /**\n   * Constructor del servicio.\n   * @param snackBar Servicio de Angular Material para mostrar snackbars.\n   */\n  constructor(private snackBar: MatSnackBar) {}\n  /**\n   * Muestra un snackbar de éxito con el mensaje proporcionado.\n   * @param message Texto a mostrar.\n   */\n  success(message: string) {\n    this.snackBar.open(message, '', {\n      duration: 3000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar-success']\n    });\n  }\n  /**\n   * Muestra un snackbar de error con el mensaje proporcionado.\n   * @param message Texto a mostrar.\n   */\n  error(message: string) {\n    this.snackBar.open(message, '', {\n      duration: 3000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      panelClass: ['snackbar-error']\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuarioModule.html":{"url":"modules/UsuarioModule.html","title":"module - UsuarioModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuarioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_declarations\n\n\n\ncluster_UsuarioModule_imports\n\n\n\n\nCrearMenuComponent\n\nCrearMenuComponent\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nUsuarioModule -->\n\nCrearMenuComponent->UsuarioModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nUsuarioModule -->\n\nHomeComponent->UsuarioModule\n\n\n\n\n\nIngredientesComponent\n\nIngredientesComponent\n\nUsuarioModule -->\n\nIngredientesComponent->UsuarioModule\n\n\n\n\n\nListasComponent\n\nListasComponent\n\nUsuarioModule -->\n\nListasComponent->UsuarioModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUsuarioModule -->\n\nMenuComponent->UsuarioModule\n\n\n\n\n\nRecetasComponent\n\nRecetasComponent\n\nUsuarioModule -->\n\nRecetasComponent->UsuarioModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nUsuarioModule -->\n\nHeaderComponent->UsuarioModule\n\n\n\n\n\nListadoIngredientesComponent\n\nListadoIngredientesComponent\n\nUsuarioModule -->\n\nListadoIngredientesComponent->UsuarioModule\n\n\n\n\n\nListadoRecetasComponent\n\nListadoRecetasComponent\n\nUsuarioModule -->\n\nListadoRecetasComponent->UsuarioModule\n\n\n\n\n\nMenuDetalleComponent\n\nMenuDetalleComponent\n\nUsuarioModule -->\n\nMenuDetalleComponent->UsuarioModule\n\n\n\n\n\nMenuTablaComponent\n\nMenuTablaComponent\n\nUsuarioModule -->\n\nMenuTablaComponent->UsuarioModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nUsuarioModule -->\n\nModalComponent->UsuarioModule\n\n\n\n\n\nUsuarioRoutingModule\n\nUsuarioRoutingModule\n\nUsuarioModule -->\n\nUsuarioRoutingModule->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/usuario/usuario.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Módulo principal para las funcionalidades del usuario en la aplicación SúperLista.\nAgrupa todos los componentes relacionados con:\n\nGestión del hogar (home del usuario).\nIngredientes, recetas, menús y listas.\nCreación y edición de menús.\nEste módulo está protegido por rutas con guardas (AuthGuard) y se carga bajo la ruta 'superlista'.\n\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CrearMenuComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            IngredientesComponent\n                        \n                        \n                            ListasComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            RecetasComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            ListadoIngredientesComponent\n                        \n                        \n                            ListadoRecetasComponent\n                        \n                        \n                            MenuDetalleComponent\n                        \n                        \n                            MenuTablaComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            UsuarioRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport {UsuarioRoutingModule} from './usuario-routing.module';\nimport {ListadoIngredientesComponent} from '../core/componentes/listado-ingredientes/listado-ingredientes.component';\nimport {AppModule} from \"../app.module\";\nimport {ListadoRecetasComponent} from '../core/componentes/listado-recetas/listado-recetas.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { CrearMenuComponent } from './crear-menu/crear-menu.component';\nimport {HeaderComponent} from '../core/componentes/header/header.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { IngredientesComponent } from './ingredientes/ingredientes.component';\nimport { ListasComponent } from './listas/listas.component';\nimport { RecetasComponent } from './recetas/recetas.component';\nimport {ModalComponent} from '../core/componentes/modal/modal.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MenuDetalleComponent} from '../core/componentes/menu-detalle/menu-detalle.component';\nimport {MenuTablaComponent} from \"../core/componentes/menu-tabla/menu-tabla.component\";\nimport {FormlyModule} from '@ngx-formly/core';\n\n\n/**\n * @module\n * @name UsuarioModule\n * @description\n * Módulo principal para las funcionalidades del usuario en la aplicación SúperLista.\n * Agrupa todos los componentes relacionados con:\n * - Gestión del hogar (home del usuario).\n * - Ingredientes, recetas, menús y listas.\n * - Creación y edición de menús.\n * Este módulo está protegido por rutas con guardas (AuthGuard) y se carga bajo la ruta 'superlista'.\n */\n@NgModule({\n  declarations: [\n    HomeComponent,\n    CrearMenuComponent,\n    MenuComponent,\n    IngredientesComponent,\n    ListasComponent,\n    RecetasComponent\n  ],\n  imports: [\n    CommonModule,\n    UsuarioRoutingModule,\n    DragDropModule,\n    ListadoIngredientesComponent,\n    ListadoRecetasComponent,\n    HeaderComponent,\n    ModalComponent,\n    ReactiveFormsModule,\n    FormsModule,\n    MenuDetalleComponent,\n    MenuTablaComponent,\n    FormlyModule,\n\n\n  ]\n})\nexport class UsuarioModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuarioRoutingModule.html":{"url":"modules/UsuarioRoutingModule.html","title":"module - UsuarioRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuarioRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/usuario/usuario-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {CrearMenuComponent} from './crear-menu/crear-menu.component';\nimport {MenuComponent} from './menu/menu.component';\nimport {IngredientesComponent} from './ingredientes/ingredientes.component';\nimport {ListasComponent} from './listas/listas.component';\nimport {RecetasComponent} from './recetas/recetas.component';\n\n/**\n * Declaración de rutas hijas bajo el módulo de usuario.\n */\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'menu', component: MenuComponent },\n  { path: 'ingredientes', component: IngredientesComponent },\n  { path: 'crear-menu', component: CrearMenuComponent },\n  { path: 'mis-listas', component: ListasComponent },\n  { path: 'recetas', component: RecetasComponent },\n];\n\n/**\n * @module\n * @name UsuarioRoutingModule\n * @description\n * Módulo de rutas para las secciones del usuario en la aplicación SúperLista.\n * Define las rutas hijas que se cargan bajo el path principal 'superlista',\n * gestionando la navegación entre las distintas páginas:\n * home, menús, ingredientes, listas de la compra, recetas y creación de menús.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuarioRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsuariosServiceInterface.html":{"url":"interfaces/UsuariosServiceInterface.html","title":"interface - UsuariosServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsuariosServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openapi/api/usuarios.serviceInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configuration\n                                        \n                                \n                                \n                                        \n                                            defaultHeaders\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        actualizarUsuario\n                                    \n                                \n                                \n                                    \n                                        altaUsuario\n                                    \n                                \n                                \n                                    \n                                        obtenerUsuarioPorEmail\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarUsuario\n                        \n                    \n                \n            \n            \n                \nactualizarUsuario(actualizarUsuarioDto: ActualizarUsuarioDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/usuarios.serviceInterface.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actualizarUsuarioDto\n                                            \n                                                            ActualizarUsuarioDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        altaUsuario\n                        \n                    \n                \n            \n            \n                \naltaUsuario(usuarioDto: UsuarioDto, extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/usuarios.serviceInterface.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuarioDto\n                                            \n                                                        UsuarioDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerUsuarioPorEmail\n                        \n                    \n                \n            \n            \n                \nobtenerUsuarioPorEmail(extraHttpRequestParams?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/openapi/api/usuarios.serviceInterface.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                extraHttpRequestParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configuration:         Configuration\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configuration\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultHeaders:     HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpHeaders }                                       from '@angular/common/http';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { ActualizarUsuarioDto } from '../model/models';\nimport { ApiRespuestaBoolean } from '../model/models';\nimport { ApiRespuestaUsuarioDto } from '../model/models';\nimport { UsuarioDto } from '../model/models';\n\n\nimport { Configuration }                                     from '../configuration';\n\n\n\nexport interface UsuariosServiceInterface {\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n\n    /**\n     * \n     * \n     * @param actualizarUsuarioDto \n     */\n    actualizarUsuario(actualizarUsuarioDto: ActualizarUsuarioDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     * @param usuarioDto \n     */\n    altaUsuario(usuarioDto: UsuarioDto, extraHttpRequestParams?: any): Observable;\n\n    /**\n     * \n     * \n     */\n    obtenerUsuarioPorEmail(extraHttpRequestParams?: any): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/auth/registro/registro.component.ts\n            \n            component\n            RegistroComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/componentes/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/core/componentes/listado-ingredientes/listado-ingredientes.component.ts\n            \n            component\n            ListadoIngredientesComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/core/componentes/listado-recetas/listado-recetas.component.ts\n            \n            component\n            ListadoRecetasComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/core/componentes/menu-detalle/menu-detalle.component.ts\n            \n            component\n            MenuDetalleComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/componentes/menu-tabla/menu-tabla.component.ts\n            \n            component\n            MenuTablaComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                        src/app/core/componentes/menu-tabla/menu-tabla.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/componentes/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/componentes/wrappers/formly-horizontal-wrapper/formly-horizontal-wrapper.component.ts\n            \n            component\n            FormlyHorizontalWrapper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/auth.interceptor.ts\n            \n            function\n            isTokenExpired\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/DataRefreshService.ts\n            \n            injectable\n            DataRefreshService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/services/snack-bar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/app/core/services/utils.ts\n            \n            function\n            getCardClasses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/utils.ts\n            \n            function\n            getCardClassesPorReceta\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/utils.ts\n            \n            function\n            getEmojiDominantePorReceta\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/utils.ts\n            \n            function\n            getEmojiPorCategoria\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/utils.ts\n            \n            variable\n            EMOJIS_POR_CATEGORIA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/home-publico/home-publico.component.ts\n            \n            component\n            HomePublicoComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/usuario/crear-menu/crear-menu.component.ts\n            \n            component\n            CrearMenuComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/usuario/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                src/app/usuario/ingredientes/ingredientes.component.ts\n            \n            component\n            IngredientesComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/usuario/listas/listas.component.ts\n            \n            component\n            ListasComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/usuario/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/usuario/recetas/recetas.component.ts\n            \n            component\n            RecetasComponent\n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/openapi/api.base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/openapi/api/api.ts\n            \n            variable\n            APIS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/api/authController.service.ts\n            \n            injectable\n            AuthControllerService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/openapi/api/authController.serviceInterface.ts\n            \n            interface\n            AuthControllerServiceInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/openapi/api/categoriaIngrediente.service.ts\n            \n            injectable\n            CategoriaIngredienteService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/openapi/api/categoriaIngrediente.serviceInterface.ts\n            \n            interface\n            CategoriaIngredienteServiceInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/openapi/api/ingrediente.service.ts\n            \n            injectable\n            IngredienteService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/openapi/api/ingrediente.serviceInterface.ts\n            \n            interface\n            IngredienteServiceInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/openapi/api/listaCompraResource.service.ts\n            \n            injectable\n            ListaCompraResourceService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/openapi/api/listaCompraResource.serviceInterface.ts\n            \n            interface\n            ListaCompraResourceServiceInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/openapi/api/menuSemanal.service.ts\n            \n            injectable\n            MenuSemanalService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/openapi/api/menuSemanal.serviceInterface.ts\n            \n            interface\n            MenuSemanalServiceInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/openapi/api/receta.service.ts\n            \n            injectable\n            RecetaService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/openapi/api/receta.serviceInterface.ts\n            \n            interface\n            RecetaServiceInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/openapi/api/usuarios.service.ts\n            \n            injectable\n            UsuariosService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/openapi/api/usuarios.serviceInterface.ts\n            \n            interface\n            UsuariosServiceInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/openapi/configuration.ts\n            \n            class\n            Configuration\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/openapi/configuration.ts\n            \n            interface\n            ConfigurationParameters\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/openapi/encoder.ts\n            \n            class\n            CustomHttpParameterCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/openapi/model/actualizarRecetasMenuDto.ts\n            \n            interface\n            ActualizarRecetasMenuDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/openapi/model/actualizarUsuarioDto.ts\n            \n            interface\n            ActualizarUsuarioDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/openapi/model/addRecetaDto.ts\n            \n            variable\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/addRecetaDto.ts\n            \n            variable\n            DiaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/addRecetaDto.ts\n            \n            type alias\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/addRecetaDto.ts\n            \n            type alias\n            DiaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaBoolean.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaBoolean.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListIngredienteDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListIngredienteDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListListaCompraDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListListaCompraDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListMenuSemanalDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListMenuSemanalDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListRecetaDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListRecetaDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListaCompraDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaListaCompraDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaLoginResponse.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaLoginResponse.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaMenuSemanalDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaMenuSemanalDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaUsuarioDto.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaUsuarioDto.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaVoid.ts\n            \n            variable\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/apiRespuestaVoid.ts\n            \n            type alias\n            EstadoEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/model/categoriaIngredienteDto.ts\n            \n            interface\n            CategoriaIngredienteDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/openapi/model/diaComidaDto.ts\n            \n            variable\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/diaComidaDto.ts\n            \n            variable\n            DiaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/diaComidaDto.ts\n            \n            type alias\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/diaComidaDto.ts\n            \n            type alias\n            DiaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/model/eliminarListaDto.ts\n            \n            interface\n            EliminarListaDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/openapi/model/generarListaDto.ts\n            \n            interface\n            GenerarListaDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/openapi/model/ingredienteDto.ts\n            \n            variable\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/ingredienteDto.ts\n            \n            type alias\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/ingredienteSimpleDto.ts\n            \n            variable\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/ingredienteSimpleDto.ts\n            \n            type alias\n            CategoriaEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/model/listaCompraDto.ts\n            \n            interface\n            ListaCompraDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/openapi/model/loginRequest.ts\n            \n            interface\n            LoginRequest\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/openapi/model/loginResponse.ts\n            \n            interface\n            LoginResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        src/openapi/model/menuSemanalCreateDto.ts\n            \n            variable\n            CategoriasEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/menuSemanalCreateDto.ts\n            \n            type alias\n            CategoriasEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/model/menuSemanalDto.ts\n            \n            interface\n            MenuSemanalDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/openapi/model/modificarItemsDto.ts\n            \n            interface\n            ModificarItemsDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/openapi/model/recetaDto.ts\n            \n            interface\n            RecetaDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/openapi/model/usuarioDto.ts\n            \n            variable\n            RolEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/model/usuarioDto.ts\n            \n            type alias\n            RolEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openapi/param.ts\n            \n            interface\n            Param\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            DataFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            DataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            ParamLocation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            ParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            StandardDataFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            StandardDataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/param.ts\n            \n            type alias\n            StandardParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/openapi/variables.ts\n            \n            variable\n            BASE_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/openapi/variables.ts\n            \n            variable\n            COLLECTION_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.2.7\n        \n            @angular/cdk : ^19.2.10\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.7\n        \n            @angular/localize : ^19.2.7\n        \n            @angular/material : ^19.2.10\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^18.0.0\n        \n            @ngx-formly/bootstrap : ^6.3.12\n        \n            @ngx-formly/core : ^6.3.12\n        \n            bootstrap : ^5.3.5\n        \n            bootstrap-icons : ^1.11.3\n        \n            html2canvas : ^1.4.1\n        \n            jspdf : ^3.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCardClasses   (src/.../utils.ts)\n                        \n                        \n                            getCardClassesPorReceta   (src/.../utils.ts)\n                        \n                        \n                            getEmojiDominantePorReceta   (src/.../utils.ts)\n                        \n                        \n                            getEmojiPorCategoria   (src/.../utils.ts)\n                        \n                        \n                            isTokenExpired   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCardClasses\n                        \n                    \n                \n            \n            \n                \ngetCardClasses(categoria: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardClassesPorReceta\n                        \n                    \n                \n            \n            \n                \ngetCardClassesPorReceta(receta: RecetaDto)\n                \n            \n\n\n\n\n            \n                \n                        Calcula las clases de borde dominantes de una receta según la categoría mayoritaria de sus ingredientes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                receta\n                                            \n                                                            RecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto RecetaDto.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                Array de clases CSS.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmojiDominantePorReceta\n                        \n                    \n                \n            \n            \n                \ngetEmojiDominantePorReceta(receta: RecetaDto)\n                \n            \n\n\n\n\n            \n                \n                        Calcula el emoji dominante de una receta según la categoría mayoritaria de sus ingredientes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                receta\n                                            \n                                                            RecetaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto RecetaDto.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Emoji representativo como string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmojiPorCategoria\n                        \n                    \n                \n            \n            \n                \ngetEmojiPorCategoria(categoria: string)\n                \n            \n\n\n\n\n            \n                \n                        Devuelve el emoji correspondiente a una categoría.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de la categoría.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Emoji representativo como string.\n\n                            \n                \n            \n        \n    \n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \nisTokenExpired(token: string)\n                \n            \n\n\n\n\n            \n                \n                        Función auxiliar para verificar si un token JWT ha expirado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token JWT.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si ha expirado, false si aún es válido.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSuperlistafront\nEste proyecto fue generado usando Angular CLI, versión 19.2.8.\nServidor de desarrollo\nPara iniciar un servidor local de desarrollo, ejecuta:\nExample :ng serveUna vez que el servidor esté corriendo, abre tu navegador en la dirección http://localhost:4200/.La aplicación se recargará automáticamente cada vez que modifiques alguno de los archivos fuente.\nGeneración de código (Scaffolding)\nAngular CLI incluye potentes herramientas de scaffolding para generar automáticamente estructuras de código.Por ejemplo, para generar un nuevo componente, ejecuta:\nExample :ng generate component nombre-del-componenteSi quieres ver la lista completa de esquemas disponibles (como components, directives, pipes), ejecuta:\nExample :ng generate --helpCompilación (Build)\nPara compilar el proyecto, usa:\nExample :ng buildEsto generará los artefactos de compilación en la carpeta dist/.Por defecto, el build de producción optimiza tu aplicación para obtener el mejor rendimiento y velocidad.\nEjecutar tests unitarios\nPara lanzar los tests unitarios usando Karma, ejecuta:\nExample :ng testEjecutar tests end-to-end\nPara realizar pruebas end-to-end (e2e), ejecuta:\nExample :ng e2eTen en cuenta que Angular CLI no incluye un framework e2e por defecto, así que puedes elegir el que mejor se adapte a tus necesidades.\nRecursos adicionales\nSi quieres más información sobre cómo usar Angular CLI, incluyendo referencias detalladas de comandos, visita la página oficial:Angular CLI - Overview and Command Reference.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuarioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuarioRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_UsuarioModule\n\n\n\ncluster_UsuarioModule_declarations\n\n\n\ncluster_UsuarioModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomePublicoComponent\n\nHomePublicoComponent\n\nAppModule -->\n\nHomePublicoComponent->AppModule\n\n\n\n\n\nListadoRecetasComponent \n\nListadoRecetasComponent \n\nListadoRecetasComponent  -->\n\nAppModule->ListadoRecetasComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiModule\n\nApiModule\n\nAppModule -->\n\nApiModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nUsuarioModule\n\nUsuarioModule\n\nUsuarioModule -->\n\nHeaderComponent->UsuarioModule\n\n\n\n\n\nListadoIngredientesComponent\n\nListadoIngredientesComponent\n\nAppModule -->\n\nListadoIngredientesComponent->AppModule\n\n\n\nUsuarioModule -->\n\nListadoIngredientesComponent->UsuarioModule\n\n\n\n\n\nListadoRecetasComponent\n\nListadoRecetasComponent\n\nAppModule -->\n\nListadoRecetasComponent->AppModule\n\n\n\nUsuarioModule -->\n\nListadoRecetasComponent->UsuarioModule\n\n\n\n\n\nMenuDetalleComponent\n\nMenuDetalleComponent\n\nAppModule -->\n\nMenuDetalleComponent->AppModule\n\n\n\nUsuarioModule -->\n\nMenuDetalleComponent->UsuarioModule\n\n\n\n\n\nMenuTablaComponent\n\nMenuTablaComponent\n\nAppModule -->\n\nMenuTablaComponent->AppModule\n\n\n\nUsuarioModule -->\n\nMenuTablaComponent->UsuarioModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nAppModule -->\n\nModalComponent->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nModalComponent->AuthModule\n\n\n\nUsuarioModule -->\n\nModalComponent->UsuarioModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegistroComponent\n\nRegistroComponent\n\nAuthModule -->\n\nRegistroComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nCrearMenuComponent\n\nCrearMenuComponent\n\nUsuarioModule -->\n\nCrearMenuComponent->UsuarioModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nUsuarioModule -->\n\nHomeComponent->UsuarioModule\n\n\n\n\n\nIngredientesComponent\n\nIngredientesComponent\n\nUsuarioModule -->\n\nIngredientesComponent->UsuarioModule\n\n\n\n\n\nListasComponent\n\nListasComponent\n\nUsuarioModule -->\n\nListasComponent->UsuarioModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUsuarioModule -->\n\nMenuComponent->UsuarioModule\n\n\n\n\n\nRecetasComponent\n\nRecetasComponent\n\nUsuarioModule -->\n\nRecetasComponent->UsuarioModule\n\n\n\n\n\nUsuarioRoutingModule\n\nUsuarioRoutingModule\n\nUsuarioModule -->\n\nUsuarioRoutingModule->UsuarioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        20 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoriaEnum   (src/.../addRecetaDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../diaComidaDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../ingredienteDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../ingredienteSimpleDto.ts)\n                        \n                        \n                            CategoriasEnum   (src/.../menuSemanalCreateDto.ts)\n                        \n                        \n                            DataFormat   (src/.../param.ts)\n                        \n                        \n                            DataType   (src/.../param.ts)\n                        \n                        \n                            DiaEnum   (src/.../addRecetaDto.ts)\n                        \n                        \n                            DiaEnum   (src/.../diaComidaDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaBoolean.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListaCompraDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListIngredienteDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListListaCompraDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListMenuSemanalDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListRecetaDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaLoginResponse.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaMenuSemanalDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaUsuarioDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaVoid.ts)\n                        \n                        \n                            ParamLocation   (src/.../param.ts)\n                        \n                        \n                            ParamStyle   (src/.../param.ts)\n                        \n                        \n                            RolEnum   (src/.../usuarioDto.ts)\n                        \n                        \n                            StandardDataFormat   (src/.../param.ts)\n                        \n                        \n                            StandardDataType   (src/.../param.ts)\n                        \n                        \n                            StandardParamStyle   (src/.../param.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/openapi/model/addRecetaDto.ts\n    \n    \n        \n            \n                \n                    \n                    CategoriaEnum\n                \n            \n            \n                \n                        \"DESAYUNO\" | \"ALMUERZO\" | \"COMIDA\" | \"MERIENDA\" | \"CENA\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DiaEnum\n                \n            \n            \n                \n                        \"LUNES\" | \"MARTES\" | \"MIERCOLES\" | \"JUEVES\" | \"VIERNES\" | \"SABADO\" | \"DOMINGO\"\n\n                \n            \n        \n    \n    src/openapi/model/diaComidaDto.ts\n    \n    \n        \n            \n                \n                    \n                    CategoriaEnum\n                \n            \n            \n                \n                        \"DESAYUNO\" | \"ALMUERZO\" | \"COMIDA\" | \"MERIENDA\" | \"CENA\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DiaEnum\n                \n            \n            \n                \n                        \"LUNES\" | \"MARTES\" | \"MIERCOLES\" | \"JUEVES\" | \"VIERNES\" | \"SABADO\" | \"DOMINGO\"\n\n                \n            \n        \n    \n    src/openapi/model/ingredienteDto.ts\n    \n    \n        \n            \n                \n                    \n                    CategoriaEnum\n                \n            \n            \n                \n                        \"VERDURAS\" | \"FRUTAS\" | \"CARNE\" | \"PESCADO\" | \"LEGUMBRES\" | \"LACTEOS\" | \"CEREALES\" | \"FRUTOS_SECOS\" | \"GRASAS_ACEITES\" | \"ESPECIAS\" | \"CONSERVAS\" | \"CONGELADOS\" | \"OTROS\"\n\n                \n            \n        \n    \n    src/openapi/model/ingredienteSimpleDto.ts\n    \n    \n        \n            \n                \n                    \n                    CategoriaEnum\n                \n            \n            \n                \n                        \"VERDURAS\" | \"FRUTAS\" | \"CARNE\" | \"PESCADO\" | \"LEGUMBRES\" | \"LACTEOS\" | \"CEREALES\" | \"FRUTOS_SECOS\" | \"GRASAS_ACEITES\" | \"ESPECIAS\" | \"CONSERVAS\" | \"CONGELADOS\" | \"OTROS\"\n\n                \n            \n        \n    \n    src/openapi/model/menuSemanalCreateDto.ts\n    \n    \n        \n            \n                \n                    \n                    CategoriasEnum\n                \n            \n            \n                \n                        \"DESAYUNO\" | \"ALMUERZO\" | \"COMIDA\" | \"MERIENDA\" | \"CENA\"\n\n                \n            \n        \n    \n    src/openapi/param.ts\n    \n    \n        \n            \n                \n                    \n                    DataFormat\n                \n            \n            \n                \n                        StandardDataFormat | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataType\n                \n            \n            \n                \n                    Standard DataTypes plus your own types/classes.\n\n                \n            \n            \n                \n                        StandardDataType | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamLocation\n                \n            \n            \n                \n                    Standard parameter locations defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"query\" | \"header\" | \"path\" | \"cookie\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamStyle\n                \n            \n            \n                \n                    The OpenAPI standard StandardParamStyles may be extended by custom styles by the user.\n\n                \n            \n            \n                \n                            StandardParamStyle | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataFormat\n                \n            \n            \n                \n                    Standard formats as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"int32\" | \"int64\" | \"float\" | \"double\" | \"byte\" | \"binary\" | \"date\" | \"date-time\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataType\n                \n            \n            \n                \n                    Standard types as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"integer\" | \"number\" | \"boolean\" | \"string\" | \"object\" | \"array\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardParamStyle\n                \n            \n            \n                \n                    Standard parameter styles defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"matrix\" | \"label\" | \"form\" | \"simple\" | \"spaceDelimited\" | \"pipeDelimited\" | \"deepObject\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaBoolean.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaListaCompraDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaListIngredienteDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaListListaCompraDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaListMenuSemanalDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaListRecetaDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaLoginResponse.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaMenuSemanalDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaUsuarioDto.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/apiRespuestaVoid.ts\n    \n    \n        \n            \n                \n                    \n                    EstadoEnum\n                \n            \n            \n                \n                        \"exito\" | \"error\"\n\n                \n            \n        \n    \n    src/openapi/model/usuarioDto.ts\n    \n    \n        \n            \n                \n                    \n                    RolEnum\n                \n            \n            \n                \n                        \"ADMIN\" | \"USER\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIS   (src/.../api.ts)\n                        \n                        \n                            BASE_PATH   (src/.../variables.ts)\n                        \n                        \n                            bootstrap   (src/.../menu-tabla.component.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../addRecetaDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../diaComidaDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../ingredienteDto.ts)\n                        \n                        \n                            CategoriaEnum   (src/.../ingredienteSimpleDto.ts)\n                        \n                        \n                            CategoriasEnum   (src/.../menuSemanalCreateDto.ts)\n                        \n                        \n                            COLLECTION_FORMATS   (src/.../variables.ts)\n                        \n                        \n                            DiaEnum   (src/.../addRecetaDto.ts)\n                        \n                        \n                            DiaEnum   (src/.../diaComidaDto.ts)\n                        \n                        \n                            EMOJIS_POR_CATEGORIA   (src/.../utils.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaBoolean.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListaCompraDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListIngredienteDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListListaCompraDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListMenuSemanalDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaListRecetaDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaLoginResponse.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaMenuSemanalDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaUsuarioDto.ts)\n                        \n                        \n                            EstadoEnum   (src/.../apiRespuestaVoid.ts)\n                        \n                        \n                            RolEnum   (src/.../usuarioDto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/openapi/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APIS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthControllerService, CategoriaIngredienteService, IngredienteService, ListaCompraResourceService, MenuSemanalService, RecetaService, UsuariosService]\n                    \n                \n\n\n        \n    \n\n    src/openapi/variables.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('basePath')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_FORMATS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/componentes/menu-tabla/menu-tabla.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/addRecetaDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoriaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Desayuno: 'DESAYUNO' as CategoriaEnum,\n        Almuerzo: 'ALMUERZO' as CategoriaEnum,\n        Comida: 'COMIDA' as CategoriaEnum,\n        Merienda: 'MERIENDA' as CategoriaEnum,\n        Cena: 'CENA' as CategoriaEnum\n    }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DiaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Lunes: 'LUNES' as DiaEnum,\n        Martes: 'MARTES' as DiaEnum,\n        Miercoles: 'MIERCOLES' as DiaEnum,\n        Jueves: 'JUEVES' as DiaEnum,\n        Viernes: 'VIERNES' as DiaEnum,\n        Sabado: 'SABADO' as DiaEnum,\n        Domingo: 'DOMINGO' as DiaEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/diaComidaDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoriaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Desayuno: 'DESAYUNO' as CategoriaEnum,\n        Almuerzo: 'ALMUERZO' as CategoriaEnum,\n        Comida: 'COMIDA' as CategoriaEnum,\n        Merienda: 'MERIENDA' as CategoriaEnum,\n        Cena: 'CENA' as CategoriaEnum\n    }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DiaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Lunes: 'LUNES' as DiaEnum,\n        Martes: 'MARTES' as DiaEnum,\n        Miercoles: 'MIERCOLES' as DiaEnum,\n        Jueves: 'JUEVES' as DiaEnum,\n        Viernes: 'VIERNES' as DiaEnum,\n        Sabado: 'SABADO' as DiaEnum,\n        Domingo: 'DOMINGO' as DiaEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/ingredienteDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoriaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Verduras: 'VERDURAS' as CategoriaEnum,\n        Frutas: 'FRUTAS' as CategoriaEnum,\n        Carne: 'CARNE' as CategoriaEnum,\n        Pescado: 'PESCADO' as CategoriaEnum,\n        Legumbres: 'LEGUMBRES' as CategoriaEnum,\n        Lacteos: 'LACTEOS' as CategoriaEnum,\n        Cereales: 'CEREALES' as CategoriaEnum,\n        FrutosSecos: 'FRUTOS_SECOS' as CategoriaEnum,\n        GrasasAceites: 'GRASAS_ACEITES' as CategoriaEnum,\n        Especias: 'ESPECIAS' as CategoriaEnum,\n        Conservas: 'CONSERVAS' as CategoriaEnum,\n        Congelados: 'CONGELADOS' as CategoriaEnum,\n        Otros: 'OTROS' as CategoriaEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/ingredienteSimpleDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoriaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Verduras: 'VERDURAS' as CategoriaEnum,\n        Frutas: 'FRUTAS' as CategoriaEnum,\n        Carne: 'CARNE' as CategoriaEnum,\n        Pescado: 'PESCADO' as CategoriaEnum,\n        Legumbres: 'LEGUMBRES' as CategoriaEnum,\n        Lacteos: 'LACTEOS' as CategoriaEnum,\n        Cereales: 'CEREALES' as CategoriaEnum,\n        FrutosSecos: 'FRUTOS_SECOS' as CategoriaEnum,\n        GrasasAceites: 'GRASAS_ACEITES' as CategoriaEnum,\n        Especias: 'ESPECIAS' as CategoriaEnum,\n        Conservas: 'CONSERVAS' as CategoriaEnum,\n        Congelados: 'CONGELADOS' as CategoriaEnum,\n        Otros: 'OTROS' as CategoriaEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/menuSemanalCreateDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoriasEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Desayuno: 'DESAYUNO' as CategoriasEnum,\n        Almuerzo: 'ALMUERZO' as CategoriasEnum,\n        Comida: 'COMIDA' as CategoriasEnum,\n        Merienda: 'MERIENDA' as CategoriasEnum,\n        Cena: 'CENA' as CategoriasEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EMOJIS_POR_CATEGORIA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  FRUTAS: '🍓',\n  VERDURAS: '🥦',\n  CARNE: '🍗',\n  PESCADO: '🐟',\n  LEGUMBRES: '🫘',\n  LACTEOS: '🍶',\n  CEREALES: '🌾',\n  GRASAS_ACEITES: '🧈',\n  FRUTOS_SECOS: '🥜',\n  DEFAULT: '🍴'\n}\n                    \n                \n\n            \n                \n                    Mapa de categorías a emojis representativos.\n\n                \n            \n\n        \n    \n\n    src/openapi/model/apiRespuestaBoolean.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaListaCompraDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaListIngredienteDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaListListaCompraDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaListMenuSemanalDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaListRecetaDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaLoginResponse.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaMenuSemanalDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaUsuarioDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/apiRespuestaVoid.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EstadoEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Exito: 'exito' as EstadoEnum,\n        Error: 'error' as EstadoEnum\n    }\n                    \n                \n\n\n        \n    \n\n    src/openapi/model/usuarioDto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RolEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n        Admin: 'ADMIN' as RolEnum,\n        User: 'USER' as RolEnum\n    }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
